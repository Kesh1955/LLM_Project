id,question,gold_answer,clean_gold_answer,program,table,html_table,model,prompt_style,prompt,model_program_prediction,program_equivalence
Single_RE/2015/page_148.pdf-1,"what is the total value of granted shares of everest re during 2015 , in millions?",1.9,1.9,"multiply(10705, 178.84), divide(#0, const_1000000)","[['performance share unit awards', 'year ended december 31 2015 shares', 'year ended december 31 2015 weighted- average grant date fair value'], ['outstanding at january 1,', '-', '$ -'], ['granted', '10705', '178.84'], ['vested', '-', '-'], ['forfeited', '-', '-'], ['outstanding at december 31,', '10705', '178.84']]","<table>
  <thead>
    <tr>
      <th>performance share unit awards</th>
      <th>year ended december 31 2015 shares</th>
      <th>year ended december 31 2015 weighted- average grant date fair value</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>outstanding at january 1,</td><td>-</td><td>$ -</td></tr>
    <tr><td>granted</td><td>10705</td><td>178.84</td></tr>
    <tr><td>vested</td><td>-</td><td>-</td></tr>
    <tr><td>forfeited</td><td>-</td><td>-</td></tr>
    <tr><td>outstanding at december 31,</td><td>10705</td><td>178.84</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""multiply(10705, 178.84), divide(#0, const_1000000)""",1
Single_AMT/2010/page_41.pdf-2,what portion of the new sites acquired or constructed during 2010 is located outside united states?,87.9%,87.9,"add(947, 6865), divide(6865, #0)","[['new sites ( acquired or constructed )', '2010', '2009', '2008'], ['domestic', '947', '528', '160'], ['international ( 1 )', '6865', '3022', '801']]","<table>
  <thead>
    <tr>
      <th>new sites ( acquired or constructed )</th>
      <th>2010</th>
      <th>2009</th>
      <th>2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>domestic</td><td>947</td><td>528</td><td>160</td></tr>
    <tr><td>international ( 1 )</td><td>6865</td><td>3022</td><td>801</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(947, 6865), divide(6865, #0)""",1
Single_UNP/2008/page_34.pdf-2,what was the average other income,108.7,108.7,"add(92, 116), add(#0, 118), divide(#1, const_3)","[['millions of dollars', '2008', '2007', '2006', '% (  % ) change 2008 v 2007', '% (  % ) change 2007 v 2006'], ['other income', '$ 92', '$ 116', '$ 118', '( 21 ) % (  % )', '( 2 ) % (  % )'], ['interest expense', '-511 ( 511 )', '-482 ( 482 )', '-477 ( 477 )', '6', '1'], ['income taxes', '-1318 ( 1318 )', '-1154 ( 1154 )', '-919 ( 919 )', '14 % (  % )', '26 % (  % )']]","<table>
  <thead>
    <tr>
      <th>millions of dollars</th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
      <th>% (  % ) change 2008 v 2007</th>
      <th>% (  % ) change 2007 v 2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>other income</td><td>$ 92</td><td>$ 116</td><td>$ 118</td><td>( 21 ) % (  % )</td><td>( 2 ) % (  % )</td></tr>
    <tr><td>interest expense</td><td>-511 ( 511 )</td><td>-482 ( 482 )</td><td>-477 ( 477 )</td><td>6</td><td>1</td></tr>
    <tr><td>income taxes</td><td>-1318 ( 1318 )</td><td>-1154 ( 1154 )</td><td>-919 ( 919 )</td><td>14 % (  % )</td><td>26 % (  % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(92, 116), add(#0, 118), divide(#1, 3)""",1
Single_PNC/2012/page_222.pdf-3,"what was the average cost per unit for the weighted-average grant-date fair value of incentive/ performance unit share awards and restricted stock/unit awards granted in 2012 , 2011 and 2010?",59.5,59.5,"add(60.68, 63.25), add(#0, 54.59), divide(#1, const_3)","[['shares in thousands december 31 2011', 'nonvested incentive/ performance unit shares 830', 'weighted-averagegrantdate fairvalue $ 61.68', 'nonvested restricted stock/ unit shares 2512', 'weighted-averagegrantdate fairvalue $ 54.87'], ['granted', '465', '60.70', '1534', '60.67'], ['vested', '-100 ( 100 )', '64.21', '-831 ( 831 )', '45.47'], ['forfeited', '-76 ( 76 )', '60.27', '-154 ( 154 )', '60.51'], ['december 31 2012', '1119', '$ 61.14', '3061', '$ 60.04']]","<table>
  <thead>
    <tr>
      <th>shares in thousands december 31 2011</th>
      <th>nonvested incentive/ performance unit shares 830</th>
      <th>weighted-averagegrantdate fairvalue $ 61.68</th>
      <th>nonvested restricted stock/ unit shares 2512</th>
      <th>weighted-averagegrantdate fairvalue $ 54.87</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>granted</td><td>465</td><td>60.70</td><td>1534</td><td>60.67</td></tr>
    <tr><td>vested</td><td>-100 ( 100 )</td><td>64.21</td><td>-831 ( 831 )</td><td>45.47</td></tr>
    <tr><td>forfeited</td><td>-76 ( 76 )</td><td>60.27</td><td>-154 ( 154 )</td><td>60.51</td></tr>
    <tr><td>december 31 2012</td><td>1119</td><td>$ 61.14</td><td>3061</td><td>$ 60.04</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(60.68, 63.25), add(#0, 54.59), divide(#1, 3)""",0
Single_ADBE/2012/page_102.pdf-2,what is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?,-1.9%,-1.9,"subtract(160468, 163607), divide(#0, 163607)","[['', '2012', '2011'], ['beginning balance', '$ 163607', '$ 156925'], ['gross increases in unrecognized tax benefits 2013 prior year tax positions', '1038', '11901'], ['gross decreases in unrecognized tax benefits 2013 prior year tax positions', '2014', '-4154 ( 4154 )'], ['gross increases in unrecognized tax benefits 2013 current year tax positions', '23771', '32420'], ['settlements with taxing authorities', '-1754 ( 1754 )', '-29101 ( 29101 )'], ['lapse of statute of limitations', '-25387 ( 25387 )', '-3825 ( 3825 )'], ['foreign exchange gains and losses', '-807 ( 807 )', '-559 ( 559 )'], ['ending balance', '$ 160468', '$ 163607']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>beginning balance</td><td>$ 163607</td><td>$ 156925</td></tr>
    <tr><td>gross increases in unrecognized tax benefits 2013 prior year tax positions</td><td>1038</td><td>11901</td></tr>
    <tr><td>gross decreases in unrecognized tax benefits 2013 prior year tax positions</td><td>2014</td><td>-4154 ( 4154 )</td></tr>
    <tr><td>gross increases in unrecognized tax benefits 2013 current year tax positions</td><td>23771</td><td>32420</td></tr>
    <tr><td>settlements with taxing authorities</td><td>-1754 ( 1754 )</td><td>-29101 ( 29101 )</td></tr>
    <tr><td>lapse of statute of limitations</td><td>-25387 ( 25387 )</td><td>-3825 ( 3825 )</td></tr>
    <tr><td>foreign exchange gains and losses</td><td>-807 ( 807 )</td><td>-559 ( 559 )</td></tr>
    <tr><td>ending balance</td><td>$ 160468</td><td>$ 163607</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(160468, 163607), divide(#0, 163607), multiply(#1, const_100)""",0
Single_AAP/2013/page_32.pdf-1,what is the total return for every dollar invested in advanced auto parts in january 2009 and sold in january 2011?,0.96,0.96,"subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)","[['company/index', 'january 3 2009', 'january 2 2010', 'january 1 2011', 'december 31 2011', 'december 29 2012', 'december 28 2013'], ['advance auto parts', '$ 100.00', '$ 119.28', '$ 195.80', '$ 206.86', '$ 213.14', '$ 327.63'], ['s&p 500 index', '100.00', '119.67', '134.97', '134.96', '150.51', '197.62'], ['s&p retail index', '100.00', '141.28', '174.70', '179.79', '219.77', '321.02']]","<table>
  <thead>
    <tr>
      <th>company/index</th>
      <th>january 3 2009</th>
      <th>january 2 2010</th>
      <th>january 1 2011</th>
      <th>december 31 2011</th>
      <th>december 29 2012</th>
      <th>december 28 2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>advance auto parts</td><td>$ 100.00</td><td>$ 119.28</td><td>$ 195.80</td><td>$ 206.86</td><td>$ 213.14</td><td>$ 327.63</td></tr>
    <tr><td>s&p 500 index</td><td>100.00</td><td>119.67</td><td>134.97</td><td>134.96</td><td>150.51</td><td>197.62</td></tr>
    <tr><td>s&p retail index</td><td>100.00</td><td>141.28</td><td>174.70</td><td>179.79</td><td>219.77</td><td>321.02</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(195.80, 100.00), divide(#0, 100.00)""",1
Single_ALXN/2007/page_49.pdf-1,what is the percent change in the investment into alexion pharmaceuticals between 7/02 and 7/03?,8.4%,8.4,"subtract(108.38, 100), divide(#0, 100)","[['', '7/02', '7/03', '7/04', '7/05', '12/05', '12/06', '12/07'], ['alexion pharmaceuticals inc .', '100.00', '108.38', '102.64', '167.89', '130.56', '260.41', '483.75'], ['nasdaq composite', '100.00', '128.98', '142.51', '164.85', '168.24', '187.43', '204.78'], ['nasdaq biotechnology', '100.00', '149.29', '146.51', '176.75', '186.10', '183.89', '187.04']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>7/02</th>
      <th>7/03</th>
      <th>7/04</th>
      <th>7/05</th>
      <th>12/05</th>
      <th>12/06</th>
      <th>12/07</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>alexion pharmaceuticals inc .</td><td>100.00</td><td>108.38</td><td>102.64</td><td>167.89</td><td>130.56</td><td>260.41</td><td>483.75</td></tr>
    <tr><td>nasdaq composite</td><td>100.00</td><td>128.98</td><td>142.51</td><td>164.85</td><td>168.24</td><td>187.43</td><td>204.78</td></tr>
    <tr><td>nasdaq biotechnology</td><td>100.00</td><td>149.29</td><td>146.51</td><td>176.75</td><td>186.10</td><td>183.89</td><td>187.04</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(108.38, 100.00), divide(#0, 100.00), multiply(#1, const_100)""",0
Single_SLG/2013/page_133.pdf-4,"for the years ended december 31 , 2013 , 2012 and 2011 , what was the total in millions capitalized to assets associated with compensation expense related to long-term compensation plans , restricted stock and stock options?\\n",12,12.0,"add(4.5, 4.1), add(#0, 3.4)","[['', '2013', '2012', '2011'], ['balance at beginning of year', '2804901', '2912456', '2728290'], ['granted', '192563', '92729', '185333'], ['cancelled', '-3267 ( 3267 )', '-200284 ( 200284 )', '-1167 ( 1167 )'], ['balance at end of year', '2994197', '2804901', '2912456'], ['vested during the year', '21074', '408800', '66299'], ['compensation expense recorded', '$ 6713155', '$ 6930381', '$ 17365401'], ['weighted average fair value of restricted stock granted during the year', '$ 17386949', '$ 7023942', '$ 21768084']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2013</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at beginning of year</td><td>2804901</td><td>2912456</td><td>2728290</td></tr>
    <tr><td>granted</td><td>192563</td><td>92729</td><td>185333</td></tr>
    <tr><td>cancelled</td><td>-3267 ( 3267 )</td><td>-200284 ( 200284 )</td><td>-1167 ( 1167 )</td></tr>
    <tr><td>balance at end of year</td><td>2994197</td><td>2804901</td><td>2912456</td></tr>
    <tr><td>vested during the year</td><td>21074</td><td>408800</td><td>66299</td></tr>
    <tr><td>compensation expense recorded</td><td>$ 6713155</td><td>$ 6930381</td><td>$ 17365401</td></tr>
    <tr><td>weighted average fair value of restricted stock granted during the year</td><td>$ 17386949</td><td>$ 7023942</td><td>$ 21768084</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(4.5, 4.1), add(#0, 3.4)""",1
Single_MO/2017/page_79.pdf-1,what are the total number of pending tobacco-related cases in united states in 2017?,100,100.0,"add(92, 4), add(#0, 1), add(#1, 3)","[['', '2017', '2016', '2015'], ['individual smoking and health cases ( 1 )', '92', '70', '65'], ['smoking and health class actions and aggregated claims litigation ( 2 )', '4', '5', '5'], ['health care cost recovery actions ( 3 )', '1', '1', '1'], ['201clights/ultra lights 201d class actions', '3', '8', '11']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
      <th>2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>individual smoking and health cases ( 1 )</td><td>92</td><td>70</td><td>65</td></tr>
    <tr><td>smoking and health class actions and aggregated claims litigation ( 2 )</td><td>4</td><td>5</td><td>5</td></tr>
    <tr><td>health care cost recovery actions ( 3 )</td><td>1</td><td>1</td><td>1</td></tr>
    <tr><td>201clights/ultra lights 201d class actions</td><td>3</td><td>8</td><td>11</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(92, 4), add(#0, 1), add(#1, 3)""",1
Single_HIG/2004/page_81.pdf-1,what is the total net realized gain for the last three years?,208,208.0,"add(87, 165), subtract(#0, 44)","[['', '2004', '2003', '2002'], ['investment yield after-tax', '4.1% ( 4.1 % )', '4.2% ( 4.2 % )', '4.5% ( 4.5 % )'], ['net realized capital gains ( losses ) after-tax', '$ 87', '$ 165', '$ -44 ( 44 )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2004</th>
      <th>2003</th>
      <th>2002</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>investment yield after-tax</td><td>4.1% ( 4.1 % )</td><td>4.2% ( 4.2 % )</td><td>4.5% ( 4.5 % )</td></tr>
    <tr><td>net realized capital gains ( losses ) after-tax</td><td>$ 87</td><td>$ 165</td><td>$ -44 ( 44 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(87, 165), subtract(#0, 44)""",1
Single_AMT/2012/page_121.pdf-1,"for acquired customer-related and network location intangibles , what is the expected annual amortization expenses , in millions?",7.4,7.4,"add(75.0, 72.7), divide(#0, 20)","[['', 'preliminary purchase price allocation'], ['current assets', '$ 8763'], ['non-current assets', '2332'], ['property and equipment', '26711'], ['intangible assets ( 1 )', '21079'], ['other non-current liabilities', '-1349 ( 1349 )'], ['fair value of net assets acquired', '$ 57536'], ['goodwill ( 2 )', '5998']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>preliminary purchase price allocation</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>current assets</td><td>$ 8763</td></tr>
    <tr><td>non-current assets</td><td>2332</td></tr>
    <tr><td>property and equipment</td><td>26711</td></tr>
    <tr><td>intangible assets ( 1 )</td><td>21079</td></tr>
    <tr><td>other non-current liabilities</td><td>-1349 ( 1349 )</td></tr>
    <tr><td>fair value of net assets acquired</td><td>$ 57536</td></tr>
    <tr><td>goodwill ( 2 )</td><td>5998</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(10.7, 10.4), divide(#0, 20)""",0
Single_ETR/2008/page_401.pdf-3,what percent of system energy's receivable from the money pool was replaced by a note receivable from entergy new orleans?,42%,42.0,"multiply(22.5, const_1000), divide(#0, 53620)","[['2008', '2007', '2006', '2005'], ['( in thousands )', '( in thousands )', '( in thousands )', '( in thousands )'], ['$ 42915', '$ 53620', '$ 88231', '$ 277287']]","<table>
  <thead>
    <tr>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
      <th>2005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>( in thousands )</td><td>( in thousands )</td><td>( in thousands )</td><td>( in thousands )</td></tr>
    <tr><td>$ 42915</td><td>$ 53620</td><td>$ 88231</td><td>$ 277287</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
multiply(22.5, const_1000), divide(#0, 53620), multiply(#1, const_100)
```",0
Single_ABMD/2015/page_53.pdf-3,what is the roi of an investment in abiomed inc from march 2010 to march 2013?,80.9%,80.9,"subtract(180.91, 100), divide(#0, 100)","[['', '3/31/2010', '3/31/2011', '3/31/2012', '3/31/2013', '3/31/2014', '3/31/2015'], ['abiomed inc', '100', '140.79', '215.02', '180.91', '252.33', '693.60'], ['nasdaq composite index', '100', '115.98', '128.93', '136.26', '175.11', '204.38'], ['nasdaq medical equipment sic code 3840-3849', '100', '108.31', '115.05', '105.56', '123.18', '118.95']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>3/31/2010</th>
      <th>3/31/2011</th>
      <th>3/31/2012</th>
      <th>3/31/2013</th>
      <th>3/31/2014</th>
      <th>3/31/2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>abiomed inc</td><td>100</td><td>140.79</td><td>215.02</td><td>180.91</td><td>252.33</td><td>693.60</td></tr>
    <tr><td>nasdaq composite index</td><td>100</td><td>115.98</td><td>128.93</td><td>136.26</td><td>175.11</td><td>204.38</td></tr>
    <tr><td>nasdaq medical equipment sic code 3840-3849</td><td>100</td><td>108.31</td><td>115.05</td><td>105.56</td><td>123.18</td><td>118.95</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(180.91, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_AWK/2012/page_12.pdf-1,what is the approximate revenue per customer in the regulated businesses?,811,811.0,"multiply(2564.4, const_1000000), divide(#0, 3158226)","[['new jersey', 'operating revenues ( in millions ) $ 639.0', '% (  % ) of total 24.9% ( 24.9 % )', 'number of customers 639838', '% (  % ) of total 20.3% ( 20.3 % )', 'estimated population served ( in millions ) 2.5', '% (  % ) of total 21.9% ( 21.9 % )'], ['pennsylvania', '557.7', '21.7% ( 21.7 % )', '658153', '20.8% ( 20.8 % )', '2.2', '19.3% ( 19.3 % )'], ['missouri', '279.5', '10.9% ( 10.9 % )', '455730', '14.4% ( 14.4 % )', '1.5', '13.2% ( 13.2 % )'], ['illinois ( a )', '256.4', '10.0% ( 10.0 % )', '308014', '9.8% ( 9.8 % )', '1.2', '10.5% ( 10.5 % )'], ['indiana', '198.7', '7.8% ( 7.8 % )', '289068', '9.2% ( 9.2 % )', '1.2', '10.5% ( 10.5 % )'], ['california', '193.3', '7.5% ( 7.5 % )', '174188', '5.5% ( 5.5 % )', '0.6', '5.3% ( 5.3 % )'], ['west virginia ( b )', '125.0', '4.9% ( 4.9 % )', '172159', '5.4% ( 5.4 % )', '0.6', '5.3% ( 5.3 % )'], ['subtotal ( top seven states )', '2249.6', '87.7% ( 87.7 % )', '2697150', '85.4% ( 85.4 % )', '9.8', '86.0% ( 86.0 % )'], ['other ( c )', '314.8', '12.3% ( 12.3 % )', '461076', '14.6% ( 14.6 % )', '1.6', '14.0% ( 14.0 % )'], ['total regulated businesses', '$ 2564.4', '100.0% ( 100.0 % )', '3158226', '100.0% ( 100.0 % )', '11.4', '100.0% ( 100.0 % )']]","<table>
  <thead>
    <tr>
      <th>new jersey</th>
      <th>operating revenues ( in millions ) $ 639.0</th>
      <th>% (  % ) of total 24.9% ( 24.9 % )</th>
      <th>number of customers 639838</th>
      <th>% (  % ) of total 20.3% ( 20.3 % )</th>
      <th>estimated population served ( in millions ) 2.5</th>
      <th>% (  % ) of total 21.9% ( 21.9 % )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>pennsylvania</td><td>557.7</td><td>21.7% ( 21.7 % )</td><td>658153</td><td>20.8% ( 20.8 % )</td><td>2.2</td><td>19.3% ( 19.3 % )</td></tr>
    <tr><td>missouri</td><td>279.5</td><td>10.9% ( 10.9 % )</td><td>455730</td><td>14.4% ( 14.4 % )</td><td>1.5</td><td>13.2% ( 13.2 % )</td></tr>
    <tr><td>illinois ( a )</td><td>256.4</td><td>10.0% ( 10.0 % )</td><td>308014</td><td>9.8% ( 9.8 % )</td><td>1.2</td><td>10.5% ( 10.5 % )</td></tr>
    <tr><td>indiana</td><td>198.7</td><td>7.8% ( 7.8 % )</td><td>289068</td><td>9.2% ( 9.2 % )</td><td>1.2</td><td>10.5% ( 10.5 % )</td></tr>
    <tr><td>california</td><td>193.3</td><td>7.5% ( 7.5 % )</td><td>174188</td><td>5.5% ( 5.5 % )</td><td>0.6</td><td>5.3% ( 5.3 % )</td></tr>
    <tr><td>west virginia ( b )</td><td>125.0</td><td>4.9% ( 4.9 % )</td><td>172159</td><td>5.4% ( 5.4 % )</td><td>0.6</td><td>5.3% ( 5.3 % )</td></tr>
    <tr><td>subtotal ( top seven states )</td><td>2249.6</td><td>87.7% ( 87.7 % )</td><td>2697150</td><td>85.4% ( 85.4 % )</td><td>9.8</td><td>86.0% ( 86.0 % )</td></tr>
    <tr><td>other ( c )</td><td>314.8</td><td>12.3% ( 12.3 % )</td><td>461076</td><td>14.6% ( 14.6 % )</td><td>1.6</td><td>14.0% ( 14.0 % )</td></tr>
    <tr><td>total regulated businesses</td><td>$ 2564.4</td><td>100.0% ( 100.0 % )</td><td>3158226</td><td>100.0% ( 100.0 % )</td><td>11.4</td><td>100.0% ( 100.0 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(2564.4, 3158226)""",0
Single_C/2009/page_279.pdf-3,what was the percent of the decline on the citigroup cumulative total return from 2007 to 2008,-73.4%,-73.4,"subtract(18.71, 70.36), divide(#0, 70.36)","[['december 31', 'citigroup', 's&p 500 index', 's&p financial index'], ['2005', '104.38', '104.83', '106.30'], ['2006', '124.02', '121.20', '126.41'], ['2007', '70.36', '127.85', '103.47'], ['2008', '18.71', '81.12', '47.36'], ['2009', '9.26', '102.15', '55.27']]","<table>
  <thead>
    <tr>
      <th>december 31</th>
      <th>citigroup</th>
      <th>s&p 500 index</th>
      <th>s&p financial index</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2005</td><td>104.38</td><td>104.83</td><td>106.30</td></tr>
    <tr><td>2006</td><td>124.02</td><td>121.20</td><td>126.41</td></tr>
    <tr><td>2007</td><td>70.36</td><td>127.85</td><td>103.47</td></tr>
    <tr><td>2008</td><td>18.71</td><td>81.12</td><td>47.36</td></tr>
    <tr><td>2009</td><td>9.26</td><td>102.15</td><td>55.27</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(18.71, 70.36), divide(#0, 70.36), multiply(#1, const_100)""",0
Single_AES/2017/page_110.pdf-3,what percent of debt obligations are long term?,89.0%,89.0,"subtract(20404, 2250), divide(#0, 20404)","[['contractual obligations', 'total', 'less than 1 year', '1-3 years', '3-5 years', 'more than 5 years', 'other', 'footnote reference ( 4 )'], ['debt obligations ( 1 )', '$ 20404', '$ 2250', '$ 2431', '$ 5003', '$ 10720', '$ 2014', '10'], ['interest payments on long-term debt ( 2 )', '9103', '1172', '2166', '1719', '4046', '2014', 'n/a'], ['capital lease obligations', '18', '2', '2', '2', '12', '2014', '11'], ['operating lease obligations', '935', '58', '116', '117', '644', '2014', '11'], ['electricity obligations', '4501', '581', '948', '907', '2065', '2014', '11'], ['fuel obligations', '5859', '1759', '1642', '992', '1466', '2014', '11'], ['other purchase obligations', '4984', '1488', '1401', '781', '1314', '2014', '11'], [""other long-term liabilities reflected on aes' consolidated balance sheet under gaap ( 3 )"", '701', '2014', '284', '118', '277', '22', 'n/a'], ['total', '$ 46505', '$ 7310', '$ 8990', '$ 9639', '$ 20544', '$ 22', '']]","<table>
  <thead>
    <tr>
      <th>contractual obligations</th>
      <th>total</th>
      <th>less than 1 year</th>
      <th>1-3 years</th>
      <th>3-5 years</th>
      <th>more than 5 years</th>
      <th>other</th>
      <th>footnote reference ( 4 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>debt obligations ( 1 )</td><td>$ 20404</td><td>$ 2250</td><td>$ 2431</td><td>$ 5003</td><td>$ 10720</td><td>$ 2014</td><td>10</td></tr>
    <tr><td>interest payments on long-term debt ( 2 )</td><td>9103</td><td>1172</td><td>2166</td><td>1719</td><td>4046</td><td>2014</td><td>n/a</td></tr>
    <tr><td>capital lease obligations</td><td>18</td><td>2</td><td>2</td><td>2</td><td>12</td><td>2014</td><td>11</td></tr>
    <tr><td>operating lease obligations</td><td>935</td><td>58</td><td>116</td><td>117</td><td>644</td><td>2014</td><td>11</td></tr>
    <tr><td>electricity obligations</td><td>4501</td><td>581</td><td>948</td><td>907</td><td>2065</td><td>2014</td><td>11</td></tr>
    <tr><td>fuel obligations</td><td>5859</td><td>1759</td><td>1642</td><td>992</td><td>1466</td><td>2014</td><td>11</td></tr>
    <tr><td>other purchase obligations</td><td>4984</td><td>1488</td><td>1401</td><td>781</td><td>1314</td><td>2014</td><td>11</td></tr>
    <tr><td>other long-term liabilities reflected on aes' consolidated balance sheet under gaap ( 3 )</td><td>701</td><td>2014</td><td>284</td><td>118</td><td>277</td><td>22</td><td>n/a</td></tr>
    <tr><td>total</td><td>$ 46505</td><td>$ 7310</td><td>$ 8990</td><td>$ 9639</td><td>$ 20544</td><td>$ 22</td><td></td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
subtract(20404, 2250), divide(#0, 20404), multiply(#1, const_100)
```",1
Single_AMT/2014/page_157.pdf-1,"assuming a weighted average fair value per share equal to the average december 31 , 2014 cost , what would be the total expense for issuance of the remaining plan shares at 12/31/14?",50422000,50422000.0,"multiply(const_1000000, 3.4), multiply(14.83, #0)","[['', '2014', '2013', '2012'], ['range of risk-free interest rate', '0.06% ( 0.06 % ) 2013 0.11% ( 0.11 % )', '0.07% ( 0.07 % ) 2013 0.13% ( 0.13 % )', '0.05% ( 0.05 % ) 2013 0.12% ( 0.12 % )'], ['weighted average risk-free interest rate', '0.09% ( 0.09 % )', '0.10% ( 0.10 % )', '0.08% ( 0.08 % )'], ['expected life of shares', '6 months', '6 months', '6 months'], ['range of expected volatility of underlying stock price over the option period', '11.29% ( 11.29 % ) 2013 16.59% ( 16.59 % )', '12.21% ( 12.21 % ) 2013 13.57% ( 13.57 % )', '33.16% ( 33.16 % ) 2013 33.86% ( 33.86 % )'], ['weighted average expected volatility of underlying stock price', '14.14% ( 14.14 % )', '12.88% ( 12.88 % )', '33.54% ( 33.54 % )'], ['expected annual dividend yield', '1.50% ( 1.50 % )', '1.50% ( 1.50 % )', '1.50% ( 1.50 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2014</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>range of risk-free interest rate</td><td>0.06% ( 0.06 % ) 2013 0.11% ( 0.11 % )</td><td>0.07% ( 0.07 % ) 2013 0.13% ( 0.13 % )</td><td>0.05% ( 0.05 % ) 2013 0.12% ( 0.12 % )</td></tr>
    <tr><td>weighted average risk-free interest rate</td><td>0.09% ( 0.09 % )</td><td>0.10% ( 0.10 % )</td><td>0.08% ( 0.08 % )</td></tr>
    <tr><td>expected life of shares</td><td>6 months</td><td>6 months</td><td>6 months</td></tr>
    <tr><td>range of expected volatility of underlying stock price over the option period</td><td>11.29% ( 11.29 % ) 2013 16.59% ( 16.59 % )</td><td>12.21% ( 12.21 % ) 2013 13.57% ( 13.57 % )</td><td>33.16% ( 33.16 % ) 2013 33.86% ( 33.86 % )</td></tr>
    <tr><td>weighted average expected volatility of underlying stock price</td><td>14.14% ( 14.14 % )</td><td>12.88% ( 12.88 % )</td><td>33.54% ( 33.54 % )</td></tr>
    <tr><td>expected annual dividend yield</td><td>1.50% ( 1.50 % )</td><td>1.50% ( 1.50 % )</td><td>1.50% ( 1.50 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
multiply(14.83, 3400000)
```",0
Single_AMT/2015/page_58.pdf-2,what is the total number of sites acquired and constructed during 2014?,8450,8450.0,"add(900, 1560), add(#0, 190), add(#1, 5800)","[['new sites ( acquired or constructed )', '2015', '2014', '2013'], ['u.s .', '11595', '900', '5260'], ['asia', '2330', '1560', '1260'], ['emea', '4910', '190', '485'], ['latin america', '6535', '5800', '6065']]","<table>
  <thead>
    <tr>
      <th>new sites ( acquired or constructed )</th>
      <th>2015</th>
      <th>2014</th>
      <th>2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>u.s .</td><td>11595</td><td>900</td><td>5260</td></tr>
    <tr><td>asia</td><td>2330</td><td>1560</td><td>1260</td></tr>
    <tr><td>emea</td><td>4910</td><td>190</td><td>485</td></tr>
    <tr><td>latin america</td><td>6535</td><td>5800</td><td>6065</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(900, 1560), add(#0, 190), add(#1, 5800)""",1
Single_CB/2008/page_216.pdf-1,what was the percentage increase in the number of common shares authorized to be issued under the 2004 ltip,26.7%,26.7,"subtract(19000000, 15000000), divide(#0, 15000000)","[['', '2008', '2007', '2006'], ['dividend yield', '1.80% ( 1.80 % )', '1.78% ( 1.78 % )', '1.64% ( 1.64 % )'], ['expected volatility', '32.20% ( 32.20 % )', '27.43% ( 27.43 % )', '31.29% ( 31.29 % )'], ['risk-free interest rate', '3.15% ( 3.15 % )', '4.51% ( 4.51 % )', '4.60% ( 4.60 % )'], ['forfeiture rate', '7.5% ( 7.5 % )', '7.5% ( 7.5 % )', '7.5% ( 7.5 % )'], ['expected life', '5.7 years', '5.6 years', '6 years']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>dividend yield</td><td>1.80% ( 1.80 % )</td><td>1.78% ( 1.78 % )</td><td>1.64% ( 1.64 % )</td></tr>
    <tr><td>expected volatility</td><td>32.20% ( 32.20 % )</td><td>27.43% ( 27.43 % )</td><td>31.29% ( 31.29 % )</td></tr>
    <tr><td>risk-free interest rate</td><td>3.15% ( 3.15 % )</td><td>4.51% ( 4.51 % )</td><td>4.60% ( 4.60 % )</td></tr>
    <tr><td>forfeiture rate</td><td>7.5% ( 7.5 % )</td><td>7.5% ( 7.5 % )</td><td>7.5% ( 7.5 % )</td></tr>
    <tr><td>expected life</td><td>5.7 years</td><td>5.6 years</td><td>6 years</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(19000000, 15000000), divide(#0, 15000000), multiply(#1, const_100)""",0
Single_ANSS/2016/page_82.pdf-1,what was the average total compensation expense associated with the awards from 2014 to 2016 in millions,3.13,3.13,"add(1.9, 4.0), add(#0, 3.5), divide(#1, const_3)","[['assumptions used in monte carlo lattice pricing model', 'year ended december 31 , 2016', 'year ended december 31 , 2015', 'year ended december 31 , 2014'], ['risk-free interest rate', '1.0% ( 1.0 % )', '1.1% ( 1.1 % )', '0.7% ( 0.7 % )'], ['expected dividend yield', '2014% ( 2014 % )', '2014% ( 2014 % )', '2014% ( 2014 % )'], ['expected volatility 2014ansys stock price', '21% ( 21 % )', '23% ( 23 % )', '25% ( 25 % )'], ['expected volatility 2014nasdaq composite index', '16% ( 16 % )', '14% ( 14 % )', '15% ( 15 % )'], ['expected term', '2.8 years', '2.8 years', '2.8 years'], ['correlation factor', '0.65', '0.60', '0.70']]","<table>
  <thead>
    <tr>
      <th>assumptions used in monte carlo lattice pricing model</th>
      <th>year ended december 31 , 2016</th>
      <th>year ended december 31 , 2015</th>
      <th>year ended december 31 , 2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>risk-free interest rate</td><td>1.0% ( 1.0 % )</td><td>1.1% ( 1.1 % )</td><td>0.7% ( 0.7 % )</td></tr>
    <tr><td>expected dividend yield</td><td>2014% ( 2014 % )</td><td>2014% ( 2014 % )</td><td>2014% ( 2014 % )</td></tr>
    <tr><td>expected volatility 2014ansys stock price</td><td>21% ( 21 % )</td><td>23% ( 23 % )</td><td>25% ( 25 % )</td></tr>
    <tr><td>expected volatility 2014nasdaq composite index</td><td>16% ( 16 % )</td><td>14% ( 14 % )</td><td>15% ( 15 % )</td></tr>
    <tr><td>expected term</td><td>2.8 years</td><td>2.8 years</td><td>2.8 years</td></tr>
    <tr><td>correlation factor</td><td>0.65</td><td>0.60</td><td>0.70</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(0.4, 0.4), add(#0, 0.1), add(#1, 19.1), add(#2, 12.5), add(#3, 5.8), divide(#4, const_3)""",0
Single_AWK/2018/page_142.pdf-3,by how much did the unrecovered balance of project costs incurred decrease from 2017 to 2018?,4.5%,4.5,"subtract(89, 85), divide(#0, 89)","[['', '2018', '2017'], ['income taxes recovered through rates', '$ 1279', '$ 1242'], ['removal costs recovered through rates', '309', '315'], ['postretirement benefit liability', '209', '33'], ['pension and other postretirement benefit balancing accounts', '46', '48'], ['tcja reserve on revenue', '36', '2014'], ['other', '28', '26'], ['total regulatory liabilities', '$ 1907', '$ 1664']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>income taxes recovered through rates</td><td>$ 1279</td><td>$ 1242</td></tr>
    <tr><td>removal costs recovered through rates</td><td>309</td><td>315</td></tr>
    <tr><td>postretirement benefit liability</td><td>209</td><td>33</td></tr>
    <tr><td>pension and other postretirement benefit balancing accounts</td><td>46</td><td>48</td></tr>
    <tr><td>tcja reserve on revenue</td><td>36</td><td>2014</td></tr>
    <tr><td>other</td><td>28</td><td>26</td></tr>
    <tr><td>total regulatory liabilities</td><td>$ 1907</td><td>$ 1664</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(89, 85)""",0
Single_ORLY/2015/page_28.pdf-2,what is the roi of an investment in the s&p500 from 2010 to 2011?,0%,0.0,"subtract(100, 100), divide(#0, 100)","[['company/index', 'december 31 , 2010', 'december 31 , 2011', 'december 31 , 2012', 'december 31 , 2013', 'december 31 , 2014', 'december 31 , 2015'], [""o'reilly automotive inc ."", '$ 100', '$ 132', '$ 148', '$ 213', '$ 319', '$ 419'], ['s&p 500 retail index', '100', '103', '128', '185', '203', '252'], ['s&p 500', '$ 100', '$ 100', '$ 113', '$ 147', '$ 164', '$ 163']]","<table>
  <thead>
    <tr>
      <th>company/index</th>
      <th>december 31 , 2010</th>
      <th>december 31 , 2011</th>
      <th>december 31 , 2012</th>
      <th>december 31 , 2013</th>
      <th>december 31 , 2014</th>
      <th>december 31 , 2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>o'reilly automotive inc .</td><td>$ 100</td><td>$ 132</td><td>$ 148</td><td>$ 213</td><td>$ 319</td><td>$ 419</td></tr>
    <tr><td>s&p 500 retail index</td><td>100</td><td>103</td><td>128</td><td>185</td><td>203</td><td>252</td></tr>
    <tr><td>s&p 500</td><td>$ 100</td><td>$ 100</td><td>$ 113</td><td>$ 147</td><td>$ 164</td><td>$ 163</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(100, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_EMR/2017/page_53.pdf-1,what percentage of total debt was long-term debt in 2017?,81%,81.0,"multiply(4.7, const_1000), divide(3794, #0)","[['( dollars in millions )', '2015', '2016', '2017'], ['total assets', '$ 22088', '21732', '19589'], ['long-term debt', '$ 4289', '4051', '3794'], [""common stockholders' equity"", '$ 8081', '7568', '8718'], ['total debt-to-total capital ratio', '45.8% ( 45.8 % )', '46.7% ( 46.7 % )', '34.8% ( 34.8 % )'], ['net debt-to-net capital ratio', '31.3% ( 31.3 % )', '31.3% ( 31.3 % )', '15.4% ( 15.4 % )'], ['operating cash flow-to-debt ratio', '29.8% ( 29.8 % )', '37.7% ( 37.7 % )', '57.8% ( 57.8 % )'], ['interest coverage ratio', '20.2x', '11.8x', '12.6x']]","<table>
  <thead>
    <tr>
      <th>( dollars in millions )</th>
      <th>2015</th>
      <th>2016</th>
      <th>2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>total assets</td><td>$ 22088</td><td>21732</td><td>19589</td></tr>
    <tr><td>long-term debt</td><td>$ 4289</td><td>4051</td><td>3794</td></tr>
    <tr><td>common stockholders' equity</td><td>$ 8081</td><td>7568</td><td>8718</td></tr>
    <tr><td>total debt-to-total capital ratio</td><td>45.8% ( 45.8 % )</td><td>46.7% ( 46.7 % )</td><td>34.8% ( 34.8 % )</td></tr>
    <tr><td>net debt-to-net capital ratio</td><td>31.3% ( 31.3 % )</td><td>31.3% ( 31.3 % )</td><td>15.4% ( 15.4 % )</td></tr>
    <tr><td>operating cash flow-to-debt ratio</td><td>29.8% ( 29.8 % )</td><td>37.7% ( 37.7 % )</td><td>57.8% ( 57.8 % )</td></tr>
    <tr><td>interest coverage ratio</td><td>20.2x</td><td>11.8x</td><td>12.6x</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(3794, 4700), multiply(#0, const_100)""",0
Single_UNP/2010/page_55.pdf-3,"in millions , what is the average for other revenue from 2008-2010?",839.33,839.33,"add(896, 770), add(#0, 852), divide(#1, const_3)","[['millions', '2010', '2009', '2008'], ['agricultural', '$ 3018', '$ 2666', '$ 3174'], ['automotive', '1271', '854', '1344'], ['chemicals', '2425', '2102', '2494'], ['energy', '3489', '3118', '3810'], ['industrial products', '2639', '2147', '3273'], ['intermodal', '3227', '2486', '3023'], ['total freight revenues', '$ 16069', '$ 13373', '$ 17118'], ['other revenues', '896', '770', '852'], ['total operating revenues', '$ 16965', '$ 14143', '$ 17970']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>2010</th>
      <th>2009</th>
      <th>2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>agricultural</td><td>$ 3018</td><td>$ 2666</td><td>$ 3174</td></tr>
    <tr><td>automotive</td><td>1271</td><td>854</td><td>1344</td></tr>
    <tr><td>chemicals</td><td>2425</td><td>2102</td><td>2494</td></tr>
    <tr><td>energy</td><td>3489</td><td>3118</td><td>3810</td></tr>
    <tr><td>industrial products</td><td>2639</td><td>2147</td><td>3273</td></tr>
    <tr><td>intermodal</td><td>3227</td><td>2486</td><td>3023</td></tr>
    <tr><td>total freight revenues</td><td>$ 16069</td><td>$ 13373</td><td>$ 17118</td></tr>
    <tr><td>other revenues</td><td>896</td><td>770</td><td>852</td></tr>
    <tr><td>total operating revenues</td><td>$ 16965</td><td>$ 14143</td><td>$ 17970</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(852, 896), add(#0, 770), divide(#1, const_3)""",0
Single_EW/2016/page_92.pdf-1,what was the percent change in matching contributions between 2014 and 2016?,35%,35.0,"subtract(17.3, 12.8), divide(#0, 12.8)","[['2017', '$ 4.5'], ['2018', '4.0'], ['2019', '4.0'], ['2020', '4.6'], ['2021', '4.5'], ['2021-2025', '44.6']]","<table>
  <thead>
    <tr>
      <th>2017</th>
      <th>$ 4.5</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2018</td><td>4.0</td></tr>
    <tr><td>2019</td><td>4.0</td></tr>
    <tr><td>2020</td><td>4.6</td></tr>
    <tr><td>2021</td><td>4.5</td></tr>
    <tr><td>2021-2025</td><td>44.6</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(17.3, 12.8), divide(#0, 12.8), multiply(#1, const_100)""",0
Single_IP/2006/page_19.pdf-1,what was the percentage change in industry segment operating profits from 2004 to 2005?,-5%,-5.0,"subtract(1622, 1703), divide(#0, 1703)","[['in millions', '2006', '2005', '2004'], ['industry segment operating profits', '$ 2074', '$ 1622', '$ 1703'], ['corporate items net', '-746 ( 746 )', '-607 ( 607 )', '-477 ( 477 )'], ['corporate special items*', '2373', '-134 ( 134 )', '-141 ( 141 )'], ['interest expense net', '-521 ( 521 )', '-595 ( 595 )', '-712 ( 712 )'], ['minority interest', '-9 ( 9 )', '-9 ( 9 )', '-21 ( 21 )'], ['income tax ( provision ) benefit', '-1889 ( 1889 )', '407', '-114 ( 114 )'], ['discontinued operations', '-232 ( 232 )', '416', '-273 ( 273 )'], ['net earnings ( loss )', '$ 1050', '$ 1100', '$ -35 ( 35 )']]","<table>
  <thead>
    <tr>
      <th>in millions</th>
      <th>2006</th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>industry segment operating profits</td><td>$ 2074</td><td>$ 1622</td><td>$ 1703</td></tr>
    <tr><td>corporate items net</td><td>-746 ( 746 )</td><td>-607 ( 607 )</td><td>-477 ( 477 )</td></tr>
    <tr><td>corporate special items*</td><td>2373</td><td>-134 ( 134 )</td><td>-141 ( 141 )</td></tr>
    <tr><td>interest expense net</td><td>-521 ( 521 )</td><td>-595 ( 595 )</td><td>-712 ( 712 )</td></tr>
    <tr><td>minority interest</td><td>-9 ( 9 )</td><td>-9 ( 9 )</td><td>-21 ( 21 )</td></tr>
    <tr><td>income tax ( provision ) benefit</td><td>-1889 ( 1889 )</td><td>407</td><td>-114 ( 114 )</td></tr>
    <tr><td>discontinued operations</td><td>-232 ( 232 )</td><td>416</td><td>-273 ( 273 )</td></tr>
    <tr><td>net earnings ( loss )</td><td>$ 1050</td><td>$ 1100</td><td>$ -35 ( 35 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1622, 1703), divide(#0, 1703), multiply(#1, const_100)""",0
Single_BLL/2007/page_75.pdf-4,what is the percentage change in interest expense from 2006 to 2007?,11.2%,11.2,"subtract(149.4, 134.4), divide(#0, 134.4)","[['( $ in millions )', '2007', '2006', '2005'], ['interest costs before refinancing costs', '$ 155.8', '$ 142.5', '$ 102.4'], ['debt refinancing costs', '2013', '2013', '19.3'], ['total interest costs', '155.8', '142.5', '121.7'], ['amounts capitalized', '-6.4 ( 6.4 )', '-8.1 ( 8.1 )', '-5.3 ( 5.3 )'], ['interest expense', '$ 149.4', '$ 134.4', '$ 116.4'], ['interest paid during the year ( a )', '$ 153.9', '$ 125.4', '$ 138.5']]","<table>
  <thead>
    <tr>
      <th>( $ in millions )</th>
      <th>2007</th>
      <th>2006</th>
      <th>2005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>interest costs before refinancing costs</td><td>$ 155.8</td><td>$ 142.5</td><td>$ 102.4</td></tr>
    <tr><td>debt refinancing costs</td><td>2013</td><td>2013</td><td>19.3</td></tr>
    <tr><td>total interest costs</td><td>155.8</td><td>142.5</td><td>121.7</td></tr>
    <tr><td>amounts capitalized</td><td>-6.4 ( 6.4 )</td><td>-8.1 ( 8.1 )</td><td>-5.3 ( 5.3 )</td></tr>
    <tr><td>interest expense</td><td>$ 149.4</td><td>$ 134.4</td><td>$ 116.4</td></tr>
    <tr><td>interest paid during the year ( a )</td><td>$ 153.9</td><td>$ 125.4</td><td>$ 138.5</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(149.4, 134.4), divide(#0, 134.4), multiply(#1, const_100)""",0
Single_CDNS/2012/page_58.pdf-1,what is the percentage difference in the number of shares to be issued if the stock price closes at $ 11 compared to if it closes at $ 20?,278%,278.0,"subtract(21.4, 0.9), divide(#0, 0.9)","[['', 'shares ( in millions )'], ['$ 11.00', '0.9'], ['$ 12.00', '4.7'], ['$ 13.00', '7.9'], ['$ 14.00', '10.7'], ['$ 15.00', '13.0'], ['$ 16.00', '15.1'], ['$ 17.00', '17.0'], ['$ 18.00', '18.6'], ['$ 19.00', '20.1'], ['$ 20.00', '21.4']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>shares ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>$ 11.00</td><td>0.9</td></tr>
    <tr><td>$ 12.00</td><td>4.7</td></tr>
    <tr><td>$ 13.00</td><td>7.9</td></tr>
    <tr><td>$ 14.00</td><td>10.7</td></tr>
    <tr><td>$ 15.00</td><td>13.0</td></tr>
    <tr><td>$ 16.00</td><td>15.1</td></tr>
    <tr><td>$ 17.00</td><td>17.0</td></tr>
    <tr><td>$ 18.00</td><td>18.6</td></tr>
    <tr><td>$ 19.00</td><td>20.1</td></tr>
    <tr><td>$ 20.00</td><td>21.4</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(21.4, 0.9), divide(#0, 0.9), multiply(#1, const_100)""",0
Single_ETR/2008/page_356.pdf-2,what percent of the net change in revenue between 2006 and 2007 was due to fuel recovery?,109%,109.0,"subtract(231.0, 192.2), divide(42.6, #0)","[['', 'amount ( in millions )'], ['2006 net revenue', '$ 192.2'], ['fuel recovery', '42.6'], ['volume/weather', '25.6'], ['rider revenue', '8.5'], ['net wholesale revenue', '-41.2 ( 41.2 )'], ['other', '3.3'], ['2007 net revenue', '$ 231.0']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2006 net revenue</td><td>$ 192.2</td></tr>
    <tr><td>fuel recovery</td><td>42.6</td></tr>
    <tr><td>volume/weather</td><td>25.6</td></tr>
    <tr><td>rider revenue</td><td>8.5</td></tr>
    <tr><td>net wholesale revenue</td><td>-41.2 ( 41.2 )</td></tr>
    <tr><td>other</td><td>3.3</td></tr>
    <tr><td>2007 net revenue</td><td>$ 231.0</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```plaintext
subtract(231.0, 192.2), divide(42.6, #0), multiply(#1, const_100)
```",0
Single_HST/2007/page_62.pdf-1,what was the percent of the change in the amortization of deferred financing costs from 2006 to 2007,-13.3%,-13.3,"subtract(13, 15), divide(#0, 15)","[['', '2007', '2006', '2005'], ['common stock', '$ 1.00', '$ .76', '$ .41'], ['class b preferred stock 10% ( 10 % )', '2014', '2014', '.87'], ['class c preferred stock 10% ( 10 % )', '2014', '.625', '2.50'], ['class e preferred stock 87/8% ( 87/8 % )', '2.22', '2.22', '2.22']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2007</th>
      <th>2006</th>
      <th>2005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>common stock</td><td>$ 1.00</td><td>$ .76</td><td>$ .41</td></tr>
    <tr><td>class b preferred stock 10% ( 10 % )</td><td>2014</td><td>2014</td><td>.87</td></tr>
    <tr><td>class c preferred stock 10% ( 10 % )</td><td>2014</td><td>.625</td><td>2.50</td></tr>
    <tr><td>class e preferred stock 87/8% ( 87/8 % )</td><td>2.22</td><td>2.22</td><td>2.22</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(13, 15), divide(#0, 15), multiply(#1, const_100)""",0
Single_BDX/2017/page_32.pdf-2,based on the management 2019s discussion and analysis of financial condition and results of operations what was the percent of approximate tax expense of the total specified items in 2018,33.8%,33.8,"subtract(1466, 971), divide(#0, 1466)","[['millions of dollars except per share amounts', 'years ended september 30 2017', 'years ended september 30 2016', 'years ended september 30 2015', 'years ended september 30 2014', 'years ended september 30 2013'], ['total specified items', '$ 1466', '$ 1261', '$ 1186', '$ 153', '$ 442'], ['after-tax impact of specified items', '$ 971', '$ 892', '$ 786', '$ 101', '$ 279'], ['impact of specified items on diluted earnings per share', '$ -4.34 ( 4.34 )', '$ -4.10 ( 4.10 )', '$ -3.79 ( 3.79 )', '$ -0.51 ( 0.51 )', '$ -1.40 ( 1.40 )'], ['impact of dilution from share issuances', '$ -0.54 ( 0.54 )', '$ 2014', '$ -0.02 ( 0.02 )', '$ 2014', '$ 2014']]","<table>
  <thead>
    <tr>
      <th>millions of dollars except per share amounts</th>
      <th>years ended september 30 2017</th>
      <th>years ended september 30 2016</th>
      <th>years ended september 30 2015</th>
      <th>years ended september 30 2014</th>
      <th>years ended september 30 2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>total specified items</td><td>$ 1466</td><td>$ 1261</td><td>$ 1186</td><td>$ 153</td><td>$ 442</td></tr>
    <tr><td>after-tax impact of specified items</td><td>$ 971</td><td>$ 892</td><td>$ 786</td><td>$ 101</td><td>$ 279</td></tr>
    <tr><td>impact of specified items on diluted earnings per share</td><td>$ -4.34 ( 4.34 )</td><td>$ -4.10 ( 4.10 )</td><td>$ -3.79 ( 3.79 )</td><td>$ -0.51 ( 0.51 )</td><td>$ -1.40 ( 1.40 )</td></tr>
    <tr><td>impact of dilution from share issuances</td><td>$ -0.54 ( 0.54 )</td><td>$ 2014</td><td>$ -0.02 ( 0.02 )</td><td>$ 2014</td><td>$ 2014</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1466, 971), divide(#0, 1466), multiply(#1, const_100)""",0
Single_CDW/2017/page_73.pdf-2,"in millions , what was the average loss from foreign currency translation from 2015-2017?",( 98.9 ),98.9,"add(96.1, 139.6), add(#0, 61.1), divide(#1, const_3)","[['( in millions )', 'years ended december 31 , 2017', 'years ended december 31 , 2016', 'years ended december 31 , 2015'], ['foreign currency translation', '$ -96.1 ( 96.1 )', '$ -139.6 ( 139.6 )', '$ -61.1 ( 61.1 )'], ['unrealized gain from hedge accounting', '0.2', '2014', '2014'], ['accumulated other comprehensive loss', '$ -95.9 ( 95.9 )', '$ -139.6 ( 139.6 )', '$ -61.1 ( 61.1 )']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>years ended december 31 , 2017</th>
      <th>years ended december 31 , 2016</th>
      <th>years ended december 31 , 2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>foreign currency translation</td><td>$ -96.1 ( 96.1 )</td><td>$ -139.6 ( 139.6 )</td><td>$ -61.1 ( 61.1 )</td></tr>
    <tr><td>unrealized gain from hedge accounting</td><td>0.2</td><td>2014</td><td>2014</td></tr>
    <tr><td>accumulated other comprehensive loss</td><td>$ -95.9 ( 95.9 )</td><td>$ -139.6 ( 139.6 )</td><td>$ -61.1 ( 61.1 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(-96.1, -139.6), add(#0, -61.1), divide(#1, const_3)""",0
Single_ETR/2002/page_266.pdf-1,what is the percent change in the difference in the fair value of the securities held in decommissioning trust funds and the amounts deposited plus the earnings on the deposits from 2001 to 2002 for entergy arkansas?,97.7%,97.7,"subtract(69.8, 35.3), divide(#0, 35.3)","[['', '2002', '2001'], ['entergy arkansas', '$ 35.3', '$ 69.8'], ['entergy gulf states', '$ 1.4', '$ 18.5'], ['entergy louisiana', '( $ 0.3 )', '$ 8.2'], ['system energy', '( $ 14.5 )', '( $ 1.6 )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2002</th>
      <th>2001</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>entergy arkansas</td><td>$ 35.3</td><td>$ 69.8</td></tr>
    <tr><td>entergy gulf states</td><td>$ 1.4</td><td>$ 18.5</td></tr>
    <tr><td>entergy louisiana</td><td>( $ 0.3 )</td><td>$ 8.2</td></tr>
    <tr><td>system energy</td><td>( $ 14.5 )</td><td>( $ 1.6 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(35.3, 69.8), subtract(69.8, #0), divide(#1, 69.8), multiply(#2, const_100)""",0
Single_DVN/2012/page_100.pdf-2,"what percentage of total proved undeveloped reserves from canada from 2011-2012 was its proved undeveloped reserves as of dec 31 , 2011?",46.67%,46.67,"add(379, 433), divide(379, #0), multiply(#1, const_100)","[['', 'u.s .', 'canada', 'total'], ['proved undeveloped reserves as of december 31 2011', '403', '379', '782'], ['extensions and discoveries', '134', '68', '202'], ['revisions due to prices', '-47 ( 47 )', '9', '-38 ( 38 )'], ['revisions other than price', '-10 ( 10 )', '-6 ( 6 )', '-16 ( 16 )'], ['conversion to proved developed reserves', '-73 ( 73 )', '-17 ( 17 )', '-90 ( 90 )'], ['proved undeveloped reserves as of december 31 2012', '407', '433', '840']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>u.s .</th>
      <th>canada</th>
      <th>total</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>proved undeveloped reserves as of december 31 2011</td><td>403</td><td>379</td><td>782</td></tr>
    <tr><td>extensions and discoveries</td><td>134</td><td>68</td><td>202</td></tr>
    <tr><td>revisions due to prices</td><td>-47 ( 47 )</td><td>9</td><td>-38 ( 38 )</td></tr>
    <tr><td>revisions other than price</td><td>-10 ( 10 )</td><td>-6 ( 6 )</td><td>-16 ( 16 )</td></tr>
    <tr><td>conversion to proved developed reserves</td><td>-73 ( 73 )</td><td>-17 ( 17 )</td><td>-90 ( 90 )</td></tr>
    <tr><td>proved undeveloped reserves as of december 31 2012</td><td>407</td><td>433</td><td>840</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(379, 433), multiply(#0, const_100)""",0
Single_IPG/2017/page_49.pdf-1,"what was the average interest income from 2016 and 2017 , in millions?",19.75,19.75,"add(19.4, 20.1), divide(#0, const_2)","[['as of december 31,', 'increase/ ( decrease ) in fair market value 10% ( 10 % ) increasein interest rates', 'increase/ ( decrease ) in fair market value 10% ( 10 % ) decreasein interest rates'], ['2017', '$ -20.2 ( 20.2 )', '$ 20.6'], ['2016', '-26.3 ( 26.3 )', '26.9']]","<table>
  <thead>
    <tr>
      <th>as of december 31,</th>
      <th>increase/ ( decrease ) in fair market value 10% ( 10 % ) increasein interest rates</th>
      <th>increase/ ( decrease ) in fair market value 10% ( 10 % ) decreasein interest rates</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2017</td><td>$ -20.2 ( 20.2 )</td><td>$ 20.6</td></tr>
    <tr><td>2016</td><td>-26.3 ( 26.3 )</td><td>26.9</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(19.4, 20.1), divide(#0, 2)""",1
Single_C/2009/page_195.pdf-2,what was the percentage change in the allowance for loan losses from 2007 to 2008?,80%,80.0,"subtract(16117, 8940), divide(#0, 8940)","[['in millions of dollars', '2009', '2008 ( 1 )', '2007 ( 1 )'], ['allowance for loan losses at beginning of year', '$ 29616', '$ 16117', '$ 8940'], ['gross credit losses', '-32784 ( 32784 )', '-20760 ( 20760 )', '-11864 ( 11864 )'], ['gross recoveries', '2043', '1749', '1938'], ['net credit ( losses ) recoveries ( ncls )', '$ -30741 ( 30741 )', '$ -19011 ( 19011 )', '$ -9926 ( 9926 )'], ['ncls', '$ 30741', '$ 19011', '$ 9926'], ['net reserve builds ( releases )', '5741', '11297', '6550'], ['net specific reserve builds ( releases )', '2278', '3366', '356'], ['total provision for credit losses', '$ 38760', '$ 33674', '$ 16832'], ['other net ( 2 )', '-1602 ( 1602 )', '-1164 ( 1164 )', '271'], ['allowance for loan losses at end of year', '$ 36033', '$ 29616', '$ 16117'], ['allowance for credit losses on unfunded lending commitments at beginning of year ( 3 )', '$ 887', '$ 1250', '$ 1100'], ['provision for unfunded lending commitments', '244', '-363 ( 363 )', '150'], ['allowance for credit losses on unfunded lending commitments at end of year ( 3 )', '$ 1157', '$ 887', '$ 1250'], ['total allowance for loans leases and unfunded lending commitments', '$ 37190', '$ 30503', '$ 17367']]","<table>
  <thead>
    <tr>
      <th>in millions of dollars</th>
      <th>2009</th>
      <th>2008 ( 1 )</th>
      <th>2007 ( 1 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>allowance for loan losses at beginning of year</td><td>$ 29616</td><td>$ 16117</td><td>$ 8940</td></tr>
    <tr><td>gross credit losses</td><td>-32784 ( 32784 )</td><td>-20760 ( 20760 )</td><td>-11864 ( 11864 )</td></tr>
    <tr><td>gross recoveries</td><td>2043</td><td>1749</td><td>1938</td></tr>
    <tr><td>net credit ( losses ) recoveries ( ncls )</td><td>$ -30741 ( 30741 )</td><td>$ -19011 ( 19011 )</td><td>$ -9926 ( 9926 )</td></tr>
    <tr><td>ncls</td><td>$ 30741</td><td>$ 19011</td><td>$ 9926</td></tr>
    <tr><td>net reserve builds ( releases )</td><td>5741</td><td>11297</td><td>6550</td></tr>
    <tr><td>net specific reserve builds ( releases )</td><td>2278</td><td>3366</td><td>356</td></tr>
    <tr><td>total provision for credit losses</td><td>$ 38760</td><td>$ 33674</td><td>$ 16832</td></tr>
    <tr><td>other net ( 2 )</td><td>-1602 ( 1602 )</td><td>-1164 ( 1164 )</td><td>271</td></tr>
    <tr><td>allowance for loan losses at end of year</td><td>$ 36033</td><td>$ 29616</td><td>$ 16117</td></tr>
    <tr><td>allowance for credit losses on unfunded lending commitments at beginning of year ( 3 )</td><td>$ 887</td><td>$ 1250</td><td>$ 1100</td></tr>
    <tr><td>provision for unfunded lending commitments</td><td>244</td><td>-363 ( 363 )</td><td>150</td></tr>
    <tr><td>allowance for credit losses on unfunded lending commitments at end of year ( 3 )</td><td>$ 1157</td><td>$ 887</td><td>$ 1250</td></tr>
    <tr><td>total allowance for loans leases and unfunded lending commitments</td><td>$ 37190</td><td>$ 30503</td><td>$ 17367</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(29616, 16117), divide(#0, 16117), multiply(#1, const_100)""",0
Single_LMT/2016/page_105.pdf-1,what is the average price of repurchased shares during 2015?,203.9,203.9,"divide(3.1, const_1000), divide(#0, 15.2)","[['', '2017', '2018', '2019', '2020', '2021', '2022 2013 2026'], ['qualified defined benefit pension plans', '$ 2260', '$ 2340', '$ 2420', '$ 2510', '$ 2590', '$ 13920'], ['retiree medical and life insurance plans', '180', '180', '190', '190', '190', '870']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2018</th>
      <th>2019</th>
      <th>2020</th>
      <th>2021</th>
      <th>2022 2013 2026</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>qualified defined benefit pension plans</td><td>$ 2260</td><td>$ 2340</td><td>$ 2420</td><td>$ 2510</td><td>$ 2590</td><td>$ 13920</td></tr>
    <tr><td>retiree medical and life insurance plans</td><td>180</td><td>180</td><td>190</td><td>190</td><td>190</td><td>870</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(3100, 15.2)""",0
Single_AON/2010/page_61.pdf-2,what is the total change in long-term rate of return on plan assets if there is an decrease of one hundred basis point?,56,56.0,"add(14, 35), add(#0, 5), add(#1, 2)","[['increase ( decrease ) in expense', 'change in long-term rateof return on plan assets increase', 'change in long-term rateof return on plan assets decrease'], ['u.s . plans', '$ -14 ( 14 )', '$ 14'], ['u.k . plans', '-35 ( 35 )', '35'], ['the netherlands plan', '-5 ( 5 )', '5'], ['canada plans', '-2 ( 2 )', '2']]","<table>
  <thead>
    <tr>
      <th>increase ( decrease ) in expense</th>
      <th>change in long-term rateof return on plan assets increase</th>
      <th>change in long-term rateof return on plan assets decrease</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>u.s . plans</td><td>$ -14 ( 14 )</td><td>$ 14</td></tr>
    <tr><td>u.k . plans</td><td>-35 ( 35 )</td><td>35</td></tr>
    <tr><td>the netherlands plan</td><td>-5 ( 5 )</td><td>5</td></tr>
    <tr><td>canada plans</td><td>-2 ( 2 )</td><td>2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(14, 35), add(#0, 5), add(#1, 2)""",1
Single_MRO/2018/page_93.pdf-1,by how much did the fair value of stock-based performance units outstanding decrease from 2016 to 2018?,-8.9%,-8.9,"subtract(19.60, 21.51), divide(#0, 21.51)","[['', '2018', '2017', '2016'], ['valuation date stock price', '$ 14.17', '$ 14.17', '$ 14.17'], ['expected annual dividend yield', '1.4% ( 1.4 % )', '1.4% ( 1.4 % )', '1.4% ( 1.4 % )'], ['expected volatility', '39% ( 39 % )', '43% ( 43 % )', '52% ( 52 % )'], ['risk-free interest rate', '2.5% ( 2.5 % )', '2.6% ( 2.6 % )', '2.4% ( 2.4 % )'], ['fair value of stock-based performance units outstanding', '$ 19.60', '$ 19.45', '$ 21.51']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>valuation date stock price</td><td>$ 14.17</td><td>$ 14.17</td><td>$ 14.17</td></tr>
    <tr><td>expected annual dividend yield</td><td>1.4% ( 1.4 % )</td><td>1.4% ( 1.4 % )</td><td>1.4% ( 1.4 % )</td></tr>
    <tr><td>expected volatility</td><td>39% ( 39 % )</td><td>43% ( 43 % )</td><td>52% ( 52 % )</td></tr>
    <tr><td>risk-free interest rate</td><td>2.5% ( 2.5 % )</td><td>2.6% ( 2.6 % )</td><td>2.4% ( 2.4 % )</td></tr>
    <tr><td>fair value of stock-based performance units outstanding</td><td>$ 19.60</td><td>$ 19.45</td><td>$ 21.51</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(21.51, 19.60)""",0
Single_ZBH/2008/page_86.pdf-4,what was the percentage change in total rent expense from 2007 to 2008?,12%,12.0,"subtract(41.4, 37.1), divide(#0, 37.1)","[['', '2008', '2007', '2006'], ['americas', '$ 78.5', '$ 66.9', '$ 56.7'], ['europe', '57.0', '60.7', '46.5'], ['asia pacific', '25.6', '22.7', '18.7'], ['global operations and corporate functions', '114.0', '79.7', '75.5'], ['total', '$ 275.1', '$ 230.0', '$ 197.4']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>americas</td><td>$ 78.5</td><td>$ 66.9</td><td>$ 56.7</td></tr>
    <tr><td>europe</td><td>57.0</td><td>60.7</td><td>46.5</td></tr>
    <tr><td>asia pacific</td><td>25.6</td><td>22.7</td><td>18.7</td></tr>
    <tr><td>global operations and corporate functions</td><td>114.0</td><td>79.7</td><td>75.5</td></tr>
    <tr><td>total</td><td>$ 275.1</td><td>$ 230.0</td><td>$ 197.4</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(41.4, 37.1), divide(#0, 37.1), multiply(#1, const_100)""",0
Single_ETR/2008/page_153.pdf-2,what is the growth rate in the net regulatory asset in 2008 compare 2007?,-47.5%,-47.5,"subtract(19.2, 36.6), divide(#0, 36.6)","[['', 'amount ( in thousands )'], ['2009', '$ 32452'], ['2010', '35138'], ['2011', '50421'], ['2012', '39067'], ['2013', '26301'], ['years thereafter', '137858'], ['total', '321237'], ['less : amount representing interest', '73512'], ['present value of net minimum lease payments', '$ 247725']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in thousands )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2009</td><td>$ 32452</td></tr>
    <tr><td>2010</td><td>35138</td></tr>
    <tr><td>2011</td><td>50421</td></tr>
    <tr><td>2012</td><td>39067</td></tr>
    <tr><td>2013</td><td>26301</td></tr>
    <tr><td>years thereafter</td><td>137858</td></tr>
    <tr><td>total</td><td>321237</td></tr>
    <tr><td>less : amount representing interest</td><td>73512</td></tr>
    <tr><td>present value of net minimum lease payments</td><td>$ 247725</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(19.2, 36.6), divide(#0, 36.6), multiply(#1, const_100)""",0
Single_ALXN/2016/page_89.pdf-1,how many square feet are owned by the company?,377000,377000.0,"add(160000, 80000), add(#0, 70000), add(#1, 67000)","[['location', 'operations conducted', 'approximatesquare feet', 'leaseexpirationdates'], ['new haven connecticut', 'corporate headquarters and executive sales research and development offices', '514000', '2030'], ['dublin ireland', 'global supply chain distribution and administration offices', '160000', 'owned'], ['athlone ireland', 'commercial research and development manufacturing', '80000', 'owned'], ['lexington massachusetts', 'research and development offices', '81000', '2019'], ['bogart georgia', 'commercial research and development manufacturing', '70000', 'owned'], ['smithfield rhode island', 'commercial research and development manufacturing', '67000', 'owned'], ['zurich switzerland', 'regional executive and sales offices', '69000', '2025']]","<table>
  <thead>
    <tr>
      <th>location</th>
      <th>operations conducted</th>
      <th>approximatesquare feet</th>
      <th>leaseexpirationdates</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>new haven connecticut</td><td>corporate headquarters and executive sales research and development offices</td><td>514000</td><td>2030</td></tr>
    <tr><td>dublin ireland</td><td>global supply chain distribution and administration offices</td><td>160000</td><td>owned</td></tr>
    <tr><td>athlone ireland</td><td>commercial research and development manufacturing</td><td>80000</td><td>owned</td></tr>
    <tr><td>lexington massachusetts</td><td>research and development offices</td><td>81000</td><td>2019</td></tr>
    <tr><td>bogart georgia</td><td>commercial research and development manufacturing</td><td>70000</td><td>owned</td></tr>
    <tr><td>smithfield rhode island</td><td>commercial research and development manufacturing</td><td>67000</td><td>owned</td></tr>
    <tr><td>zurich switzerland</td><td>regional executive and sales offices</td><td>69000</td><td>2025</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(160000, 80000), add(#0, 70000), add(#1, 67000)""",1
Single_AAPL/2015/page_68.pdf-4,"what was total rent expense under all operating leases , including both cancelable and noncancelable leases , in millions , in 2015 , 2014 and 2013?",2156,2156.0,"add(794, 717), add(#0, 645)","[['2016', '$ 772'], ['2017', '774'], ['2018', '744'], ['2019', '715'], ['2020', '674'], ['thereafter', '2592'], ['total', '$ 6271']]","<table>
  <thead>
    <tr>
      <th>2016</th>
      <th>$ 772</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2017</td><td>774</td></tr>
    <tr><td>2018</td><td>744</td></tr>
    <tr><td>2019</td><td>715</td></tr>
    <tr><td>2020</td><td>674</td></tr>
    <tr><td>thereafter</td><td>2592</td></tr>
    <tr><td>total</td><td>$ 6271</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(794, 717), add(#0, 645)""",1
Single_UNP/2012/page_29.pdf-1,the 2011 to 2012 change in equipment and other rents is what percent of the total expense increase in 2012?,8.6%,8.6,"subtract(1197, 1167), subtract(14181, 13833), divide(#0, #1)","[['millions', '2012', '2011', '2010', '% (  % ) change 2012 v 2011', '% (  % ) change 2011 v 2010'], ['compensation and benefits', '$ 4685', '$ 4681', '$ 4314', '-% ( - % )', '9% ( 9 % )'], ['fuel', '3608', '3581', '2486', '1', '44'], ['purchased services and materials', '2143', '2005', '1836', '7', '9'], ['depreciation', '1760', '1617', '1487', '9', '9'], ['equipment and other rents', '1197', '1167', '1142', '3', '2'], ['other', '788', '782', '719', '1', '9'], ['total', '$ 14181', '$ 13833', '$ 11984', '3% ( 3 % )', '15% ( 15 % )']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
      <th>% (  % ) change 2012 v 2011</th>
      <th>% (  % ) change 2011 v 2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>compensation and benefits</td><td>$ 4685</td><td>$ 4681</td><td>$ 4314</td><td>-% ( - % )</td><td>9% ( 9 % )</td></tr>
    <tr><td>fuel</td><td>3608</td><td>3581</td><td>2486</td><td>1</td><td>44</td></tr>
    <tr><td>purchased services and materials</td><td>2143</td><td>2005</td><td>1836</td><td>7</td><td>9</td></tr>
    <tr><td>depreciation</td><td>1760</td><td>1617</td><td>1487</td><td>9</td><td>9</td></tr>
    <tr><td>equipment and other rents</td><td>1197</td><td>1167</td><td>1142</td><td>3</td><td>2</td></tr>
    <tr><td>other</td><td>788</td><td>782</td><td>719</td><td>1</td><td>9</td></tr>
    <tr><td>total</td><td>$ 14181</td><td>$ 13833</td><td>$ 11984</td><td>3% ( 3 % )</td><td>15% ( 15 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
subtract(1197, 1167), subtract(14181, 13833), divide(#0, #1), multiply(#2, const_100)
```",0
Single_CME/2017/page_83.pdf-3,"what was the average principal in the ief programs at december 31 , 2017 and 2016 , in billions?",3.95,3.95,"add(1.1, 6.8), divide(#0, const_2)","[['( in millions )', '2016 amortizedcost', '2016 fairvalue'], ['u.s . treasury securities', '$ 5548.9', '$ 5549.0'], ['u.s . government agency securities', '1228.3', '1228.3']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2016 amortizedcost</th>
      <th>2016 fairvalue</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>u.s . treasury securities</td><td>$ 5548.9</td><td>$ 5549.0</td></tr>
    <tr><td>u.s . government agency securities</td><td>1228.3</td><td>1228.3</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(1.1, 6.8), divide(#0, const_2)""",1
Single_AAL/2014/page_59.pdf-2,what was the growth rate on the amex airline index from 12/31/2013 to 12/31/2014,49%,49.0,"subtract(152, 102), divide(#0, 102)","[['', '12/9/2013', '12/31/2013', '12/31/2014'], ['american airlines group inc .', '$ 100', '$ 103', '$ 219'], ['amex airline index', '100', '102', '152'], ['s&p 500', '100', '102', '114']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>12/9/2013</th>
      <th>12/31/2013</th>
      <th>12/31/2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>american airlines group inc .</td><td>$ 100</td><td>$ 103</td><td>$ 219</td></tr>
    <tr><td>amex airline index</td><td>100</td><td>102</td><td>152</td></tr>
    <tr><td>s&p 500</td><td>100</td><td>102</td><td>114</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(152, 102), divide(#0, 102), multiply(#1, const_100)""",0
Single_AWK/2014/page_45.pdf-1,by how much did income from continuing operations increase from 2012 to 2014?,13.8%,13.8,"subtract(2.39, 2.10), divide(#0, 2.10)","[['', '2014', '2013', '2012'], ['income from continuing operations', '$ 2.39', '$ 2.07', '$ 2.10'], ['income ( loss ) from discontinued operations net of tax', '$ -0.04 ( 0.04 )', '$ -0.01 ( 0.01 )', '$ -0.09 ( 0.09 )'], ['diluted earnings per share', '$ 2.35', '$ 2.06', '$ 2.01']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2014</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>income from continuing operations</td><td>$ 2.39</td><td>$ 2.07</td><td>$ 2.10</td></tr>
    <tr><td>income ( loss ) from discontinued operations net of tax</td><td>$ -0.04 ( 0.04 )</td><td>$ -0.01 ( 0.01 )</td><td>$ -0.09 ( 0.09 )</td></tr>
    <tr><td>diluted earnings per share</td><td>$ 2.35</td><td>$ 2.06</td><td>$ 2.01</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(2.39, 2.10)""",0
Single_AWK/2015/page_117.pdf-1,by what percentage did grant date fair value per share increase from 2013 to 2015?,54.7%,54.7,"subtract(62.10, 40.13), divide(#0, 40.13)","[['', '2015', '2014', '2013'], ['expected volatility', '14.93% ( 14.93 % )', '17.78% ( 17.78 % )', '19.37% ( 19.37 % )'], ['risk-free interest rate', '1.07% ( 1.07 % )', '0.75% ( 0.75 % )', '0.40% ( 0.40 % )'], ['expected life ( years )', '3.0', '3.0', '3.0'], ['grant date fair value per share', '$ 62.10', '$ 45.45', '$ 40.13']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2015</th>
      <th>2014</th>
      <th>2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>expected volatility</td><td>14.93% ( 14.93 % )</td><td>17.78% ( 17.78 % )</td><td>19.37% ( 19.37 % )</td></tr>
    <tr><td>risk-free interest rate</td><td>1.07% ( 1.07 % )</td><td>0.75% ( 0.75 % )</td><td>0.40% ( 0.40 % )</td></tr>
    <tr><td>expected life ( years )</td><td>3.0</td><td>3.0</td><td>3.0</td></tr>
    <tr><td>grant date fair value per share</td><td>$ 62.10</td><td>$ 45.45</td><td>$ 40.13</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(62.10, 40.13), divide(#0, 40.13), multiply(#1, const_100)""",0
Single_IP/2014/page_66.pdf-1,what percentage where north american consumer packaging net sales of consumer packaging sales in 2014?,59%,59.0,"multiply(const_2, const_1000), divide(#0, 3403)","[['in millions', '2014', '2013', '2012'], ['sales', '$ 3403', '$ 3435', '$ 3170'], ['operating profit', '178', '161', '268']]","<table>
  <thead>
    <tr>
      <th>in millions</th>
      <th>2014</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>sales</td><td>$ 3403</td><td>$ 3435</td><td>$ 3170</td></tr>
    <tr><td>operating profit</td><td>178</td><td>161</td><td>268</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(2000, 3403), multiply(#0, const_100)""",0
Single_MSI/2008/page_110.pdf-3,what is the percent change in total balance of stockholder equity between january 2006 and 2007?,700%,700.0,"subtract(16, 2), divide(#0, 2)","[['', '2008', '2007', '2006'], ['balance at january 1', '$ 2014', '$ 16', '$ 2'], ['increase ( decrease ) in fair value', '-9 ( 9 )', '-6 ( 6 )', '75'], ['reclassifications to earnings', '2', '-10 ( 10 )', '-61 ( 61 )'], ['balance at december 31', '$ -7 ( 7 )', '$ 2014', '$ 16']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at january 1</td><td>$ 2014</td><td>$ 16</td><td>$ 2</td></tr>
    <tr><td>increase ( decrease ) in fair value</td><td>-9 ( 9 )</td><td>-6 ( 6 )</td><td>75</td></tr>
    <tr><td>reclassifications to earnings</td><td>2</td><td>-10 ( 10 )</td><td>-61 ( 61 )</td></tr>
    <tr><td>balance at december 31</td><td>$ -7 ( 7 )</td><td>$ 2014</td><td>$ 16</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(16, 2), divide(#0, 2), multiply(#1, const_100)""",0
Single_LMT/2012/page_81.pdf-3,what is the percentage change in interest payments from 2010 to 2011?,-3.3%,-3.3,"subtract(326, 337), divide(#0, 337)","[['', '2012', '2011'], ['notes with rates from 2.13% ( 2.13 % ) to 6.15% ( 6.15 % ) due 2016 to 2042', '$ 5642', '$ 5308'], ['notes with rates from 7.00% ( 7.00 % ) to 7.75% ( 7.75 % ) due 2013 to 2036', '1080', '1239'], ['other debt', '478', '19'], ['total long-term debt', '7200', '6966'], ['less : unamortized discounts', '-892 ( 892 )', '-506 ( 506 )'], ['total long-term debt net of unamortized discounts', '6308', '6460'], ['less : current maturities of long-term debt', '-150 ( 150 )', '2014'], ['total long-term debt net', '$ 6158', '$ 6460']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>notes with rates from 2.13% ( 2.13 % ) to 6.15% ( 6.15 % ) due 2016 to 2042</td><td>$ 5642</td><td>$ 5308</td></tr>
    <tr><td>notes with rates from 7.00% ( 7.00 % ) to 7.75% ( 7.75 % ) due 2013 to 2036</td><td>1080</td><td>1239</td></tr>
    <tr><td>other debt</td><td>478</td><td>19</td></tr>
    <tr><td>total long-term debt</td><td>7200</td><td>6966</td></tr>
    <tr><td>less : unamortized discounts</td><td>-892 ( 892 )</td><td>-506 ( 506 )</td></tr>
    <tr><td>total long-term debt net of unamortized discounts</td><td>6308</td><td>6460</td></tr>
    <tr><td>less : current maturities of long-term debt</td><td>-150 ( 150 )</td><td>2014</td></tr>
    <tr><td>total long-term debt net</td><td>$ 6158</td><td>$ 6460</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(326, 337), divide(#0, 337), multiply(#1, const_100)""",0
Single_AWK/2015/page_112.pdf-1,what was the growth rate of the removal costs from 2014 to 2015,3.3%,3.3,"subtract(311, 301), divide(#0, 301)","[['', '2015', '2014'], ['removal costs recovered through rates', '$ 311', '$ 301'], ['pension and other postretirement benefitbalancing accounts', '59', '54'], ['other', '32', '37'], ['total regulatory liabilities', '$ 402', '$ 392']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2015</th>
      <th>2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>removal costs recovered through rates</td><td>$ 311</td><td>$ 301</td></tr>
    <tr><td>pension and other postretirement benefitbalancing accounts</td><td>59</td><td>54</td></tr>
    <tr><td>other</td><td>32</td><td>37</td></tr>
    <tr><td>total regulatory liabilities</td><td>$ 402</td><td>$ 392</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(311, 301), divide(#0, 301), multiply(#1, const_100)""",0
Single_KIM/2010/page_86.pdf-3,"what is the total sublease revenue , in millions , from 2008-2010?",18.2,18.2,"add(5.9, 5.2), add(#0, 7.1)","[['', '2010', '2009'], ['remaining net rentals', '$ 37.6', '$ 44.1'], ['estimated unguaranteed residual value', '31.7', '31.7'], ['non-recourse mortgage debt', '-30.1 ( 30.1 )', '-34.5 ( 34.5 )'], ['unearned and deferred income', '-34.2 ( 34.2 )', '-37.0 ( 37.0 )'], ['net investment in leveraged lease', '$ 5.0', '$ 4.3']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2010</th>
      <th>2009</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>remaining net rentals</td><td>$ 37.6</td><td>$ 44.1</td></tr>
    <tr><td>estimated unguaranteed residual value</td><td>31.7</td><td>31.7</td></tr>
    <tr><td>non-recourse mortgage debt</td><td>-30.1 ( 30.1 )</td><td>-34.5 ( 34.5 )</td></tr>
    <tr><td>unearned and deferred income</td><td>-34.2 ( 34.2 )</td><td>-37.0 ( 37.0 )</td></tr>
    <tr><td>net investment in leveraged lease</td><td>$ 5.0</td><td>$ 4.3</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(5.9, 5.2), add(#0, 7.1)""",1
Single_JPM/2013/page_124.pdf-2,what was the percentage change in loans reported from 2012 to 2013?,3%,3.0,"subtract(321564, 313183), divide(#0, 313183)","[['december 31 , ( in millions )', 'december 31 , 2013', 'december 31 , 2012', '2013', '2012'], ['loans retained', '$ 308263', '$ 306222', '$ 821', '$ 1434'], ['loans held-for-sale', '11290', '4406', '26', '18'], ['loans at fair value ( a )', '2011', '2555', '197', '265'], ['loans 2013 reported', '321564', '313183', '1044', '1717'], ['derivative receivables', '65759', '74983', '415', '239'], ['receivables from customers and other ( b )', '26744', '23648', '2014', '2014'], ['total wholesale credit-related assets', '414067', '411814', '1459', '1956'], ['lending-related commitments', '446232', '434814', '206', '355'], ['total wholesale credit exposure', '$ 860299', '$ 846628', '$ 1665', '$ 2311'], ['credit portfolio management derivatives notional net ( c )', '$ -27996 ( 27996 )', '$ -27447 ( 27447 )', '$ -5 ( 5 )', '$ -25 ( 25 )'], ['liquid securities and other cash collateral held against derivatives', '-14435 ( 14435 )', '-15201 ( 15201 )', 'na', 'na']]","<table>
  <thead>
    <tr>
      <th>december 31 , ( in millions )</th>
      <th>december 31 , 2013</th>
      <th>december 31 , 2012</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>loans retained</td><td>$ 308263</td><td>$ 306222</td><td>$ 821</td><td>$ 1434</td></tr>
    <tr><td>loans held-for-sale</td><td>11290</td><td>4406</td><td>26</td><td>18</td></tr>
    <tr><td>loans at fair value ( a )</td><td>2011</td><td>2555</td><td>197</td><td>265</td></tr>
    <tr><td>loans 2013 reported</td><td>321564</td><td>313183</td><td>1044</td><td>1717</td></tr>
    <tr><td>derivative receivables</td><td>65759</td><td>74983</td><td>415</td><td>239</td></tr>
    <tr><td>receivables from customers and other ( b )</td><td>26744</td><td>23648</td><td>2014</td><td>2014</td></tr>
    <tr><td>total wholesale credit-related assets</td><td>414067</td><td>411814</td><td>1459</td><td>1956</td></tr>
    <tr><td>lending-related commitments</td><td>446232</td><td>434814</td><td>206</td><td>355</td></tr>
    <tr><td>total wholesale credit exposure</td><td>$ 860299</td><td>$ 846628</td><td>$ 1665</td><td>$ 2311</td></tr>
    <tr><td>credit portfolio management derivatives notional net ( c )</td><td>$ -27996 ( 27996 )</td><td>$ -27447 ( 27447 )</td><td>$ -5 ( 5 )</td><td>$ -25 ( 25 )</td></tr>
    <tr><td>liquid securities and other cash collateral held against derivatives</td><td>-14435 ( 14435 )</td><td>-15201 ( 15201 )</td><td>na</td><td>na</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(321564, 313183), divide(#0, 313183), multiply(#1, const_100)""",0
Single_AES/2002/page_60.pdf-3,"for the years 2002 , 2001 , and 2000 , what was the average distribution of revenue to the large utilities segment?",26.3%,26.3,"add(36%, 21%), add(#0, 22%), divide(#1, const_3)","[['', '2002', '2001', '2000'], ['large utilities', '36% ( 36 % )', '21% ( 21 % )', '22% ( 22 % )'], ['growth distribution', '14% ( 14 % )', '21% ( 21 % )', '21% ( 21 % )'], ['contract generation', '29% ( 29 % )', '32% ( 32 % )', '27% ( 27 % )'], ['competitive supply', '21% ( 21 % )', '26% ( 26 % )', '30% ( 30 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2002</th>
      <th>2001</th>
      <th>2000</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>large utilities</td><td>36% ( 36 % )</td><td>21% ( 21 % )</td><td>22% ( 22 % )</td></tr>
    <tr><td>growth distribution</td><td>14% ( 14 % )</td><td>21% ( 21 % )</td><td>21% ( 21 % )</td></tr>
    <tr><td>contract generation</td><td>29% ( 29 % )</td><td>32% ( 32 % )</td><td>27% ( 27 % )</td></tr>
    <tr><td>competitive supply</td><td>21% ( 21 % )</td><td>26% ( 26 % )</td><td>30% ( 30 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(36, 21), add(#0, 22), divide(#1, const_3)""",0
Single_MSI/2008/page_71.pdf-3,what was the change in percentage of consolidated net sales from 2006 to 2008?,73%,73.0,"multiply(9164, 21%), multiply(10086, 33%), subtract(#1, #0), divide(#2, #0)","[['( dollars in millions )', 'years ended december 31 2008', 'years ended december 31 2007', 'years ended december 31 2006', 'years ended december 31 2008 20142007', '2007 20142006'], ['segment net sales', '$ 10086', '$ 10014', '$ 9164', '1% ( 1 % )', '9% ( 9 % )'], ['operating earnings', '918', '709', '787', '29% ( 29 % )', '( 10 ) % (  % )']]","<table>
  <thead>
    <tr>
      <th>( dollars in millions )</th>
      <th>years ended december 31 2008</th>
      <th>years ended december 31 2007</th>
      <th>years ended december 31 2006</th>
      <th>years ended december 31 2008 20142007</th>
      <th>2007 20142006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>segment net sales</td><td>$ 10086</td><td>$ 10014</td><td>$ 9164</td><td>1% ( 1 % )</td><td>9% ( 9 % )</td></tr>
    <tr><td>operating earnings</td><td>918</td><td>709</td><td>787</td><td>29% ( 29 % )</td><td>( 10 ) % (  % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(10086, 9164), divide(#0, 9164), multiply(#1, const_100)""",0
Single_ADI/2010/page_82.pdf-2,what is the percentage change in the total expense related to the defined contribution plan for non-u.s employees in 2010?,7.3%,7.3,"subtract(11.7, 10.9), divide(#0, 10.9)","[['fiscal years', 'operating leases'], ['2011', '$ 21871'], ['2012', '12322'], ['2013', '9078'], ['2014', '6381'], ['2015', '5422'], ['later years', '30655'], ['total', '$ 85729']]","<table>
  <thead>
    <tr>
      <th>fiscal years</th>
      <th>operating leases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2011</td><td>$ 21871</td></tr>
    <tr><td>2012</td><td>12322</td></tr>
    <tr><td>2013</td><td>9078</td></tr>
    <tr><td>2014</td><td>6381</td></tr>
    <tr><td>2015</td><td>5422</td></tr>
    <tr><td>later years</td><td>30655</td></tr>
    <tr><td>total</td><td>$ 85729</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(11.7, 10.9), divide(#0, 10.9), multiply(#1, const_100)""",0
Single_PPG/2012/page_70.pdf-2,what was the percentage change in stock-based compensation between 2011 and 2012?,103%,103.0,"subtract(73, 36), divide(#0, 36)","[['( millions )', '2012', '2011', '2010'], ['royalty income', '$ 51', '$ 55', '$ 58'], ['share of net earnings of equity affiliates ( see note 5 )', '11', '37', '45'], ['gain on sale of assets', '4', '12', '8'], ['other', '83', '73', '69'], ['total', '$ 149', '$ 177', '$ 180']]","<table>
  <thead>
    <tr>
      <th>( millions )</th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>royalty income</td><td>$ 51</td><td>$ 55</td><td>$ 58</td></tr>
    <tr><td>share of net earnings of equity affiliates ( see note 5 )</td><td>11</td><td>37</td><td>45</td></tr>
    <tr><td>gain on sale of assets</td><td>4</td><td>12</td><td>8</td></tr>
    <tr><td>other</td><td>83</td><td>73</td><td>69</td></tr>
    <tr><td>total</td><td>$ 149</td><td>$ 177</td><td>$ 180</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(73, 36), divide(#0, 36), multiply(#1, const_100)""",0
Single_ABMD/2011/page_33.pdf-4,what is the roi of an investment in abiomed inc from march 2006 to march 2009?,-62.0%,-62.0,"subtract(37.98, 100), divide(#0, 100)","[['', '3/31/2006', '3/31/2007', '3/31/2008', '3/31/2009', '3/31/2010', '3/31/2011'], ['abiomed inc', '100', '105.89', '101.86', '37.98', '80.00', '112.64'], ['nasdaq composite index', '100', '103.50', '97.41', '65.33', '102.49', '118.86'], ['nasdaq medical equipment sic code 3840-3849', '100', '88.78', '84.26', '46.12', '83.47', '91.35']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>3/31/2006</th>
      <th>3/31/2007</th>
      <th>3/31/2008</th>
      <th>3/31/2009</th>
      <th>3/31/2010</th>
      <th>3/31/2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>abiomed inc</td><td>100</td><td>105.89</td><td>101.86</td><td>37.98</td><td>80.00</td><td>112.64</td></tr>
    <tr><td>nasdaq composite index</td><td>100</td><td>103.50</td><td>97.41</td><td>65.33</td><td>102.49</td><td>118.86</td></tr>
    <tr><td>nasdaq medical equipment sic code 3840-3849</td><td>100</td><td>88.78</td><td>84.26</td><td>46.12</td><td>83.47</td><td>91.35</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(37.98, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_BKR/2017/page_47.pdf-3,what is the growth rate in wti oil prices from 2016 to 2017?,17.3%,17.3,"subtract(50.80, 43.29), divide(#0, 43.29)","[['', '2017', '2016', '2015'], ['brent oil prices ( $ /bbl ) ( 1 )', '$ 54.12', '$ 43.64', '$ 52.32'], ['wti oil prices ( $ /bbl ) ( 2 )', '50.80', '43.29', '48.66'], ['natural gas prices ( $ /mmbtu ) ( 3 )', '2.99', '2.52', '2.62']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
      <th>2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>brent oil prices ( $ /bbl ) ( 1 )</td><td>$ 54.12</td><td>$ 43.64</td><td>$ 52.32</td></tr>
    <tr><td>wti oil prices ( $ /bbl ) ( 2 )</td><td>50.80</td><td>43.29</td><td>48.66</td></tr>
    <tr><td>natural gas prices ( $ /mmbtu ) ( 3 )</td><td>2.99</td><td>2.52</td><td>2.62</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(50.80, 43.29), divide(#0, 43.29), multiply(#1, const_100)""",0
Single_JPM/2013/page_104.pdf-2,what was the percentage increase in litigation reserves in 2012?,15.6%,15.6,"subtract(3.7, 3.2), divide(#0, 3.2)","[['as of or for the year ended december 31 ( in millions )', '2013', '2012', '2011'], ['securities gains', '$ 659', '$ 2028', '$ 1385'], ['investment securities portfolio ( average )', '353712', '358029', '330885'], ['investment securities portfolio ( period 2013end ) ( a )', '347562', '365421', '355605'], ['mortgage loans ( average )', '5145', '10241', '13006'], ['mortgage loans ( period-end )', '3779', '7037', '13375']]","<table>
  <thead>
    <tr>
      <th>as of or for the year ended december 31 ( in millions )</th>
      <th>2013</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>securities gains</td><td>$ 659</td><td>$ 2028</td><td>$ 1385</td></tr>
    <tr><td>investment securities portfolio ( average )</td><td>353712</td><td>358029</td><td>330885</td></tr>
    <tr><td>investment securities portfolio ( period 2013end ) ( a )</td><td>347562</td><td>365421</td><td>355605</td></tr>
    <tr><td>mortgage loans ( average )</td><td>5145</td><td>10241</td><td>13006</td></tr>
    <tr><td>mortgage loans ( period-end )</td><td>3779</td><td>7037</td><td>13375</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(3700, 3200), divide(#0, 3200), multiply(#1, const_100)""",0
Single_RSG/2015/page_137.pdf-1,what was the percentage change in the weighted average cost per share from 2014 to 2015,15.2%,15.2,"subtract(41.39, 35.92), divide(#0, 35.92)","[['', '2015', '2014'], ['number of shares repurchased', '9.8', '11.1'], ['amount paid', '$ 404.7', '$ 400.4'], ['weighted average cost per share', '$ 41.39', '$ 35.92']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2015</th>
      <th>2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>number of shares repurchased</td><td>9.8</td><td>11.1</td></tr>
    <tr><td>amount paid</td><td>$ 404.7</td><td>$ 400.4</td></tr>
    <tr><td>weighted average cost per share</td><td>$ 41.39</td><td>$ 35.92</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(41.39, 35.92), divide(#0, 35.92), multiply(#1, const_100)""",0
Single_AMT/2005/page_84.pdf-2,what was the percent of the gradual decline in the recorded amortization expense from 2006 to 2007,2.97%,2.97,"subtract(183.6, 178.3), divide(#0, 178.3)","[['', '2005', '2004'], ['acquired customer base and network location intangibles', '$ 2606546', '$ 1369607'], ['deferred financing costs', '65623', '89736'], ['acquired licenses and other intangibles', '51703', '43404'], ['total', '2723872', '1502747'], ['less accumulated amortization', '-646560 ( 646560 )', '-517444 ( 517444 )'], ['other intangible assets net', '$ 2077312', '$ 985303']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>acquired customer base and network location intangibles</td><td>$ 2606546</td><td>$ 1369607</td></tr>
    <tr><td>deferred financing costs</td><td>65623</td><td>89736</td></tr>
    <tr><td>acquired licenses and other intangibles</td><td>51703</td><td>43404</td></tr>
    <tr><td>total</td><td>2723872</td><td>1502747</td></tr>
    <tr><td>less accumulated amortization</td><td>-646560 ( 646560 )</td><td>-517444 ( 517444 )</td></tr>
    <tr><td>other intangible assets net</td><td>$ 2077312</td><td>$ 985303</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(183.6, 178.3), divide(#0, 183.6), multiply(#1, const_100)""",0
Single_AMT/2015/page_50.pdf-2,for the= quarter ended march 31 what was the percent of the change in the stock price from the highest to the lowest,9.3%,9.3,"subtract(101.88, 93.21), divide(#0, 93.21)","[['2015', 'high', 'low'], ['quarter ended march 31', '$ 101.88', '$ 93.21'], ['quarter ended june 30', '98.64', '91.99'], ['quarter ended september 30', '101.54', '86.83'], ['quarter ended december 31', '104.12', '87.23'], ['2014', 'high', 'low'], ['quarter ended march 31', '$ 84.90', '$ 78.38'], ['quarter ended june 30', '90.73', '80.10'], ['quarter ended september 30', '99.90', '89.05'], ['quarter ended december 31', '106.31', '90.20']]","<table>
  <thead>
    <tr>
      <th>2015</th>
      <th>high</th>
      <th>low</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>quarter ended march 31</td><td>$ 101.88</td><td>$ 93.21</td></tr>
    <tr><td>quarter ended june 30</td><td>98.64</td><td>91.99</td></tr>
    <tr><td>quarter ended september 30</td><td>101.54</td><td>86.83</td></tr>
    <tr><td>quarter ended december 31</td><td>104.12</td><td>87.23</td></tr>
    <tr><td>2014</td><td>high</td><td>low</td></tr>
    <tr><td>quarter ended march 31</td><td>$ 84.90</td><td>$ 78.38</td></tr>
    <tr><td>quarter ended june 30</td><td>90.73</td><td>80.10</td></tr>
    <tr><td>quarter ended september 30</td><td>99.90</td><td>89.05</td></tr>
    <tr><td>quarter ended december 31</td><td>106.31</td><td>90.20</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(101.88, 93.21), divide(#0, 101.88), multiply(#1, const_100)""",0
Single_AMT/2010/page_111.pdf-2,what is the total net operating loss carryforwards?,2484034,2484034.0,"add(1197607, 1188003), add(#0, 98424)","[['years ended december 31,', 'federal', 'state', 'foreign'], ['2011 to 2015', '$ 2014', '$ 2014', '$ 503'], ['2016 to 2020', '2014', '331315', '5509'], ['2021 to 2025', '774209', '576780', '2014'], ['2026 to 2030', '423398', '279908', '92412'], ['total', '$ 1197607', '$ 1188003', '$ 98424']]","<table>
  <thead>
    <tr>
      <th>years ended december 31,</th>
      <th>federal</th>
      <th>state</th>
      <th>foreign</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2011 to 2015</td><td>$ 2014</td><td>$ 2014</td><td>$ 503</td></tr>
    <tr><td>2016 to 2020</td><td>2014</td><td>331315</td><td>5509</td></tr>
    <tr><td>2021 to 2025</td><td>774209</td><td>576780</td><td>2014</td></tr>
    <tr><td>2026 to 2030</td><td>423398</td><td>279908</td><td>92412</td></tr>
    <tr><td>total</td><td>$ 1197607</td><td>$ 1188003</td><td>$ 98424</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(1.2, 0.3)""",0
Single_UNP/2012/page_79.pdf-1,"if vies were consolidated , what would the total minimum lease payments increase to , in millions?",10282,10282.0,"multiply(3.6, const_1000), add(#0, 4241), add(#1, 2441)","[['millions', 'operatingleases', 'capitalleases'], ['2013', '$ 525', '$ 282'], ['2014', '466', '265'], ['2015', '410', '253'], ['2016', '375', '232'], ['2017', '339', '243'], ['later years', '2126', '1166'], ['total minimum leasepayments', '$ 4241', '$ 2441'], ['amount representing interest', 'n/a', '-593 ( 593 )'], ['present value of minimum leasepayments', 'n/a', '$ 1848']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>operatingleases</th>
      <th>capitalleases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2013</td><td>$ 525</td><td>$ 282</td></tr>
    <tr><td>2014</td><td>466</td><td>265</td></tr>
    <tr><td>2015</td><td>410</td><td>253</td></tr>
    <tr><td>2016</td><td>375</td><td>232</td></tr>
    <tr><td>2017</td><td>339</td><td>243</td></tr>
    <tr><td>later years</td><td>2126</td><td>1166</td></tr>
    <tr><td>total minimum leasepayments</td><td>$ 4241</td><td>$ 2441</td></tr>
    <tr><td>amount representing interest</td><td>n/a</td><td>-593 ( 593 )</td></tr>
    <tr><td>present value of minimum leasepayments</td><td>n/a</td><td>$ 1848</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(4241, 2441)""",0
Single_IQV/2016/page_57.pdf-1,what is the return on investment for q if the investment is sold at the end of year 2014?,40%,40.0,"subtract(140, const_100), divide(#0, const_100)","[['', '5/9/2013', '12/31/2013', '12/31/2014', '12/31/2015', '12/31/2016'], ['q', '$ 100', '$ 110', '$ 140', '$ 163', '$ 181'], ['peer group', '$ 100', '$ 116', '$ 143', '$ 151', '$ 143'], ['s&p 500', '$ 100', '$ 114', '$ 127', '$ 126', '$ 138']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>5/9/2013</th>
      <th>12/31/2013</th>
      <th>12/31/2014</th>
      <th>12/31/2015</th>
      <th>12/31/2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>q</td><td>$ 100</td><td>$ 110</td><td>$ 140</td><td>$ 163</td><td>$ 181</td></tr>
    <tr><td>peer group</td><td>$ 100</td><td>$ 116</td><td>$ 143</td><td>$ 151</td><td>$ 143</td></tr>
    <tr><td>s&p 500</td><td>$ 100</td><td>$ 114</td><td>$ 127</td><td>$ 126</td><td>$ 138</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(140, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_IPG/2017/page_38.pdf-1,what was the total amount of corporate and other expenses from 2015-2017?,415.6,415.6,"subtract(147.2, 5.4), add(147.2, #0), add(#1, 126.6)","[['cash flow data', 'years ended december 31 , 2017', 'years ended december 31 , 2016', 'years ended december 31 , 2015'], ['net income adjusted to reconcile to net cash provided by operating activities1', '$ 887.3', '$ 1023.2', '$ 848.8'], ['net cash used in working capital2', '-29.9 ( 29.9 )', '-414.9 ( 414.9 )', '-99.9 ( 99.9 )'], ['changes in other non-current assets and liabilities', '24.4', '-95.5 ( 95.5 )', '-60.4 ( 60.4 )'], ['net cash provided by operating activities', '$ 881.8', '$ 512.8', '$ 688.5'], ['net cash used in investing activities', '-196.2 ( 196.2 )', '-263.9 ( 263.9 )', '-199.7 ( 199.7 )'], ['net cash used in financing activities', '-1004.9 ( 1004.9 )', '-666.4 ( 666.4 )', '-490.9 ( 490.9 )']]","<table>
  <thead>
    <tr>
      <th>cash flow data</th>
      <th>years ended december 31 , 2017</th>
      <th>years ended december 31 , 2016</th>
      <th>years ended december 31 , 2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net income adjusted to reconcile to net cash provided by operating activities1</td><td>$ 887.3</td><td>$ 1023.2</td><td>$ 848.8</td></tr>
    <tr><td>net cash used in working capital2</td><td>-29.9 ( 29.9 )</td><td>-414.9 ( 414.9 )</td><td>-99.9 ( 99.9 )</td></tr>
    <tr><td>changes in other non-current assets and liabilities</td><td>24.4</td><td>-95.5 ( 95.5 )</td><td>-60.4 ( 60.4 )</td></tr>
    <tr><td>net cash provided by operating activities</td><td>$ 881.8</td><td>$ 512.8</td><td>$ 688.5</td></tr>
    <tr><td>net cash used in investing activities</td><td>-196.2 ( 196.2 )</td><td>-263.9 ( 263.9 )</td><td>-199.7 ( 199.7 )</td></tr>
    <tr><td>net cash used in financing activities</td><td>-1004.9 ( 1004.9 )</td><td>-666.4 ( 666.4 )</td><td>-490.9 ( 490.9 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(126.6, 20.6), add(147.2, #0), add(#1, 5.4)""",0
Single_UNP/2006/page_72.pdf-2,what was the percentage change in personal injury liability from 2005 to 2006?,2%,2.0,"subtract(631, 619), divide(#0, 619)","[['millions of dollars', '2006', '2005', '2004'], ['beginning balance', '$ 619', '$ 639', '$ 619'], ['accruals', '240', '247', '288'], ['payments', '-228 ( 228 )', '-267 ( 267 )', '-268 ( 268 )'], ['ending balance at december 31', '$ 631', '$ 619', '$ 639'], ['current portion ending balance at december 31', '$ 233', '$ 274', '$ 274']]","<table>
  <thead>
    <tr>
      <th>millions of dollars</th>
      <th>2006</th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>beginning balance</td><td>$ 619</td><td>$ 639</td><td>$ 619</td></tr>
    <tr><td>accruals</td><td>240</td><td>247</td><td>288</td></tr>
    <tr><td>payments</td><td>-228 ( 228 )</td><td>-267 ( 267 )</td><td>-268 ( 268 )</td></tr>
    <tr><td>ending balance at december 31</td><td>$ 631</td><td>$ 619</td><td>$ 639</td></tr>
    <tr><td>current portion ending balance at december 31</td><td>$ 233</td><td>$ 274</td><td>$ 274</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(631, 619), divide(#0, 619), multiply(#1, const_100)""",0
Single_LMT/2014/page_49.pdf-1,what is the growth rate in net sales for mst in 2014?,-0.1%,-0.1,"subtract(7147, 7153), divide(#0, 7153)","[['', '2014', '2013', '2012'], ['net sales', '$ 7147', '$ 7153', '$ 7579'], ['operating profit', '843', '905', '737'], ['operating margins', '11.8% ( 11.8 % )', '12.7% ( 12.7 % )', '9.7% ( 9.7 % )'], ['backlog at year-end', '$ 11700', '$ 10800', '$ 10700']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2014</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net sales</td><td>$ 7147</td><td>$ 7153</td><td>$ 7579</td></tr>
    <tr><td>operating profit</td><td>843</td><td>905</td><td>737</td></tr>
    <tr><td>operating margins</td><td>11.8% ( 11.8 % )</td><td>12.7% ( 12.7 % )</td><td>9.7% ( 9.7 % )</td></tr>
    <tr><td>backlog at year-end</td><td>$ 11700</td><td>$ 10800</td><td>$ 10700</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(7147, 7153), divide(#0, 7153), multiply(#1, const_100)""",0
Single_AMT/2007/page_111.pdf-2,what is the total number of towers acquired in the last three years?,407,407.0,"add(293, 84), add(#0, 30)","[['2008', '$ 1817'], ['2009', '1241'], ['2010', '78828'], ['2011', '13714'], ['2012', '1894998'], ['thereafter', '2292895'], ['total cash obligations', '$ 4283493'], ['accreted value of the discount and premium of 3.00% ( 3.00 % ) notes and 7.125% ( 7.125 % ) notes', '1791'], ['balance as of december 31 2007', '$ 4285284']]","<table>
  <thead>
    <tr>
      <th>2008</th>
      <th>$ 1817</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2009</td><td>1241</td></tr>
    <tr><td>2010</td><td>78828</td></tr>
    <tr><td>2011</td><td>13714</td></tr>
    <tr><td>2012</td><td>1894998</td></tr>
    <tr><td>thereafter</td><td>2292895</td></tr>
    <tr><td>total cash obligations</td><td>$ 4283493</td></tr>
    <tr><td>accreted value of the discount and premium of 3.00% ( 3.00 % ) notes and 7.125% ( 7.125 % ) notes</td><td>1791</td></tr>
    <tr><td>balance as of december 31 2007</td><td>$ 4285284</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(293, 84), add(#0, 30)""",1
Single_LMT/2012/page_46.pdf-3,what is the growth rate in operating profit for mst in 2011?,-9.5%,-9.5,"subtract(645, 713), divide(#0, 713)","[['', '2012', '2011', '2010'], ['net sales', '$ 7579', '$ 7132', '$ 7443'], ['operating profit', '737', '645', '713'], ['operating margins', '9.7% ( 9.7 % )', '9.0% ( 9.0 % )', '9.6% ( 9.6 % )'], ['backlog at year-end', '10700', '10500', '10600']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net sales</td><td>$ 7579</td><td>$ 7132</td><td>$ 7443</td></tr>
    <tr><td>operating profit</td><td>737</td><td>645</td><td>713</td></tr>
    <tr><td>operating margins</td><td>9.7% ( 9.7 % )</td><td>9.0% ( 9.0 % )</td><td>9.6% ( 9.6 % )</td></tr>
    <tr><td>backlog at year-end</td><td>10700</td><td>10500</td><td>10600</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(645, 713), divide(#0, 713), multiply(#1, const_100)""",0
Single_UNP/2010/page_79.pdf-4,"what is the average rent expense for operating leases with terms exceeding one month from 2008-2010 , in millions?",685.67,685.67,"add(624, 686), add(#0, 747), divide(#1, const_3)","[['millions', 'operatingleases', 'capitalleases'], ['2011', '$ 613', '$ 311'], ['2012', '526', '251'], ['2013', '461', '253'], ['2014', '382', '261'], ['2015', '340', '262'], ['later years', '2599', '1355'], ['total minimum lease payments', '$ 4921', '$ 2693'], ['amount representing interest', 'n/a', '-784 ( 784 )'], ['present value of minimum lease payments', 'n/a', '$ 1909']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>operatingleases</th>
      <th>capitalleases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2011</td><td>$ 613</td><td>$ 311</td></tr>
    <tr><td>2012</td><td>526</td><td>251</td></tr>
    <tr><td>2013</td><td>461</td><td>253</td></tr>
    <tr><td>2014</td><td>382</td><td>261</td></tr>
    <tr><td>2015</td><td>340</td><td>262</td></tr>
    <tr><td>later years</td><td>2599</td><td>1355</td></tr>
    <tr><td>total minimum lease payments</td><td>$ 4921</td><td>$ 2693</td></tr>
    <tr><td>amount representing interest</td><td>n/a</td><td>-784 ( 784 )</td></tr>
    <tr><td>present value of minimum lease payments</td><td>n/a</td><td>$ 1909</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(624, 686), add(#0, 747), divide(#1, 3)""",1
Single_SNA/2012/page_82.pdf-2,what is the percentage change in the total other accrued liabilities from 2011 to 2012?,-3.1%,-3.1,"subtract(247.9, 255.9), divide(#0, 255.9)","[['( amounts in millions )', '2012', '2011'], ['income taxes', '$ 19.6', '$ 11.7'], ['accrued restructuring', '7.2', '8.4'], ['accrued warranty', '18.9', '18.6'], ['deferred subscription revenue', '24.8', '24.9'], ['accrued property payroll and other tax', '32.9', '30.4'], ['accrued selling and promotion expense', '26.6', '29.1'], ['other', '117.9', '132.8'], ['total other accrued liabilities', '$ 247.9', '$ 255.9']]","<table>
  <thead>
    <tr>
      <th>( amounts in millions )</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>income taxes</td><td>$ 19.6</td><td>$ 11.7</td></tr>
    <tr><td>accrued restructuring</td><td>7.2</td><td>8.4</td></tr>
    <tr><td>accrued warranty</td><td>18.9</td><td>18.6</td></tr>
    <tr><td>deferred subscription revenue</td><td>24.8</td><td>24.9</td></tr>
    <tr><td>accrued property payroll and other tax</td><td>32.9</td><td>30.4</td></tr>
    <tr><td>accrued selling and promotion expense</td><td>26.6</td><td>29.1</td></tr>
    <tr><td>other</td><td>117.9</td><td>132.8</td></tr>
    <tr><td>total other accrued liabilities</td><td>$ 247.9</td><td>$ 255.9</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(247.9, 255.9), divide(#0, 255.9), multiply(#1, const_100)""",0
Single_IP/2012/page_64.pdf-2,"what percentage of contractual obligations for future payments under existing debt and lease commitments and purchase obligations at december 31 , 2012 is short term for the year 2014?",58%,58.0,"add(136, 828), divide(#0, 1672)","[['in millions', '2013', '2014', '2015', '2016', '2017', 'thereafter'], ['maturities of long-term debt ( a )', '$ 444', '$ 708', '$ 479', '$ 571', '$ 216', '$ 7722'], ['debt obligations with right of offset ( b )', '2014', '2014', '2014', '5173', '2014', '2014'], ['lease obligations', '198', '136', '106', '70', '50', '141'], ['purchase obligations ( c )', '3213', '828', '722', '620', '808', '2654'], ['total ( d )', '$ 3855', '$ 1672', '$ 1307', '$ 6434', '$ 1074', '$ 10517']]","<table>
  <thead>
    <tr>
      <th>in millions</th>
      <th>2013</th>
      <th>2014</th>
      <th>2015</th>
      <th>2016</th>
      <th>2017</th>
      <th>thereafter</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>maturities of long-term debt ( a )</td><td>$ 444</td><td>$ 708</td><td>$ 479</td><td>$ 571</td><td>$ 216</td><td>$ 7722</td></tr>
    <tr><td>debt obligations with right of offset ( b )</td><td>2014</td><td>2014</td><td>2014</td><td>5173</td><td>2014</td><td>2014</td></tr>
    <tr><td>lease obligations</td><td>198</td><td>136</td><td>106</td><td>70</td><td>50</td><td>141</td></tr>
    <tr><td>purchase obligations ( c )</td><td>3213</td><td>828</td><td>722</td><td>620</td><td>808</td><td>2654</td></tr>
    <tr><td>total ( d )</td><td>$ 3855</td><td>$ 1672</td><td>$ 1307</td><td>$ 6434</td><td>$ 1074</td><td>$ 10517</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(1672, 1307), divide(1672, #0), multiply(#1, const_100)""",0
Single_ETR/2011/page_435.pdf-2,what is actual operating cash flow reported for 2011?,3.129,3.129,"divide(221, const_1000000), subtract(3.35, #0)","[['', 'minimum', 'target', 'maximum'], ['earnings per share ( $ )', '$ 6.10', '$ 6.60', '$ 7.10'], ['operating cash flow ( $ in billions )', '$ 2.97', '$ 3.35', '$ 3.70']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>minimum</th>
      <th>target</th>
      <th>maximum</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>earnings per share ( $ )</td><td>$ 6.10</td><td>$ 6.60</td><td>$ 7.10</td></tr>
    <tr><td>operating cash flow ( $ in billions )</td><td>$ 2.97</td><td>$ 3.35</td><td>$ 3.70</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(3.35, 0.221)""",0
Single_RCL/2012/page_17.pdf-3,what was the percentage increase of global cruise guests from 2008-2012?,21.18%,21.18,"subtract(20823000, 17184000), divide(#0, 17184000), multiply(#1, const_100)","[['year', 'global cruise guests ( 1 )', 'weighted-average supply of berths marketed globally ( 1 )', 'north american cruise guests ( 2 )', 'weighted-average supply of berths marketed in north america ( 1 )', 'european cruise guests', 'weighted-average supply of berths marketed in europe ( 1 )'], ['2008', '17184000', '347000', '10093000', '219000', '4500000', '120000'], ['2009', '17340000', '363000', '10198000', '222000', '5000000', '131000'], ['2010', '18800000', '391000', '10781000', '232000', '5540000', '143000'], ['2011', '20227000', '412000', '11625000', '245000', '5894000', '149000'], ['2012', '20823000', '425000', '12044000', '254000', '6040000', '152000']]","<table>
  <thead>
    <tr>
      <th>year</th>
      <th>global cruise guests ( 1 )</th>
      <th>weighted-average supply of berths marketed globally ( 1 )</th>
      <th>north american cruise guests ( 2 )</th>
      <th>weighted-average supply of berths marketed in north america ( 1 )</th>
      <th>european cruise guests</th>
      <th>weighted-average supply of berths marketed in europe ( 1 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2008</td><td>17184000</td><td>347000</td><td>10093000</td><td>219000</td><td>4500000</td><td>120000</td></tr>
    <tr><td>2009</td><td>17340000</td><td>363000</td><td>10198000</td><td>222000</td><td>5000000</td><td>131000</td></tr>
    <tr><td>2010</td><td>18800000</td><td>391000</td><td>10781000</td><td>232000</td><td>5540000</td><td>143000</td></tr>
    <tr><td>2011</td><td>20227000</td><td>412000</td><td>11625000</td><td>245000</td><td>5894000</td><td>149000</td></tr>
    <tr><td>2012</td><td>20823000</td><td>425000</td><td>12044000</td><td>254000</td><td>6040000</td><td>152000</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(20823000, 17184000), divide(#0, 17184000), multiply(#1, const_100)""",1
Single_ZBH/2013/page_46.pdf-2,what is the percent change in accelerated software amortization from 2012 to 2013?,33.3%,33.3,"subtract(6.0, 4.5), divide(#0, 4.5)","[['for the years ended december 31,', '2013', '2012', '2011'], ['impairment/loss on disposal of assets', '$ 10.9', '$ 14.6', '$ 8.4'], ['consulting and professional fees', '99.1', '90.1', '26.0'], ['employee severance and retention including share-based compensation acceleration', '14.2', '8.2', '23.1'], ['dedicated project personnel', '34.0', '15.1', '3.2'], ['certain r&d agreements', '0.8', '2013', '2013'], ['relocated facilities', '3.6', '1.8', '2013'], ['distributor acquisitions', '0.4', '0.8', '2.0'], ['certain litigation matters', '26.9', '13.7', '0.1'], ['contract terminations', '3.9', '6.6', '6.3'], ['contingent consideration adjustments', '9.0', '-2.8 ( 2.8 )', '2013'], ['accelerated software amortization', '6.0', '4.5', '2013'], ['other', '7.9', '2.8', '6.1'], ['special items', '$ 216.7', '$ 155.4', '$ 75.2']]","<table>
  <thead>
    <tr>
      <th>for the years ended december 31,</th>
      <th>2013</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>impairment/loss on disposal of assets</td><td>$ 10.9</td><td>$ 14.6</td><td>$ 8.4</td></tr>
    <tr><td>consulting and professional fees</td><td>99.1</td><td>90.1</td><td>26.0</td></tr>
    <tr><td>employee severance and retention including share-based compensation acceleration</td><td>14.2</td><td>8.2</td><td>23.1</td></tr>
    <tr><td>dedicated project personnel</td><td>34.0</td><td>15.1</td><td>3.2</td></tr>
    <tr><td>certain r&d agreements</td><td>0.8</td><td>2013</td><td>2013</td></tr>
    <tr><td>relocated facilities</td><td>3.6</td><td>1.8</td><td>2013</td></tr>
    <tr><td>distributor acquisitions</td><td>0.4</td><td>0.8</td><td>2.0</td></tr>
    <tr><td>certain litigation matters</td><td>26.9</td><td>13.7</td><td>0.1</td></tr>
    <tr><td>contract terminations</td><td>3.9</td><td>6.6</td><td>6.3</td></tr>
    <tr><td>contingent consideration adjustments</td><td>9.0</td><td>-2.8 ( 2.8 )</td><td>2013</td></tr>
    <tr><td>accelerated software amortization</td><td>6.0</td><td>4.5</td><td>2013</td></tr>
    <tr><td>other</td><td>7.9</td><td>2.8</td><td>6.1</td></tr>
    <tr><td>special items</td><td>$ 216.7</td><td>$ 155.4</td><td>$ 75.2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(6.0, 4.5), divide(#0, 4.5), multiply(#1, const_100)""",1
Single_TROW/2009/page_23.pdf-3,"what was the value , in millions of dollars , of net revenues in 2007?",2232,2232.0,"multiply(2.12, const_1000), add(#0, 112)","[['', '2008', '2009', 'change'], ['other than temporary impairments recognized', '$ -91.3 ( 91.3 )', '$ -36.1 ( 36.1 )', '$ 55.2'], ['capital gain distributions received', '5.6', '2.0', '-3.6 ( 3.6 )'], ['net gain ( loss ) realized on fund dispositions', '-4.5 ( 4.5 )', '7.4', '11.9'], ['net loss recognized on fund holdings', '$ -90.2 ( 90.2 )', '$ -26.7 ( 26.7 )', '$ 63.5']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2009</th>
      <th>change</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>other than temporary impairments recognized</td><td>$ -91.3 ( 91.3 )</td><td>$ -36.1 ( 36.1 )</td><td>$ 55.2</td></tr>
    <tr><td>capital gain distributions received</td><td>5.6</td><td>2.0</td><td>-3.6 ( 3.6 )</td></tr>
    <tr><td>net gain ( loss ) realized on fund dispositions</td><td>-4.5 ( 4.5 )</td><td>7.4</td><td>11.9</td></tr>
    <tr><td>net loss recognized on fund holdings</td><td>$ -90.2 ( 90.2 )</td><td>$ -26.7 ( 26.7 )</td><td>$ 63.5</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
add(2.12, 0.112), divide(#0, 0.95)
```",0
Single_CME/2010/page_113.pdf-3,what was the sum of the total fair value of restricted stock that vested during 2008 and 2010 in millions,19,19.0,"add(10.3, 6.2), add(#0, 2.5)","[['', 'number of shares', 'weighted average grant date fair value'], ['outstanding at december 31 2009', '116677', '$ 280'], ['granted', '134245', '275'], ['vested', '-34630 ( 34630 )', '257'], ['cancelled', '-19830 ( 19830 )', '260'], ['outstanding at december 31 2010', '196462', '283']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>number of shares</th>
      <th>weighted average grant date fair value</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>outstanding at december 31 2009</td><td>116677</td><td>$ 280</td></tr>
    <tr><td>granted</td><td>134245</td><td>275</td></tr>
    <tr><td>vested</td><td>-34630 ( 34630 )</td><td>257</td></tr>
    <tr><td>cancelled</td><td>-19830 ( 19830 )</td><td>260</td></tr>
    <tr><td>outstanding at december 31 2010</td><td>196462</td><td>283</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(2.5, 10.3)""",0
Single_UNP/2015/page_80.pdf-3,what percentage of total minimum lease payments are operating leases leases?,68%,68.0,"add(3430, 1587), divide(3430, #0)","[['millions', 'operatingleases', 'capitalleases'], ['2016', '$ 491', '$ 217'], ['2017', '446', '220'], ['2018', '371', '198'], ['2019', '339', '184'], ['2020', '282', '193'], ['later years', '1501', '575'], ['total minimum lease payments', '$ 3430', '$ 1587'], ['amount representing interest', 'n/a', '-319 ( 319 )'], ['present value of minimum lease payments', 'n/a', '$ 1268']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>operatingleases</th>
      <th>capitalleases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2016</td><td>$ 491</td><td>$ 217</td></tr>
    <tr><td>2017</td><td>446</td><td>220</td></tr>
    <tr><td>2018</td><td>371</td><td>198</td></tr>
    <tr><td>2019</td><td>339</td><td>184</td></tr>
    <tr><td>2020</td><td>282</td><td>193</td></tr>
    <tr><td>later years</td><td>1501</td><td>575</td></tr>
    <tr><td>total minimum lease payments</td><td>$ 3430</td><td>$ 1587</td></tr>
    <tr><td>amount representing interest</td><td>n/a</td><td>-319 ( 319 )</td></tr>
    <tr><td>present value of minimum lease payments</td><td>n/a</td><td>$ 1268</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(3430, 3430), multiply(#0, const_100)""",0
Single_UNP/2008/page_26.pdf-4,what was the percentage change in free cash flow from 2007 to 2008?,70%,70.0,"subtract(825, 487), divide(#0, 487)","[['millions of dollars', '2008', '2007', '2006'], ['cash provided by operating activities', '$ 4070', '$ 3277', '$ 2880'], ['cash used in investing activities', '-2764 ( 2764 )', '-2426 ( 2426 )', '-2042 ( 2042 )'], ['dividends paid', '-481 ( 481 )', '-364 ( 364 )', '-322 ( 322 )'], ['free cash flow', '$ 825', '$ 487', '$ 516']]","<table>
  <thead>
    <tr>
      <th>millions of dollars</th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>cash provided by operating activities</td><td>$ 4070</td><td>$ 3277</td><td>$ 2880</td></tr>
    <tr><td>cash used in investing activities</td><td>-2764 ( 2764 )</td><td>-2426 ( 2426 )</td><td>-2042 ( 2042 )</td></tr>
    <tr><td>dividends paid</td><td>-481 ( 481 )</td><td>-364 ( 364 )</td><td>-322 ( 322 )</td></tr>
    <tr><td>free cash flow</td><td>$ 825</td><td>$ 487</td><td>$ 516</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(825, 487), divide(#0, 487), multiply(#1, const_100)""",0
Single_STT/2013/page_71.pdf-4,what percent has short duration advances in the us increased between 2011 and 2013?,18.15%,18.15,"subtract(2356, 1994), divide(#0, 1994)","[['( in millions )', '2013', '2012', '2011'], ['average u.s . short-duration advances', '$ 2356', '$ 1972', '$ 1994'], ['average non-u.s . short-duration advances', '1393', '1393', '1585'], ['average total short-duration advances', '$ 3749', '$ 3365', '$ 3579']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2013</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>average u.s . short-duration advances</td><td>$ 2356</td><td>$ 1972</td><td>$ 1994</td></tr>
    <tr><td>average non-u.s . short-duration advances</td><td>1393</td><td>1393</td><td>1585</td></tr>
    <tr><td>average total short-duration advances</td><td>$ 3749</td><td>$ 3365</td><td>$ 3579</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(2356, 1994), divide(#0, 1994), multiply(#1, const_100)""",0
Single_ETR/2017/page_35.pdf-1,what is the percentage change in the debt-to-capital ratio from 2016 to 2017?,3.5%,3.5,"subtract(67.1, 64.8), divide(#0, 64.8)","[['', '2017', '2016'], ['debt to capital', '67.1% ( 67.1 % )', '64.8% ( 64.8 % )'], ['effect of excluding securitization bonds', '( 0.8% ( 0.8 % ) )', '( 1.0% ( 1.0 % ) )'], ['debt to capital excluding securitization bonds ( a )', '66.3% ( 66.3 % )', '63.8% ( 63.8 % )'], ['effect of subtracting cash', '( 1.1% ( 1.1 % ) )', '( 2.0% ( 2.0 % ) )'], ['net debt to net capital excluding securitization bonds ( a )', '65.2% ( 65.2 % )', '61.8% ( 61.8 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>debt to capital</td><td>67.1% ( 67.1 % )</td><td>64.8% ( 64.8 % )</td></tr>
    <tr><td>effect of excluding securitization bonds</td><td>( 0.8% ( 0.8 % ) )</td><td>( 1.0% ( 1.0 % ) )</td></tr>
    <tr><td>debt to capital excluding securitization bonds ( a )</td><td>66.3% ( 66.3 % )</td><td>63.8% ( 63.8 % )</td></tr>
    <tr><td>effect of subtracting cash</td><td>( 1.1% ( 1.1 % ) )</td><td>( 2.0% ( 2.0 % ) )</td></tr>
    <tr><td>net debt to net capital excluding securitization bonds ( a )</td><td>65.2% ( 65.2 % )</td><td>61.8% ( 61.8 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(67.1, 64.8), divide(#0, 64.8), multiply(#1, const_100)""",0
Single_AWK/2017/page_143.pdf-3,"based on the weighted average grant date fair value ( per share ) , what was the total granted rsu cost during 2017?",$ 11736600.00 \\n,11736600.0,"multiply(186, const_1000), multiply(#0, 63.10)","[['', 'shares ( in thousands )', 'weightedaverage grantdate fair value ( per share )'], ['non-vested total as of december 31 2016', '309', '$ 55.94'], ['granted', '186', '63.10'], ['vested', '-204 ( 204 )', '46.10'], ['forfeited', '-10 ( 10 )', '70.50'], ['non-vested total as of december 31 2017', '281', '$ 67.33']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>shares ( in thousands )</th>
      <th>weightedaverage grantdate fair value ( per share )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>non-vested total as of december 31 2016</td><td>309</td><td>$ 55.94</td></tr>
    <tr><td>granted</td><td>186</td><td>63.10</td></tr>
    <tr><td>vested</td><td>-204 ( 204 )</td><td>46.10</td></tr>
    <tr><td>forfeited</td><td>-10 ( 10 )</td><td>70.50</td></tr>
    <tr><td>non-vested total as of december 31 2017</td><td>281</td><td>$ 67.33</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","``` 
multiply(186, 63.10)
```",0
Single_AMT/2012/page_111.pdf-4,"for 2011 , tax related assets were how much of total current assets and prepaids?",45%,45.0,"add(31384, 81276), divide(#0, 250273)","[['', '2012', '2011 ( 1 )'], ['prepaid income tax', '$ 57665', '$ 31384'], ['prepaid operating ground leases', '56916', '49585'], ['value added tax and other consumption tax receivables', '22443', '81276'], ['prepaid assets', '19037', '28031'], ['other miscellaneous current assets', '66790', '59997'], ['balance as of december 31,', '$ 222851', '$ 250273']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011 ( 1 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>prepaid income tax</td><td>$ 57665</td><td>$ 31384</td></tr>
    <tr><td>prepaid operating ground leases</td><td>56916</td><td>49585</td></tr>
    <tr><td>value added tax and other consumption tax receivables</td><td>22443</td><td>81276</td></tr>
    <tr><td>prepaid assets</td><td>19037</td><td>28031</td></tr>
    <tr><td>other miscellaneous current assets</td><td>66790</td><td>59997</td></tr>
    <tr><td>balance as of december 31,</td><td>$ 222851</td><td>$ 250273</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(31384, 49585), add(#0, 81276), add(#1, 28031), add(#2, 59997), divide(31384, #3), multiply(#4, const_100)""",0
Single_C/2008/page_105.pdf-1,what was the total long-term debt for citigroup subsidiaries long-term debt at december 312008,359.6,359.6,"add(192.3, 20.6), add(#0, 37.4), add(109.3, #1)","[['in billions of dollars', 'citigroup parent company', 'cgmhi ( 2 )', 'citigroup funding inc. ( 2 )', 'other citigroup subsidiaries', ''], ['long-term debt', '$ 192.3', '$ 20.6', '$ 37.4', '$ 109.3', '-1 ( 1 )'], ['commercial paper', '$ 2014', '$ 2014', '$ 28.6', '$ 0.5', '']]","<table>
  <thead>
    <tr>
      <th>in billions of dollars</th>
      <th>citigroup parent company</th>
      <th>cgmhi ( 2 )</th>
      <th>citigroup funding inc. ( 2 )</th>
      <th>other citigroup subsidiaries</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr><td>long-term debt</td><td>$ 192.3</td><td>$ 20.6</td><td>$ 37.4</td><td>$ 109.3</td><td>-1 ( 1 )</td></tr>
    <tr><td>commercial paper</td><td>$ 2014</td><td>$ 2014</td><td>$ 28.6</td><td>$ 0.5</td><td></td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(67.4, 109.3)""",0
Single_AMAT/2017/page_33.pdf-2,what is the roi in s&p500 if the investment was made in 2012 and sold in 2015?,56.9%,56.9,"subtract(156.89, const_100), divide(#0, const_100)","[['', '10/28/2012', '10/27/2013', '10/26/2014', '10/25/2015', '10/30/2016', '10/29/2017'], ['applied materials', '100.00', '171.03', '207.01', '165.34', '293.64', '586.91'], ['s&p 500 index', '100.00', '127.18', '149.14', '156.89', '163.97', '202.72'], ['rdg semiconductor composite index', '100.00', '131.94', '167.25', '160.80', '193.36', '288.96']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>10/28/2012</th>
      <th>10/27/2013</th>
      <th>10/26/2014</th>
      <th>10/25/2015</th>
      <th>10/30/2016</th>
      <th>10/29/2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>applied materials</td><td>100.00</td><td>171.03</td><td>207.01</td><td>165.34</td><td>293.64</td><td>586.91</td></tr>
    <tr><td>s&p 500 index</td><td>100.00</td><td>127.18</td><td>149.14</td><td>156.89</td><td>163.97</td><td>202.72</td></tr>
    <tr><td>rdg semiconductor composite index</td><td>100.00</td><td>131.94</td><td>167.25</td><td>160.80</td><td>193.36</td><td>288.96</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(156.89, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_GPN/2015/page_82.pdf-3,what is the growth rate in the share-based compensation expense from 2014 to 2015?,-29.2%,-29.2,"subtract(21.1, 29.8), divide(#0, 29.8)","[['', '2015', '2014 ( in millions )', '2013'], ['share-based compensation expense', '$ 21.1', '$ 29.8', '$ 18.4'], ['income tax benefit', '$ -6.9 ( 6.9 )', '$ -7.1 ( 7.1 )', '$ -5.6 ( 5.6 )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2015</th>
      <th>2014 ( in millions )</th>
      <th>2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>share-based compensation expense</td><td>$ 21.1</td><td>$ 29.8</td><td>$ 18.4</td></tr>
    <tr><td>income tax benefit</td><td>$ -6.9 ( 6.9 )</td><td>$ -7.1 ( 7.1 )</td><td>$ -5.6 ( 5.6 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(21.1, 29.8), divide(#0, 29.8), multiply(#1, const_100)""",0
Single_MRO/2014/page_55.pdf-2,by how much did total capital expenditures increase from 2013 to 2014?,23.5%,23.5,"subtract(5495, 4449), divide(#0, 4449)","[['( in millions )', 'year ended december 31 , 2014', 'year ended december 31 , 2013', 'year ended december 31 , 2012'], ['north america e&p', '$ 4698', '$ 3649', '$ 3988'], ['international e&p', '534', '456', '235'], ['oil sands mining', '212', '286', '188'], ['corporate', '51', '58', '115'], ['total capital expenditures', '5495', '4449', '4526'], ['change in capital expenditure accrual', '-335 ( 335 )', '-6 ( 6 )', '-165 ( 165 )'], ['additions to property plant and equipment', '$ 5160', '$ 4443', '$ 4361']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>year ended december 31 , 2014</th>
      <th>year ended december 31 , 2013</th>
      <th>year ended december 31 , 2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>north america e&p</td><td>$ 4698</td><td>$ 3649</td><td>$ 3988</td></tr>
    <tr><td>international e&p</td><td>534</td><td>456</td><td>235</td></tr>
    <tr><td>oil sands mining</td><td>212</td><td>286</td><td>188</td></tr>
    <tr><td>corporate</td><td>51</td><td>58</td><td>115</td></tr>
    <tr><td>total capital expenditures</td><td>5495</td><td>4449</td><td>4526</td></tr>
    <tr><td>change in capital expenditure accrual</td><td>-335 ( 335 )</td><td>-6 ( 6 )</td><td>-165 ( 165 )</td></tr>
    <tr><td>additions to property plant and equipment</td><td>$ 5160</td><td>$ 4443</td><td>$ 4361</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(5495, 4449)""",0
Single_UNP/2014/page_80.pdf-2,what percentage of total minimum lease payments are operating leases?,66%,66.0,"add(3725, 1927), divide(3725, #0)","[['millions', 'operatingleases', 'capitalleases'], ['2015', '$ 508', '$ 253'], ['2016', '484', '249'], ['2017', '429', '246'], ['2018', '356', '224'], ['2019', '323', '210'], ['later years', '1625', '745'], ['total minimum leasepayments', '$ 3725', '$ 1927'], ['amount representing interest', 'n/a', '-407 ( 407 )'], ['present value of minimum leasepayments', 'n/a', '$ 1520']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>operatingleases</th>
      <th>capitalleases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2015</td><td>$ 508</td><td>$ 253</td></tr>
    <tr><td>2016</td><td>484</td><td>249</td></tr>
    <tr><td>2017</td><td>429</td><td>246</td></tr>
    <tr><td>2018</td><td>356</td><td>224</td></tr>
    <tr><td>2019</td><td>323</td><td>210</td></tr>
    <tr><td>later years</td><td>1625</td><td>745</td></tr>
    <tr><td>total minimum leasepayments</td><td>$ 3725</td><td>$ 1927</td></tr>
    <tr><td>amount representing interest</td><td>n/a</td><td>-407 ( 407 )</td></tr>
    <tr><td>present value of minimum leasepayments</td><td>n/a</td><td>$ 1520</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(3725, 3725), multiply(#0, const_100)""",0
Single_EOG/2017/page_93.pdf-1,"considering the years 2016 and 2017 , what is the increase observed in accretion?",7.435%,7.435,"divide(34708, 32306), subtract(#0, const_1)","[['', '2017', '2016'], ['carrying amount at beginning of period', '$ 912926', '$ 811554'], ['liabilities incurred ( 1 )', '54764', '212739'], ['liabilities settled ( 2 )', '-61871 ( 61871 )', '-94800 ( 94800 )'], ['accretion', '34708', '32306'], ['revisions', '-9818 ( 9818 )', '-38286 ( 38286 )'], ['foreign currency translations', '16139', '-10587 ( 10587 )'], ['carrying amount at end of period', '$ 946848', '$ 912926'], ['current portion', '$ 19259', '$ 18516'], ['noncurrent portion', '$ 927589', '$ 894410']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>carrying amount at beginning of period</td><td>$ 912926</td><td>$ 811554</td></tr>
    <tr><td>liabilities incurred ( 1 )</td><td>54764</td><td>212739</td></tr>
    <tr><td>liabilities settled ( 2 )</td><td>-61871 ( 61871 )</td><td>-94800 ( 94800 )</td></tr>
    <tr><td>accretion</td><td>34708</td><td>32306</td></tr>
    <tr><td>revisions</td><td>-9818 ( 9818 )</td><td>-38286 ( 38286 )</td></tr>
    <tr><td>foreign currency translations</td><td>16139</td><td>-10587 ( 10587 )</td></tr>
    <tr><td>carrying amount at end of period</td><td>$ 946848</td><td>$ 912926</td></tr>
    <tr><td>current portion</td><td>$ 19259</td><td>$ 18516</td></tr>
    <tr><td>noncurrent portion</td><td>$ 927589</td><td>$ 894410</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(34708, 32306)""",0
Single_APD/2018/page_41.pdf-1,what was the increase in the interest expenses during 2017 and 2018?,8.21%,8.21,"divide(130.5, 120.6), subtract(#0, const_1)","[['', '2018', '2017', '2016'], ['interest incurred', '$ 150.0', '$ 139.6', '$ 147.9'], ['less : capitalized interest', '19.5', '19.0', '32.7'], ['interest expense', '$ 130.5', '$ 120.6', '$ 115.2']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>interest incurred</td><td>$ 150.0</td><td>$ 139.6</td><td>$ 147.9</td></tr>
    <tr><td>less : capitalized interest</td><td>19.5</td><td>19.0</td><td>32.7</td></tr>
    <tr><td>interest expense</td><td>$ 130.5</td><td>$ 120.6</td><td>$ 115.2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
subtract(130.5, 120.6)
```",0
Single_MAA/2018/page_88.pdf-3,what was the percent of the change in the in the dividend yield from 2017 to 2018,8.7%,8.7,"subtract(3.884, 3.573), divide(#0, 3.573)","[['', '2018', '2017', '2016'], ['risk free rate', '1.61% ( 1.61 % ) - 2.14% ( 2.14 % )', '0.65% ( 0.65 % ) - 1.57% ( 1.57 % )', '0.49% ( 0.49 % ) - 1.27% ( 1.27 % )'], ['dividend yield', '3.884% ( 3.884 % )', '3.573% ( 3.573 % )', '3.634% ( 3.634 % )'], ['volatility', '15.05% ( 15.05 % ) - 17.18% ( 17.18 % )', '20.43% ( 20.43 % ) - 21.85% ( 21.85 % )', '18.41% ( 18.41 % ) - 19.45% ( 19.45 % )'], ['requisite service period', '3 years', '3 years', '3 years']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>risk free rate</td><td>1.61% ( 1.61 % ) - 2.14% ( 2.14 % )</td><td>0.65% ( 0.65 % ) - 1.57% ( 1.57 % )</td><td>0.49% ( 0.49 % ) - 1.27% ( 1.27 % )</td></tr>
    <tr><td>dividend yield</td><td>3.884% ( 3.884 % )</td><td>3.573% ( 3.573 % )</td><td>3.634% ( 3.634 % )</td></tr>
    <tr><td>volatility</td><td>15.05% ( 15.05 % ) - 17.18% ( 17.18 % )</td><td>20.43% ( 20.43 % ) - 21.85% ( 21.85 % )</td><td>18.41% ( 18.41 % ) - 19.45% ( 19.45 % )</td></tr>
    <tr><td>requisite service period</td><td>3 years</td><td>3 years</td><td>3 years</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(3.884, 3.573), divide(#0, 3.573), multiply(#1, const_100)""",1
Single_ETR/2008/page_313.pdf-4,what is the percent change in net revenue between 2007 and 2008?,-34.3%,-34.3,"subtract(959.2, 991.1), divide(#0, 991.1)","[['', 'amount ( in millions )'], ['2007 net revenue', '$ 991.1'], ['retail electric price', '-17.1 ( 17.1 )'], ['purchased power capacity', '-12.0 ( 12.0 )'], ['net wholesale revenue', '-7.4 ( 7.4 )'], ['other', '4.6'], ['2008 net revenue', '$ 959.2']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2007 net revenue</td><td>$ 991.1</td></tr>
    <tr><td>retail electric price</td><td>-17.1 ( 17.1 )</td></tr>
    <tr><td>purchased power capacity</td><td>-12.0 ( 12.0 )</td></tr>
    <tr><td>net wholesale revenue</td><td>-7.4 ( 7.4 )</td></tr>
    <tr><td>other</td><td>4.6</td></tr>
    <tr><td>2008 net revenue</td><td>$ 959.2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(959.2, 991.1), divide(#0, 991.1), multiply(#1, const_100)""",0
Single_UPS/2014/page_35.pdf-2,what is the roi of an investment in s&p500 from 2010 to 2012?,18.4%,18.4,"subtract(136.26, 115.06), divide(#0, 115.06)","[['', '12/31/2009', '12/31/2010', '12/31/2011', '12/31/2012', '12/31/2013', '12/31/2014'], ['united parcel service inc .', '$ 100.00', '$ 130.29', '$ 135.35', '$ 140.54', '$ 205.95', '$ 223.79'], ['standard & poor 2019s 500 index', '$ 100.00', '$ 115.06', '$ 117.48', '$ 136.26', '$ 180.38', '$ 205.05'], ['dow jones transportation average', '$ 100.00', '$ 126.74', '$ 126.75', '$ 136.24', '$ 192.61', '$ 240.91']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>12/31/2009</th>
      <th>12/31/2010</th>
      <th>12/31/2011</th>
      <th>12/31/2012</th>
      <th>12/31/2013</th>
      <th>12/31/2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>united parcel service inc .</td><td>$ 100.00</td><td>$ 130.29</td><td>$ 135.35</td><td>$ 140.54</td><td>$ 205.95</td><td>$ 223.79</td></tr>
    <tr><td>standard & poor 2019s 500 index</td><td>$ 100.00</td><td>$ 115.06</td><td>$ 117.48</td><td>$ 136.26</td><td>$ 180.38</td><td>$ 205.05</td></tr>
    <tr><td>dow jones transportation average</td><td>$ 100.00</td><td>$ 126.74</td><td>$ 126.75</td><td>$ 136.24</td><td>$ 192.61</td><td>$ 240.91</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(136.26, 115.06), divide(#0, 115.06), multiply(#1, const_100)""",1
Single_JKHY/2009/page_28.pdf-3,what was the percentage change in the net cash from operating activities from 2008 to 2009,14.1%,14.1,"subtract(206588, 181001), divide(#0, 181001)","[['2008', 'year ended june 30 2009 2008', 'year ended june 30 2009 2008', 'year ended june 30 2009'], ['net income', '$ 103102', '$ 104222', '$ 104681'], ['non-cash expenses', '74397', '70420', '56348'], ['change in receivables', '21214', '-2913 ( 2913 )', '-28853 ( 28853 )'], ['change in deferred revenue', '21943', '5100', '24576'], ['change in other assets and liabilities', '-14068 ( 14068 )', '4172', '17495'], ['net cash from operating activities', '$ 206588', '$ 181001', '$ 174247']]","<table>
  <thead>
    <tr>
      <th>2008</th>
      <th>year ended june 30 2009 2008</th>
      <th>year ended june 30 2009 2008</th>
      <th>year ended june 30 2009</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net income</td><td>$ 103102</td><td>$ 104222</td><td>$ 104681</td></tr>
    <tr><td>non-cash expenses</td><td>74397</td><td>70420</td><td>56348</td></tr>
    <tr><td>change in receivables</td><td>21214</td><td>-2913 ( 2913 )</td><td>-28853 ( 28853 )</td></tr>
    <tr><td>change in deferred revenue</td><td>21943</td><td>5100</td><td>24576</td></tr>
    <tr><td>change in other assets and liabilities</td><td>-14068 ( 14068 )</td><td>4172</td><td>17495</td></tr>
    <tr><td>net cash from operating activities</td><td>$ 206588</td><td>$ 181001</td><td>$ 174247</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(206588, 181001), divide(#0, 181001), multiply(#1, const_100)""",1
Single_SNA/2007/page_47.pdf-1,what is the percentage change in total current assets from 2006 to 2007?,6.7%,6.7,"subtract(1187.4, 1113.2), divide(#0, 1113.2)","[['( amounts in millions ) ad', '2007', '2006'], ['cash and cash equivalents', '$ 93.0', '$ 63.4'], ['accounts receivable 2013 net of allowances', '586.9', '559.2'], ['inventories', '322.4', '323.0'], ['other current assets', '185.1', '167.6'], ['total current assets', '1187.4', '1113.2'], ['accounts payable', '-171.6 ( 171.6 )', '-178.8 ( 178.8 )'], ['notes payable and current maturities of long-term debt', '-15.9 ( 15.9 )', '-43.6 ( 43.6 )'], ['other current liabilities', '-451.7 ( 451.7 )', '-459.6 ( 459.6 )'], ['total current liabilities', '-639.2 ( 639.2 )', '-682.0 ( 682.0 )'], ['total working capital', '$ 548.2', '$ 431.2']]","<table>
  <thead>
    <tr>
      <th>( amounts in millions ) ad</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>cash and cash equivalents</td><td>$ 93.0</td><td>$ 63.4</td></tr>
    <tr><td>accounts receivable 2013 net of allowances</td><td>586.9</td><td>559.2</td></tr>
    <tr><td>inventories</td><td>322.4</td><td>323.0</td></tr>
    <tr><td>other current assets</td><td>185.1</td><td>167.6</td></tr>
    <tr><td>total current assets</td><td>1187.4</td><td>1113.2</td></tr>
    <tr><td>accounts payable</td><td>-171.6 ( 171.6 )</td><td>-178.8 ( 178.8 )</td></tr>
    <tr><td>notes payable and current maturities of long-term debt</td><td>-15.9 ( 15.9 )</td><td>-43.6 ( 43.6 )</td></tr>
    <tr><td>other current liabilities</td><td>-451.7 ( 451.7 )</td><td>-459.6 ( 459.6 )</td></tr>
    <tr><td>total current liabilities</td><td>-639.2 ( 639.2 )</td><td>-682.0 ( 682.0 )</td></tr>
    <tr><td>total working capital</td><td>$ 548.2</td><td>$ 431.2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1187.4, 1113.2), divide(#0, 1113.2), multiply(#1, const_100)""",1
Single_FIS/2006/page_88.pdf-4,what is the percentage change in estimated fair value of the cash flow hedges from 2005 to 2006?,-5.8%,-5.8,"subtract(4.9, 5.2), divide(#0, 5.2)","[['', 'december 31 2006', 'january 18 2007 refinancing'], ['2007', '$ 61661', '$ 96161'], ['2008', '257541', '282041'], ['2009', '68129', '145129'], ['2010', '33586', '215586'], ['2011', '941875', '165455'], ['thereafter', '1646709', '2105129'], ['total', '$ 3009501', '$ 3009501']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>december 31 2006</th>
      <th>january 18 2007 refinancing</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2007</td><td>$ 61661</td><td>$ 96161</td></tr>
    <tr><td>2008</td><td>257541</td><td>282041</td></tr>
    <tr><td>2009</td><td>68129</td><td>145129</td></tr>
    <tr><td>2010</td><td>33586</td><td>215586</td></tr>
    <tr><td>2011</td><td>941875</td><td>165455</td></tr>
    <tr><td>thereafter</td><td>1646709</td><td>2105129</td></tr>
    <tr><td>total</td><td>$ 3009501</td><td>$ 3009501</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(4.9, 5.2), divide(#0, 5.2), multiply(#1, const_100)""",1
Single_GPN/2014/page_71.pdf-3,what percent of assets for the acquisition of paypros was deductible for taxes?,40.5%,40.5,"add(10700, 31000), add(147500, #0), divide(#1, 466687)","[['goodwill', '$ 271577'], ['customer-related intangible assets', '147500'], ['contract-based intangible assets', '31000'], ['acquired technology', '10700'], ['fixed assets', '1680'], ['other assets', '4230'], ['total assets acquired', '466687'], ['deferred income taxes', '-38949 ( 38949 )'], ['net assets acquired', '$ 427738']]","<table>
  <thead>
    <tr>
      <th>goodwill</th>
      <th>$ 271577</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>customer-related intangible assets</td><td>147500</td></tr>
    <tr><td>contract-based intangible assets</td><td>31000</td></tr>
    <tr><td>acquired technology</td><td>10700</td></tr>
    <tr><td>fixed assets</td><td>1680</td></tr>
    <tr><td>other assets</td><td>4230</td></tr>
    <tr><td>total assets acquired</td><td>466687</td></tr>
    <tr><td>deferred income taxes</td><td>-38949 ( 38949 )</td></tr>
    <tr><td>net assets acquired</td><td>$ 427738</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(466687, 271577), divide(#0, 466687), multiply(#1, const_100)""",0
Single_CDW/2013/page_36.pdf-2,what was the 2012 effective tax rate?,36%,36.0,"add(67.1, 119.0), divide(67.1, #0)","[['( in millions )', 'years ended december 31 , 2013', 'years ended december 31 , 2012', 'years ended december 31 , 2011', 'years ended december 31 , 2010', 'years ended december 31 , 2009'], ['net income ( loss )', '$ 132.8', '$ 119.0', '$ 17.1', '$ -29.2 ( 29.2 )', '$ -373.4 ( 373.4 )'], ['depreciation and amortization', '208.2', '210.2', '204.9', '209.4', '218.2'], ['income tax expense ( benefit )', '62.7', '67.1', '11.2', '-7.8 ( 7.8 )', '-87.8 ( 87.8 )'], ['interest expense net', '250.1', '307.4', '324.2', '391.9', '431.7'], ['ebitda', '653.8', '703.7', '557.4', '564.3', '188.7'], ['non-cash equity-based compensation', '8.6', '22.1', '19.5', '11.5', '15.9'], ['sponsor fees', '2.5', '5.0', '5.0', '5.0', '5.0'], ['consulting and debt-related professional fees', '0.1', '0.6', '5.1', '15.1', '14.1'], ['goodwill impairment', '2014', '2014', '2014', '2014', '241.8'], ['net loss ( gain ) on extinguishments of long-term debt', '64.0', '17.2', '118.9', '-2.0 ( 2.0 )', '2014'], ['litigation net ( i )', '-4.1 ( 4.1 )', '4.3', '2014', '2014', '2014'], ['ipo- and secondary-offering related expenses', '75.0', '2014', '2014', '2014', '2014'], ['other adjustments ( ii )', '8.6', '13.7', '11.4', '7.9', '-0.1 ( 0.1 )'], ['adjusted ebitda', '$ 808.5', '$ 766.6', '$ 717.3', '$ 601.8', '$ 465.4']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>years ended december 31 , 2013</th>
      <th>years ended december 31 , 2012</th>
      <th>years ended december 31 , 2011</th>
      <th>years ended december 31 , 2010</th>
      <th>years ended december 31 , 2009</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net income ( loss )</td><td>$ 132.8</td><td>$ 119.0</td><td>$ 17.1</td><td>$ -29.2 ( 29.2 )</td><td>$ -373.4 ( 373.4 )</td></tr>
    <tr><td>depreciation and amortization</td><td>208.2</td><td>210.2</td><td>204.9</td><td>209.4</td><td>218.2</td></tr>
    <tr><td>income tax expense ( benefit )</td><td>62.7</td><td>67.1</td><td>11.2</td><td>-7.8 ( 7.8 )</td><td>-87.8 ( 87.8 )</td></tr>
    <tr><td>interest expense net</td><td>250.1</td><td>307.4</td><td>324.2</td><td>391.9</td><td>431.7</td></tr>
    <tr><td>ebitda</td><td>653.8</td><td>703.7</td><td>557.4</td><td>564.3</td><td>188.7</td></tr>
    <tr><td>non-cash equity-based compensation</td><td>8.6</td><td>22.1</td><td>19.5</td><td>11.5</td><td>15.9</td></tr>
    <tr><td>sponsor fees</td><td>2.5</td><td>5.0</td><td>5.0</td><td>5.0</td><td>5.0</td></tr>
    <tr><td>consulting and debt-related professional fees</td><td>0.1</td><td>0.6</td><td>5.1</td><td>15.1</td><td>14.1</td></tr>
    <tr><td>goodwill impairment</td><td>2014</td><td>2014</td><td>2014</td><td>2014</td><td>241.8</td></tr>
    <tr><td>net loss ( gain ) on extinguishments of long-term debt</td><td>64.0</td><td>17.2</td><td>118.9</td><td>-2.0 ( 2.0 )</td><td>2014</td></tr>
    <tr><td>litigation net ( i )</td><td>-4.1 ( 4.1 )</td><td>4.3</td><td>2014</td><td>2014</td><td>2014</td></tr>
    <tr><td>ipo- and secondary-offering related expenses</td><td>75.0</td><td>2014</td><td>2014</td><td>2014</td><td>2014</td></tr>
    <tr><td>other adjustments ( ii )</td><td>8.6</td><td>13.7</td><td>11.4</td><td>7.9</td><td>-0.1 ( 0.1 )</td></tr>
    <tr><td>adjusted ebitda</td><td>$ 808.5</td><td>$ 766.6</td><td>$ 717.3</td><td>$ 601.8</td><td>$ 465.4</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(67.1, 119.0), multiply(#0, const_100)""",0
Single_C/2018/page_296.pdf-4,what was the credit commitments and lines of credit total from 2017 to 2018,3.4%,3.4,"subtract(1018894, 985174), divide(#0, 985174)","[['in millions of dollars', 'u.s .', 'outside ofu.s .', 'december 312018', 'december 31 2017'], ['commercial and similar letters of credit', '$ 823', '$ 4638', '$ 5461', '$ 5000'], ['one- to four-family residential mortgages', '1056', '1615', '2671', '2674'], ['revolving open-end loans secured by one- to four-family residential properties', '10019', '1355', '11374', '12323'], ['commercial real estate construction and land development', '9565', '1728', '11293', '11151'], ['credit card lines', '605857', '90150', '696007', '678300'], ['commercial and other consumer loan commitments', '185849', '102918', '288767', '272655'], ['other commitments and contingencies', '2560', '761', '3321', '3071'], ['total', '$ 815729', '$ 203165', '$ 1018894', '$ 985174']]","<table>
  <thead>
    <tr>
      <th>in millions of dollars</th>
      <th>u.s .</th>
      <th>outside ofu.s .</th>
      <th>december 312018</th>
      <th>december 31 2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>commercial and similar letters of credit</td><td>$ 823</td><td>$ 4638</td><td>$ 5461</td><td>$ 5000</td></tr>
    <tr><td>one- to four-family residential mortgages</td><td>1056</td><td>1615</td><td>2671</td><td>2674</td></tr>
    <tr><td>revolving open-end loans secured by one- to four-family residential properties</td><td>10019</td><td>1355</td><td>11374</td><td>12323</td></tr>
    <tr><td>commercial real estate construction and land development</td><td>9565</td><td>1728</td><td>11293</td><td>11151</td></tr>
    <tr><td>credit card lines</td><td>605857</td><td>90150</td><td>696007</td><td>678300</td></tr>
    <tr><td>commercial and other consumer loan commitments</td><td>185849</td><td>102918</td><td>288767</td><td>272655</td></tr>
    <tr><td>other commitments and contingencies</td><td>2560</td><td>761</td><td>3321</td><td>3071</td></tr>
    <tr><td>total</td><td>$ 815729</td><td>$ 203165</td><td>$ 1018894</td><td>$ 985174</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1018894, 985174), divide(#0, 985174), multiply(#1, const_100)""",1
Single_BDX/2009/page_80.pdf-3,"what is the total fair value of performance-based restricted stock units vested during 2009 , 2008 and 2007?",92280,92280.0,"add(33712, 49387), add(#0, 9181)","[['', 'stock units', 'weighted average grant date fair value'], ['balance at october 1', '1570329', '$ 69.35'], ['granted', '618679', '62.96'], ['distributed', '-316839 ( 316839 )', '60.32'], ['forfeited or canceled', '-165211 ( 165211 )', '62.58'], ['balance at september 30', '1706958', '$ 69.36'], ['expected to vest at september 30', '1536262', '$ 69.36']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>stock units</th>
      <th>weighted average grant date fair value</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at october 1</td><td>1570329</td><td>$ 69.35</td></tr>
    <tr><td>granted</td><td>618679</td><td>62.96</td></tr>
    <tr><td>distributed</td><td>-316839 ( 316839 )</td><td>60.32</td></tr>
    <tr><td>forfeited or canceled</td><td>-165211 ( 165211 )</td><td>62.58</td></tr>
    <tr><td>balance at september 30</td><td>1706958</td><td>$ 69.36</td></tr>
    <tr><td>expected to vest at september 30</td><td>1536262</td><td>$ 69.36</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(33712, 49387), add(#0, 9181)""",1
Single_EW/2013/page_33.pdf-1,what was the cumulative percentage return for five year period ended 2013?,139.34%,139.34,"subtract(239.34, const_100), divide(#0, const_100)","[['total cumulative return', '2009', '2010', '2011', '2012', '2013'], ['edwards lifesciences', '$ 158.05', '$ 294.23', '$ 257.32', '$ 328.19', '$ 239.34'], ['s&p 500', '126.46', '145.51', '148.59', '172.37', '228.19'], ['s&p 500 healthcare equipment index', '120.83', '117.02', '123.37', '145.84', '186.00']]","<table>
  <thead>
    <tr>
      <th>total cumulative return</th>
      <th>2009</th>
      <th>2010</th>
      <th>2011</th>
      <th>2012</th>
      <th>2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>edwards lifesciences</td><td>$ 158.05</td><td>$ 294.23</td><td>$ 257.32</td><td>$ 328.19</td><td>$ 239.34</td></tr>
    <tr><td>s&p 500</td><td>126.46</td><td>145.51</td><td>148.59</td><td>172.37</td><td>228.19</td></tr>
    <tr><td>s&p 500 healthcare equipment index</td><td>120.83</td><td>117.02</td><td>123.37</td><td>145.84</td><td>186.00</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(239.34, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_MSI/2007/page_68.pdf-2,what was the percentage change in the operating earnings from 2005 to 2007,-42.5%,-42.5,"subtract(709, 1232), divide(#0, 1232)","[['( dollars in millions )', 'years ended december 31 2007', 'years ended december 31 2006', 'years ended december 31 2005', 'years ended december 31 2007 20142006', '2006 20142005'], ['segment net sales', '$ 10014', '$ 9164', '$ 9037', '9% ( 9 % )', '1% ( 1 % )'], ['operating earnings', '709', '787', '1232', '( 10 ) % (  % )', '( 36 ) % (  % )']]","<table>
  <thead>
    <tr>
      <th>( dollars in millions )</th>
      <th>years ended december 31 2007</th>
      <th>years ended december 31 2006</th>
      <th>years ended december 31 2005</th>
      <th>years ended december 31 2007 20142006</th>
      <th>2006 20142005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>segment net sales</td><td>$ 10014</td><td>$ 9164</td><td>$ 9037</td><td>9% ( 9 % )</td><td>1% ( 1 % )</td></tr>
    <tr><td>operating earnings</td><td>709</td><td>787</td><td>1232</td><td>( 10 ) % (  % )</td><td>( 36 ) % (  % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(709, 1232), divide(#0, 1232), multiply(#1, const_100)""",0
Single_IP/2015/page_44.pdf-2,what percentage of printing paper sales where north american printing papers net sales 2014?,37%,37.0,"multiply(2.1, const_1000), divide(#0, 5720)","[['in millions', '2015', '2014', '2013'], ['sales', '$ 5031', '$ 5720', '$ 6205'], ['operating profit ( loss )', '533', '-16 ( 16 )', '271']]","<table>
  <thead>
    <tr>
      <th>in millions</th>
      <th>2015</th>
      <th>2014</th>
      <th>2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>sales</td><td>$ 5031</td><td>$ 5720</td><td>$ 6205</td></tr>
    <tr><td>operating profit ( loss )</td><td>533</td><td>-16 ( 16 )</td><td>271</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(2100, 5720), multiply(#0, const_100)""",0
Single_RSG/2010/page_132.pdf-1,what was the percent of the decline in the gross unrecognized tax benefits from 2009 to 2010,-8%,-8.0,"subtract(222.8, 242.2), divide(#0, 242.2)","[['', '2010', '2009', '2008'], ['balance at beginning of year', '$ 242.2', '$ 611.9', '$ 23.2'], ['additions due to the allied acquisition', '-', '13.3', '582.9'], ['additions based on tax positions related to current year', '2.8', '3.9', '10.6'], ['reductions for tax positions related to the current year', '-', '-', '-5.1 ( 5.1 )'], ['additions for tax positions of prior years', '7.5', '5.6', '2.0'], ['reductions for tax positions of prior years', '-7.4 ( 7.4 )', '-24.1 ( 24.1 )', '-1.3 ( 1.3 )'], ['reductions for tax positions resulting from lapse of statute of limitations', '-10.4 ( 10.4 )', '-0.5 ( 0.5 )', '-0.4 ( 0.4 )'], ['settlements', '-11.9 ( 11.9 )', '-367.9 ( 367.9 )', '-'], ['balance at end of year', '$ 222.8', '$ 242.2', '$ 611.9']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2010</th>
      <th>2009</th>
      <th>2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at beginning of year</td><td>$ 242.2</td><td>$ 611.9</td><td>$ 23.2</td></tr>
    <tr><td>additions due to the allied acquisition</td><td>-</td><td>13.3</td><td>582.9</td></tr>
    <tr><td>additions based on tax positions related to current year</td><td>2.8</td><td>3.9</td><td>10.6</td></tr>
    <tr><td>reductions for tax positions related to the current year</td><td>-</td><td>-</td><td>-5.1 ( 5.1 )</td></tr>
    <tr><td>additions for tax positions of prior years</td><td>7.5</td><td>5.6</td><td>2.0</td></tr>
    <tr><td>reductions for tax positions of prior years</td><td>-7.4 ( 7.4 )</td><td>-24.1 ( 24.1 )</td><td>-1.3 ( 1.3 )</td></tr>
    <tr><td>reductions for tax positions resulting from lapse of statute of limitations</td><td>-10.4 ( 10.4 )</td><td>-0.5 ( 0.5 )</td><td>-0.4 ( 0.4 )</td></tr>
    <tr><td>settlements</td><td>-11.9 ( 11.9 )</td><td>-367.9 ( 367.9 )</td><td>-</td></tr>
    <tr><td>balance at end of year</td><td>$ 222.8</td><td>$ 242.2</td><td>$ 611.9</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(242.2, 222.8), divide(#0, 242.2), multiply(#1, const_100)""",0
Single_RE/2012/page_31.pdf-1,what is the percentage change in gross reserves from 2011 to 2012?,-11.4%,-11.4,"subtract(442.8, 499.9), divide(#0, 499.9)","[['( dollars in millions )', 'years ended december 31 , 2012', 'years ended december 31 , 2011', 'years ended december 31 , 2010'], ['case reserves reported by ceding companies', '$ 138.4', '$ 145.6', '$ 135.4'], ['additional case reserves established by the company ( assumed reinsurance ) ( 1 )', '90.6', '102.9', '116.1'], ['case reserves established by the company ( direct insurance )', '36.7', '40.6', '38.9'], ['incurred but not reported reserves', '177.1', '210.9', '264.4'], ['gross reserves', '442.8', '499.9', '554.8'], ['reinsurance receivable', '-17.1 ( 17.1 )', '-19.8 ( 19.8 )', '-21.9 ( 21.9 )'], ['net reserves', '$ 425.7', '$ 480.2', '$ 532.9']]","<table>
  <thead>
    <tr>
      <th>( dollars in millions )</th>
      <th>years ended december 31 , 2012</th>
      <th>years ended december 31 , 2011</th>
      <th>years ended december 31 , 2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>case reserves reported by ceding companies</td><td>$ 138.4</td><td>$ 145.6</td><td>$ 135.4</td></tr>
    <tr><td>additional case reserves established by the company ( assumed reinsurance ) ( 1 )</td><td>90.6</td><td>102.9</td><td>116.1</td></tr>
    <tr><td>case reserves established by the company ( direct insurance )</td><td>36.7</td><td>40.6</td><td>38.9</td></tr>
    <tr><td>incurred but not reported reserves</td><td>177.1</td><td>210.9</td><td>264.4</td></tr>
    <tr><td>gross reserves</td><td>442.8</td><td>499.9</td><td>554.8</td></tr>
    <tr><td>reinsurance receivable</td><td>-17.1 ( 17.1 )</td><td>-19.8 ( 19.8 )</td><td>-21.9 ( 21.9 )</td></tr>
    <tr><td>net reserves</td><td>$ 425.7</td><td>$ 480.2</td><td>$ 532.9</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(442.8, 499.9), divide(#0, 499.9), multiply(#1, const_100)""",1
Single_DVN/2011/page_26.pdf-1,what was the average change in the share price from october to november,13.4%,13.4,"subtract(66.38, 58.52), divide(#0, 58.52)","[['period', 'total number of shares purchased ( 2 )', 'average price paid per share', 'total number of shares purchased as part ofpublicly announced plans or programs ( 1 )', 'maximum dollar value of shares that may yetbe purchased under the plans or programs ( 1 ) ( in millions )'], ['october 1 2013 october 31', '3228557', '$ 58.52', '3227800', '$ 108'], ['november 1 2013 november 30', '1813994', '$ 66.38', '1618110', '$ 2014'], ['december 1 2013 december 31', '475685', '$ 64.68', '2014', '$ 2014'], ['total', '5518236', '$ 61.64', '4845910', '']]","<table>
  <thead>
    <tr>
      <th>period</th>
      <th>total number of shares purchased ( 2 )</th>
      <th>average price paid per share</th>
      <th>total number of shares purchased as part ofpublicly announced plans or programs ( 1 )</th>
      <th>maximum dollar value of shares that may yetbe purchased under the plans or programs ( 1 ) ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>october 1 2013 october 31</td><td>3228557</td><td>$ 58.52</td><td>3227800</td><td>$ 108</td></tr>
    <tr><td>november 1 2013 november 30</td><td>1813994</td><td>$ 66.38</td><td>1618110</td><td>$ 2014</td></tr>
    <tr><td>december 1 2013 december 31</td><td>475685</td><td>$ 64.68</td><td>2014</td><td>$ 2014</td></tr>
    <tr><td>total</td><td>5518236</td><td>$ 61.64</td><td>4845910</td><td></td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(66.38, 58.52)""",0
Single_MRO/2006/page_128.pdf-2,"if the 2007 year shows the same rate of change as 2006 , what would the projected ending cash flow balance be , in millions?",6844,6844.0,"divide(8518, 10601), multiply(#0, 8518)","[['( in millions )', '2006', '2005', '2004'], ['sales and transfers of oil and gas produced net of production transportation and administrative costs', '$ -5312 ( 5312 )', '$ -3754 ( 3754 )', '$ -2689 ( 2689 )'], ['net changes in prices and production transportation and administrative costs related to future production', '-1342 ( 1342 )', '6648', '771'], ['extensions discoveries and improved recovery less related costs', '1290', '700', '1349'], ['development costs incurred during the period', '1251', '1030', '609'], ['changes in estimated future development costs', '-527 ( 527 )', '-552 ( 552 )', '-628 ( 628 )'], ['revisions of previous quantity estimates', '1319', '820', '948'], ['net changes in purchases and sales of minerals in place', '30', '4557', '33'], ['accretion of discount', '1882', '1124', '757'], ['net change in income taxes', '-660 ( 660 )', '-6694 ( 6694 )', '-627 ( 627 )'], ['timing and other', '-14 ( 14 )', '307', '97'], ['net change for the year', '-2083 ( 2083 )', '4186', '620'], ['beginning of year', '10601', '6415', '5795'], ['end of year', '$ 8518', '$ 10601', '$ 6415'], ['net change for the year from discontinued operations', '$ -216 ( 216 )', '$ 162', '$ -152 ( 152 )']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2006</th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>sales and transfers of oil and gas produced net of production transportation and administrative costs</td><td>$ -5312 ( 5312 )</td><td>$ -3754 ( 3754 )</td><td>$ -2689 ( 2689 )</td></tr>
    <tr><td>net changes in prices and production transportation and administrative costs related to future production</td><td>-1342 ( 1342 )</td><td>6648</td><td>771</td></tr>
    <tr><td>extensions discoveries and improved recovery less related costs</td><td>1290</td><td>700</td><td>1349</td></tr>
    <tr><td>development costs incurred during the period</td><td>1251</td><td>1030</td><td>609</td></tr>
    <tr><td>changes in estimated future development costs</td><td>-527 ( 527 )</td><td>-552 ( 552 )</td><td>-628 ( 628 )</td></tr>
    <tr><td>revisions of previous quantity estimates</td><td>1319</td><td>820</td><td>948</td></tr>
    <tr><td>net changes in purchases and sales of minerals in place</td><td>30</td><td>4557</td><td>33</td></tr>
    <tr><td>accretion of discount</td><td>1882</td><td>1124</td><td>757</td></tr>
    <tr><td>net change in income taxes</td><td>-660 ( 660 )</td><td>-6694 ( 6694 )</td><td>-627 ( 627 )</td></tr>
    <tr><td>timing and other</td><td>-14 ( 14 )</td><td>307</td><td>97</td></tr>
    <tr><td>net change for the year</td><td>-2083 ( 2083 )</td><td>4186</td><td>620</td></tr>
    <tr><td>beginning of year</td><td>10601</td><td>6415</td><td>5795</td></tr>
    <tr><td>end of year</td><td>$ 8518</td><td>$ 10601</td><td>$ 6415</td></tr>
    <tr><td>net change for the year from discontinued operations</td><td>$ -216 ( 216 )</td><td>$ 162</td><td>$ -152 ( 152 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(8518, 10601), divide(#0, 10601), multiply(#1, 10601), add(8518, #2)""",0
Single_AES/2018/page_168.pdf-3,what was the percentage change of unrecognized tax benefits at year end between 2017 and 2018?,33%,33.0,"subtract(463, 348), divide(#0, 348)","[['', '2018', '2017', '2016'], ['balance at january 1', '$ 348', '$ 352', '$ 364'], ['additions for current year tax positions', '2', '2014', '2'], ['additions for tax positions of prior years', '146', '2', '1'], ['reductions for tax positions of prior years', '( 26 )', '( 5 )', '( 1 )'], ['settlements', '2014', '2014', '( 13 )'], ['lapse of statute of limitations', '( 7 )', '( 1 )', '( 1 )'], ['balance at december 31', '$ 463', '$ 348', '$ 352']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at january 1</td><td>$ 348</td><td>$ 352</td><td>$ 364</td></tr>
    <tr><td>additions for current year tax positions</td><td>2</td><td>2014</td><td>2</td></tr>
    <tr><td>additions for tax positions of prior years</td><td>146</td><td>2</td><td>1</td></tr>
    <tr><td>reductions for tax positions of prior years</td><td>( 26 )</td><td>( 5 )</td><td>( 1 )</td></tr>
    <tr><td>settlements</td><td>2014</td><td>2014</td><td>( 13 )</td></tr>
    <tr><td>lapse of statute of limitations</td><td>( 7 )</td><td>( 1 )</td><td>( 1 )</td></tr>
    <tr><td>balance at december 31</td><td>$ 463</td><td>$ 348</td><td>$ 352</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(463, 348), divide(#0, 348), multiply(#1, const_100)""",0
Single_GS/2017/page_65.pdf-1,what is the growth rate in net revenues in 2017?,4.8%,4.8,"subtract(32073, 30608), divide(#0, 30608)","[['$ in millions', 'year ended december 2017', 'year ended december 2016', 'year ended december 2015'], ['investment banking', '$ 7371', '$ 6273', '$ 7027'], ['investment management', '5803', '5407', '5868'], ['commissions and fees', '3051', '3208', '3320'], ['market making', '7660', '9933', '9523'], ['other principal transactions', '5256', '3200', '5018'], ['totalnon-interestrevenues', '29141', '28021', '30756'], ['interest income', '13113', '9691', '8452'], ['interest expense', '10181', '7104', '5388'], ['net interest income', '2932', '2587', '3064'], ['total net revenues', '$ 32073', '$ 30608', '$ 33820']]","<table>
  <thead>
    <tr>
      <th>$ in millions</th>
      <th>year ended december 2017</th>
      <th>year ended december 2016</th>
      <th>year ended december 2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>investment banking</td><td>$ 7371</td><td>$ 6273</td><td>$ 7027</td></tr>
    <tr><td>investment management</td><td>5803</td><td>5407</td><td>5868</td></tr>
    <tr><td>commissions and fees</td><td>3051</td><td>3208</td><td>3320</td></tr>
    <tr><td>market making</td><td>7660</td><td>9933</td><td>9523</td></tr>
    <tr><td>other principal transactions</td><td>5256</td><td>3200</td><td>5018</td></tr>
    <tr><td>totalnon-interestrevenues</td><td>29141</td><td>28021</td><td>30756</td></tr>
    <tr><td>interest income</td><td>13113</td><td>9691</td><td>8452</td></tr>
    <tr><td>interest expense</td><td>10181</td><td>7104</td><td>5388</td></tr>
    <tr><td>net interest income</td><td>2932</td><td>2587</td><td>3064</td></tr>
    <tr><td>total net revenues</td><td>$ 32073</td><td>$ 30608</td><td>$ 33820</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(32073, 30608), divide(#0, 30608), multiply(#1, const_100)""",0
Single_FITB/2008/page_69.pdf-3,what is the percentage change in the balance of noncancelable lease obligations from 2007 to 2008?,734,734.0,"subtract(937, 734), divide(#0, 734)","[['( $ in millions )', '2008', '2007'], ['commitments to extend credit', '$ 49470', '49788'], ['letters of credit ( including standby letters of credit )', '8951', '8522'], ['forward contracts to sell mortgage loans', '3235', '1511'], ['noncancelable lease obligations', '937', '734'], ['purchase obligations', '81', '52'], ['capital expenditures', '68', '94']]","<table>
  <thead>
    <tr>
      <th>( $ in millions )</th>
      <th>2008</th>
      <th>2007</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>commitments to extend credit</td><td>$ 49470</td><td>49788</td></tr>
    <tr><td>letters of credit ( including standby letters of credit )</td><td>8951</td><td>8522</td></tr>
    <tr><td>forward contracts to sell mortgage loans</td><td>3235</td><td>1511</td></tr>
    <tr><td>noncancelable lease obligations</td><td>937</td><td>734</td></tr>
    <tr><td>purchase obligations</td><td>81</td><td>52</td></tr>
    <tr><td>capital expenditures</td><td>68</td><td>94</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(937, 734), divide(#0, 734), multiply(#1, const_100)""",0
Single_UNP/2006/page_36.pdf-4,what was the percentage change in cash provided by operating activities between 2004 and 2005?,15%,15.0,"subtract(2595, 2257), divide(#0, 2257)","[['cash flowsmillions of dollars', '2006', '2005', '2004'], ['cash provided by operating activities', '$ 2880', '$ 2595', '$ 2257'], ['cash used in investing activities', '-2042 ( 2042 )', '-2047 ( 2047 )', '-1732 ( 1732 )'], ['cash used in financing activities', '-784 ( 784 )', '-752 ( 752 )', '-75 ( 75 )'], ['net change in cash and cash equivalents', '$ 54', '$ -204 ( 204 )', '$ 450']]","<table>
  <thead>
    <tr>
      <th>cash flowsmillions of dollars</th>
      <th>2006</th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>cash provided by operating activities</td><td>$ 2880</td><td>$ 2595</td><td>$ 2257</td></tr>
    <tr><td>cash used in investing activities</td><td>-2042 ( 2042 )</td><td>-2047 ( 2047 )</td><td>-1732 ( 1732 )</td></tr>
    <tr><td>cash used in financing activities</td><td>-784 ( 784 )</td><td>-752 ( 752 )</td><td>-75 ( 75 )</td></tr>
    <tr><td>net change in cash and cash equivalents</td><td>$ 54</td><td>$ -204 ( 204 )</td><td>$ 450</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(2595, 2257), divide(#0, 2257), multiply(#1, const_100)""",0
Single_HII/2015/page_120.pdf-4,between 2015 and 2013 what was the average compensation expense related to the issuing of the stock award in millions,40.3,40.3,"add(43, 34), add(#0, 44), divide(#1, const_3)","[['( $ in millions except per share amounts )', 'year ended december 31 2015 1st qtr', 'year ended december 31 2015 2nd qtr ( 1 )', 'year ended december 31 2015 3rd qtr', 'year ended december 31 2015 4th qtr ( 2 )'], ['sales and service revenues', '$ 1570', '$ 1745', '$ 1800', '$ 1905'], ['operating income ( loss )', '156', '269', '200', '144'], ['earnings ( loss ) before income taxes', '133', '244', '175', '80'], ['net earnings ( loss )', '87', '156', '111', '50'], ['dividends declared per share', '$ 0.40', '$ 0.40', '$ 0.40', '$ 0.50'], ['basic earnings ( loss ) per share', '$ 1.80', '$ 3.22', '$ 2.31', '$ 1.07'], ['diluted earnings ( loss ) per share', '$ 1.79', '$ 3.20', '$ 2.29', '$ 1.06']]","<table>
  <thead>
    <tr>
      <th>( $ in millions except per share amounts )</th>
      <th>year ended december 31 2015 1st qtr</th>
      <th>year ended december 31 2015 2nd qtr ( 1 )</th>
      <th>year ended december 31 2015 3rd qtr</th>
      <th>year ended december 31 2015 4th qtr ( 2 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>sales and service revenues</td><td>$ 1570</td><td>$ 1745</td><td>$ 1800</td><td>$ 1905</td></tr>
    <tr><td>operating income ( loss )</td><td>156</td><td>269</td><td>200</td><td>144</td></tr>
    <tr><td>earnings ( loss ) before income taxes</td><td>133</td><td>244</td><td>175</td><td>80</td></tr>
    <tr><td>net earnings ( loss )</td><td>87</td><td>156</td><td>111</td><td>50</td></tr>
    <tr><td>dividends declared per share</td><td>$ 0.40</td><td>$ 0.40</td><td>$ 0.40</td><td>$ 0.50</td></tr>
    <tr><td>basic earnings ( loss ) per share</td><td>$ 1.80</td><td>$ 3.22</td><td>$ 2.31</td><td>$ 1.07</td></tr>
    <tr><td>diluted earnings ( loss ) per share</td><td>$ 1.79</td><td>$ 3.20</td><td>$ 2.29</td><td>$ 1.06</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(43, 44), divide(#0, 2)""",0
Single_LMT/2012/page_72.pdf-4,in 2010 what was the percent of the change in the post retirement benefit plan adjustments,5.02%,5.02,"subtract(8994, 8564), divide(#0, 8564)","[['', 'postretirement benefit plan adjustments', 'other net', 'accumulated other comprehensive loss'], ['balance at january 1 2010', '$ -8564 ( 8564 )', '$ -31 ( 31 )', '$ -8595 ( 8595 )'], ['other comprehensive ( loss ) income', '-430 ( 430 )', '15', '-415 ( 415 )'], ['balance at december 31 2010', '-8994 ( 8994 )', '-16 ( 16 )', '-9010 ( 9010 )'], ['other comprehensive loss', '-2192 ( 2192 )', '-55 ( 55 )', '-2247 ( 2247 )'], ['balance at december 31 2011', '-11186 ( 11186 )', '-71 ( 71 )', '-11257 ( 11257 )'], ['other comprehensive ( loss ) income', '-2346 ( 2346 )', '110', '-2236 ( 2236 )'], ['balance at december 31 2012', '$ -13532 ( 13532 )', '$ 39', '$ -13493 ( 13493 )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>postretirement benefit plan adjustments</th>
      <th>other net</th>
      <th>accumulated other comprehensive loss</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at january 1 2010</td><td>$ -8564 ( 8564 )</td><td>$ -31 ( 31 )</td><td>$ -8595 ( 8595 )</td></tr>
    <tr><td>other comprehensive ( loss ) income</td><td>-430 ( 430 )</td><td>15</td><td>-415 ( 415 )</td></tr>
    <tr><td>balance at december 31 2010</td><td>-8994 ( 8994 )</td><td>-16 ( 16 )</td><td>-9010 ( 9010 )</td></tr>
    <tr><td>other comprehensive loss</td><td>-2192 ( 2192 )</td><td>-55 ( 55 )</td><td>-2247 ( 2247 )</td></tr>
    <tr><td>balance at december 31 2011</td><td>-11186 ( 11186 )</td><td>-71 ( 71 )</td><td>-11257 ( 11257 )</td></tr>
    <tr><td>other comprehensive ( loss ) income</td><td>-2346 ( 2346 )</td><td>110</td><td>-2236 ( 2236 )</td></tr>
    <tr><td>balance at december 31 2012</td><td>$ -13532 ( 13532 )</td><td>$ 39</td><td>$ -13493 ( 13493 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(-8994, -8564), divide(#0, -8564), multiply(#1, const_100)""",0
Single_LMT/2012/page_43.pdf-1,what is the growth rate in operating profit for aeronautics in 2012?,4.2%,4.2,"subtract(1699, 1630), divide(#0, 1630)","[['', '2012', '2011', '2010'], ['net sales', '$ 14953', '$ 14362', '$ 13109'], ['operating profit', '1699', '1630', '1498'], ['operating margins', '11.4% ( 11.4 % )', '11.3% ( 11.3 % )', '11.4% ( 11.4 % )'], ['backlog at year-end', '30100', '30500', '27500']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net sales</td><td>$ 14953</td><td>$ 14362</td><td>$ 13109</td></tr>
    <tr><td>operating profit</td><td>1699</td><td>1630</td><td>1498</td></tr>
    <tr><td>operating margins</td><td>11.4% ( 11.4 % )</td><td>11.3% ( 11.3 % )</td><td>11.4% ( 11.4 % )</td></tr>
    <tr><td>backlog at year-end</td><td>30100</td><td>30500</td><td>27500</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1699, 1630), divide(#0, 1630), multiply(#1, const_100)""",0
Single_CDNS/2007/page_93.pdf-3,what is the percentage change in the gross amount of unrecognized tax benefit during 2007?,-9.0%,-9.0,"subtract(306870, 337226), divide(#0, 337226)","[['', '( in thousands )'], ['balance as of december 31 2006', '$ 337226'], ['gross amount of the decreases in unrecognized tax benefits of tax positions taken during a prior year', '-31608 ( 31608 )'], ['gross amount of the increases in unrecognized tax benefits as a result of tax positions taken during the current year', '7764'], ['amount of decreases in unrecognized tax benefits relating to settlements with taxing authorities', '-6001 ( 6001 )'], ['reductions to unrecognized tax benefits resulting from the lapse of the applicable statute of limitations', '-511 ( 511 )'], ['balance as of december 29 2007', '$ 306870']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>( in thousands )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance as of december 31 2006</td><td>$ 337226</td></tr>
    <tr><td>gross amount of the decreases in unrecognized tax benefits of tax positions taken during a prior year</td><td>-31608 ( 31608 )</td></tr>
    <tr><td>gross amount of the increases in unrecognized tax benefits as a result of tax positions taken during the current year</td><td>7764</td></tr>
    <tr><td>amount of decreases in unrecognized tax benefits relating to settlements with taxing authorities</td><td>-6001 ( 6001 )</td></tr>
    <tr><td>reductions to unrecognized tax benefits resulting from the lapse of the applicable statute of limitations</td><td>-511 ( 511 )</td></tr>
    <tr><td>balance as of december 29 2007</td><td>$ 306870</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(306870, 337226), divide(#0, 337226), multiply(#1, const_100)""",0
Single_AMT/2008/page_105.pdf-3,what was the percentage change in the weighted average risk-free interest rate from 2007 to 2008,-48.6%,-48.6,"subtract(2.58, 5.02), divide(#0, 5.02)","[['', '2008', '2007', '2006'], ['range of risk free interest rates', '1.99% ( 1.99 % ) 20143.28% ( 20143.28 % )', '4.98% ( 4.98 % ) 20145.05% ( 20145.05 % )', '5.01% ( 5.01 % ) 20145.17% ( 20145.17 % )'], ['weighted average risk-free interest rate', '2.58% ( 2.58 % )', '5.02% ( 5.02 % )', '5.08% ( 5.08 % )'], ['expected life of the shares', '6 months', '6 months', '6 months'], ['range of expected volatility of underlying stock price', '27.85% ( 27.85 % ) 201428.51% ( 201428.51 % )', '27.53% ( 27.53 % ) 201428.74% ( 201428.74 % )', '29.60% ( 29.60 % )'], ['weighted average expected volatility of underlying stock price', '28.51% ( 28.51 % )', '28.22% ( 28.22 % )', '29.60% ( 29.60 % )'], ['expected annual dividends', 'n/a', 'n/a', 'n/a']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>range of risk free interest rates</td><td>1.99% ( 1.99 % ) 20143.28% ( 20143.28 % )</td><td>4.98% ( 4.98 % ) 20145.05% ( 20145.05 % )</td><td>5.01% ( 5.01 % ) 20145.17% ( 20145.17 % )</td></tr>
    <tr><td>weighted average risk-free interest rate</td><td>2.58% ( 2.58 % )</td><td>5.02% ( 5.02 % )</td><td>5.08% ( 5.08 % )</td></tr>
    <tr><td>expected life of the shares</td><td>6 months</td><td>6 months</td><td>6 months</td></tr>
    <tr><td>range of expected volatility of underlying stock price</td><td>27.85% ( 27.85 % ) 201428.51% ( 201428.51 % )</td><td>27.53% ( 27.53 % ) 201428.74% ( 201428.74 % )</td><td>29.60% ( 29.60 % )</td></tr>
    <tr><td>weighted average expected volatility of underlying stock price</td><td>28.51% ( 28.51 % )</td><td>28.22% ( 28.22 % )</td><td>29.60% ( 29.60 % )</td></tr>
    <tr><td>expected annual dividends</td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(2.58, 5.02), divide(#0, 5.02), multiply(#1, const_100)""",0
Single_HWM/2016/page_118.pdf-1,what was the increase in the balance at end of the year from 2015 to 2016?,50.27%,50.27,"divide(1940, 1291), subtract(#0, const_1)","[['december 31,', '2016', '2015', '2014'], ['balance at beginning of year', '$ 1291', '$ 1151', '$ 1252'], ['increase to allowance', '772', '180', '102'], ['release of allowance', '-209 ( 209 )', '-42 ( 42 )', '-70 ( 70 )'], ['acquisitions and divestitures ( f )', '-1 ( 1 )', '29', '-36 ( 36 )'], ['tax apportionment tax rate and tax law changes', '106', '-15 ( 15 )', '-67 ( 67 )'], ['foreign currency translation', '-19 ( 19 )', '-12 ( 12 )', '-30 ( 30 )'], ['balance at end of year', '$ 1940', '$ 1291', '$ 1151']]","<table>
  <thead>
    <tr>
      <th>december 31,</th>
      <th>2016</th>
      <th>2015</th>
      <th>2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at beginning of year</td><td>$ 1291</td><td>$ 1151</td><td>$ 1252</td></tr>
    <tr><td>increase to allowance</td><td>772</td><td>180</td><td>102</td></tr>
    <tr><td>release of allowance</td><td>-209 ( 209 )</td><td>-42 ( 42 )</td><td>-70 ( 70 )</td></tr>
    <tr><td>acquisitions and divestitures ( f )</td><td>-1 ( 1 )</td><td>29</td><td>-36 ( 36 )</td></tr>
    <tr><td>tax apportionment tax rate and tax law changes</td><td>106</td><td>-15 ( 15 )</td><td>-67 ( 67 )</td></tr>
    <tr><td>foreign currency translation</td><td>-19 ( 19 )</td><td>-12 ( 12 )</td><td>-30 ( 30 )</td></tr>
    <tr><td>balance at end of year</td><td>$ 1940</td><td>$ 1291</td><td>$ 1151</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1940, 1291)""",0
Single_CAG/2007/page_73.pdf-1,for the 3 years ended 2007 income ( loss ) from discontinued operations net of tax totaled?,108.1,108.1,"add(80.8, 82.8), subtract(#0, 55.5)","[['', '2007', '2006', '2005'], ['net sales', '$ 727.6', '$ 2690.0', '$ 4131.7'], ['long-lived asset impairment charge', '-21.1 ( 21.1 )', '-240.9 ( 240.9 )', '-59.4 ( 59.4 )'], ['income from operations of discontinued operations before income taxes', '92.5', '179.7', '157.7'], ['net gain from disposal of businesses', '64.3', '115.5', '26.3'], ['income before income taxes', '135.7', '54.3', '124.6'], ['income tax expense', '-54.9 ( 54.9 )', '-109.8 ( 109.8 )', '-41.8 ( 41.8 )'], ['income ( loss ) from discontinued operations net of tax', '$ 80.8', '$ -55.5 ( 55.5 )', '$ 82.8']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2007</th>
      <th>2006</th>
      <th>2005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net sales</td><td>$ 727.6</td><td>$ 2690.0</td><td>$ 4131.7</td></tr>
    <tr><td>long-lived asset impairment charge</td><td>-21.1 ( 21.1 )</td><td>-240.9 ( 240.9 )</td><td>-59.4 ( 59.4 )</td></tr>
    <tr><td>income from operations of discontinued operations before income taxes</td><td>92.5</td><td>179.7</td><td>157.7</td></tr>
    <tr><td>net gain from disposal of businesses</td><td>64.3</td><td>115.5</td><td>26.3</td></tr>
    <tr><td>income before income taxes</td><td>135.7</td><td>54.3</td><td>124.6</td></tr>
    <tr><td>income tax expense</td><td>-54.9 ( 54.9 )</td><td>-109.8 ( 109.8 )</td><td>-41.8 ( 41.8 )</td></tr>
    <tr><td>income ( loss ) from discontinued operations net of tax</td><td>$ 80.8</td><td>$ -55.5 ( 55.5 )</td><td>$ 82.8</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(80.8, -55.5), add(#0, 82.8)""",0
Single_LMT/2014/page_31.pdf-2,what is the growth rate in the average price of the purchased shares from october to november 2014?,6.1%,6.1,"subtract(187.74, 176.96), divide(#0, 176.96)","[['period ( a )', 'total number of shares purchased', 'average price paid per share', 'total number of shares purchased as part of publicly announced plans or programs ( b )', 'amount available for future share repurchases under the plans or programs ( b ) ( in millions )'], ['september 29 2014 2013 october 26 2014', '399259', '$ 176.96', '397911', '$ 3825'], ['october 27 2014 2013 november 30 2014', '504300', '$ 187.74', '456904', '$ 3739'], ['december 1 2014 2013 december 31 2014', '365683', '$ 190.81', '357413', '$ 3671'], ['total', '1269242 ( c )', '$ 185.23', '1212228', '$ 3671']]","<table>
  <thead>
    <tr>
      <th>period ( a )</th>
      <th>total number of shares purchased</th>
      <th>average price paid per share</th>
      <th>total number of shares purchased as part of publicly announced plans or programs ( b )</th>
      <th>amount available for future share repurchases under the plans or programs ( b ) ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>september 29 2014 2013 october 26 2014</td><td>399259</td><td>$ 176.96</td><td>397911</td><td>$ 3825</td></tr>
    <tr><td>october 27 2014 2013 november 30 2014</td><td>504300</td><td>$ 187.74</td><td>456904</td><td>$ 3739</td></tr>
    <tr><td>december 1 2014 2013 december 31 2014</td><td>365683</td><td>$ 190.81</td><td>357413</td><td>$ 3671</td></tr>
    <tr><td>total</td><td>1269242 ( c )</td><td>$ 185.23</td><td>1212228</td><td>$ 3671</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(187.74, 176.96), divide(#0, 176.96), multiply(#1, const_100)""",1
Single_ETR/2017/page_414.pdf-3,what percent did net revenue decrease between 2016 and 2017?,2.7%,2.7,"subtract(644.2, 626.8), divide(#0, 644.2)","[['', 'amount ( in millions )'], ['2016 net revenue', '$ 644.2'], ['net wholesale revenue', '-35.1 ( 35.1 )'], ['purchased power capacity', '-5.9 ( 5.9 )'], ['transmission revenue', '-5.4 ( 5.4 )'], ['reserve equalization', '5.6'], ['retail electric price', '19.0'], ['other', '4.4'], ['2017 net revenue', '$ 626.8']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2016 net revenue</td><td>$ 644.2</td></tr>
    <tr><td>net wholesale revenue</td><td>-35.1 ( 35.1 )</td></tr>
    <tr><td>purchased power capacity</td><td>-5.9 ( 5.9 )</td></tr>
    <tr><td>transmission revenue</td><td>-5.4 ( 5.4 )</td></tr>
    <tr><td>reserve equalization</td><td>5.6</td></tr>
    <tr><td>retail electric price</td><td>19.0</td></tr>
    <tr><td>other</td><td>4.4</td></tr>
    <tr><td>2017 net revenue</td><td>$ 626.8</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(644.2, 626.8), divide(#0, 644.2), multiply(#1, const_100)""",1
Single_IP/2013/page_61.pdf-2,what percentage of industrial packaging sales where represented by north american industrial packaging net sales in 2012?,87%,87.0,"multiply(11.6, const_1000), divide(#0, 13280)","[['in millions', '2013', '2012', '2011'], ['sales', '$ 14810', '$ 13280', '$ 10430'], ['operating profit', '1801', '1066', '1147']]","<table>
  <thead>
    <tr>
      <th>in millions</th>
      <th>2013</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>sales</td><td>$ 14810</td><td>$ 13280</td><td>$ 10430</td></tr>
    <tr><td>operating profit</td><td>1801</td><td>1066</td><td>1147</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(11600, 13280), multiply(#0, const_100)""",0
Single_ECL/2017/page_96.pdf-1,what is the percentage change in the r&d expenses from 2016 to 2017?,6.3%,6.3,"subtract(201, 189), divide(#0, 189)","[['2018', '$ 131'], ['2019', '115'], ['2020', '96'], ['2021', '86'], ['2022', '74'], ['thereafter', '115'], ['total', '$ 617']]","<table>
  <thead>
    <tr>
      <th>2018</th>
      <th>$ 131</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2019</td><td>115</td></tr>
    <tr><td>2020</td><td>96</td></tr>
    <tr><td>2021</td><td>86</td></tr>
    <tr><td>2022</td><td>74</td></tr>
    <tr><td>thereafter</td><td>115</td></tr>
    <tr><td>total</td><td>$ 617</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(201, 189), divide(#0, 189), multiply(#1, const_100)""",0
Single_AWK/2018/page_150.pdf-1,by how much did the intrinsic value decrease from 2016 to 2018?,-50.0%,-50.0,"subtract(9, 18), divide(#0, 18)","[['', '2018', '2017', '2016'], ['intrinsic value', '$ 9', '$ 10', '$ 18'], ['exercise proceeds', '7', '11', '15'], ['income tax benefit realized', '2', '3', '6']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>intrinsic value</td><td>$ 9</td><td>$ 10</td><td>$ 18</td></tr>
    <tr><td>exercise proceeds</td><td>7</td><td>11</td><td>15</td></tr>
    <tr><td>income tax benefit realized</td><td>2</td><td>3</td><td>6</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(18, 9)""",0
Single_ANET/2015/page_155.pdf-2,what is the growth rate in the rent expense for operating leases in 2015?,103.0%,103.0,"subtract(6.7, 3.3), divide(#0, 3.3)","[['2016', '$ 6306'], ['2017', '6678'], ['2018', '6260'], ['2019', '5809'], ['2020', '5580'], ['thereafter', '21450'], ['total minimum future lease payments', '$ 52083']]","<table>
  <thead>
    <tr>
      <th>2016</th>
      <th>$ 6306</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2017</td><td>6678</td></tr>
    <tr><td>2018</td><td>6260</td></tr>
    <tr><td>2019</td><td>5809</td></tr>
    <tr><td>2020</td><td>5580</td></tr>
    <tr><td>thereafter</td><td>21450</td></tr>
    <tr><td>total minimum future lease payments</td><td>$ 52083</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(6.7, 3.3), divide(#0, 3.3), multiply(#1, const_100)""",1
Single_IP/2012/page_55.pdf-1,north american industrial packaging net sales where what percent of industrial packaging sales in 2012?,87%,87.0,"multiply(11.6, const_1000), divide(#0, 13280)","[['in millions', '2012', '2011', '2010'], ['sales', '$ 13280', '$ 10430', '$ 9840'], ['operating profit', '1066', '1147', '826']]","<table>
  <thead>
    <tr>
      <th>in millions</th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>sales</td><td>$ 13280</td><td>$ 10430</td><td>$ 9840</td></tr>
    <tr><td>operating profit</td><td>1066</td><td>1147</td><td>826</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(11600, 13280), multiply(#0, const_100)""",0
Single_CAT/2018/page_38.pdf-1,what would profit per share be in 2019 with the same growth rate as 2018?\\n\\n,84.17,84.17,"divide(10.26, 1.26), multiply(#0, 10.26)","[['( millions of dollars )', 'full year 2018 profit before taxes', 'full year 2018 profitper share', 'full year 2018 profit before taxes', 'profitper share'], ['profit', '$ 7822', '$ 10.26', '$ 4082', '$ 1.26'], ['restructuring costs', '386', '0.50', '1256', '1.68'], ['mark-to-market losses', '495', '0.64', '301', '0.26'], ['deferred tax valuation allowance adjustments', '2014', '-0.01 ( 0.01 )', '2014', '-0.18 ( 0.18 )'], ['u.s . tax reform impact', '2014', '-0.17 ( 0.17 )', '2014', '3.95'], ['gain on sale of equity investment', '2014', '2014', '-85 ( 85 )', '-0.09 ( 0.09 )'], ['adjusted profit', '$ 8703', '$ 11.22', '$ 5554', '$ 6.88']]","<table>
  <thead>
    <tr>
      <th>( millions of dollars )</th>
      <th>full year 2018 profit before taxes</th>
      <th>full year 2018 profitper share</th>
      <th>full year 2018 profit before taxes</th>
      <th>profitper share</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>profit</td><td>$ 7822</td><td>$ 10.26</td><td>$ 4082</td><td>$ 1.26</td></tr>
    <tr><td>restructuring costs</td><td>386</td><td>0.50</td><td>1256</td><td>1.68</td></tr>
    <tr><td>mark-to-market losses</td><td>495</td><td>0.64</td><td>301</td><td>0.26</td></tr>
    <tr><td>deferred tax valuation allowance adjustments</td><td>2014</td><td>-0.01 ( 0.01 )</td><td>2014</td><td>-0.18 ( 0.18 )</td></tr>
    <tr><td>u.s . tax reform impact</td><td>2014</td><td>-0.17 ( 0.17 )</td><td>2014</td><td>3.95</td></tr>
    <tr><td>gain on sale of equity investment</td><td>2014</td><td>2014</td><td>-85 ( 85 )</td><td>-0.09 ( 0.09 )</td></tr>
    <tr><td>adjusted profit</td><td>$ 8703</td><td>$ 11.22</td><td>$ 5554</td><td>$ 6.88</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(10.26, 1.26), multiply(#0, 10.26)""",1
Single_UNP/2006/page_62.pdf-3,"what percentage of total minimum lease payments are capital leases as of december 31 , 2006?",26%,26.0,"add(5457, 1916), divide(1916, #0)","[['millions of dollars', 'operatingleases', 'capital leases'], ['2007', '$ 624', '$ 180'], ['2008', '546', '173'], ['2009', '498', '168'], ['2010', '456', '148'], ['2011', '419', '157'], ['later years', '2914', '1090'], ['total minimum lease payments', '$ 5457', '$ 1916'], ['amount representing interest', 'n/a', '-680 ( 680 )'], ['present value of minimum lease payments', 'n/a', '$ 1236']]","<table>
  <thead>
    <tr>
      <th>millions of dollars</th>
      <th>operatingleases</th>
      <th>capital leases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2007</td><td>$ 624</td><td>$ 180</td></tr>
    <tr><td>2008</td><td>546</td><td>173</td></tr>
    <tr><td>2009</td><td>498</td><td>168</td></tr>
    <tr><td>2010</td><td>456</td><td>148</td></tr>
    <tr><td>2011</td><td>419</td><td>157</td></tr>
    <tr><td>later years</td><td>2914</td><td>1090</td></tr>
    <tr><td>total minimum lease payments</td><td>$ 5457</td><td>$ 1916</td></tr>
    <tr><td>amount representing interest</td><td>n/a</td><td>-680 ( 680 )</td></tr>
    <tr><td>present value of minimum lease payments</td><td>n/a</td><td>$ 1236</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(1916, 5457), multiply(#0, const_100)""",0
Single_ETR/2017/page_35.pdf-3,what is the percentage change in the net debt-to-net capital excluding securitization bonds from 2016 to 2017?,5.5%,5.5,"subtract(65.2, 61.8), divide(#0, 61.8)","[['', '2017', '2016'], ['debt to capital', '67.1% ( 67.1 % )', '64.8% ( 64.8 % )'], ['effect of excluding securitization bonds', '( 0.8% ( 0.8 % ) )', '( 1.0% ( 1.0 % ) )'], ['debt to capital excluding securitization bonds ( a )', '66.3% ( 66.3 % )', '63.8% ( 63.8 % )'], ['effect of subtracting cash', '( 1.1% ( 1.1 % ) )', '( 2.0% ( 2.0 % ) )'], ['net debt to net capital excluding securitization bonds ( a )', '65.2% ( 65.2 % )', '61.8% ( 61.8 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>debt to capital</td><td>67.1% ( 67.1 % )</td><td>64.8% ( 64.8 % )</td></tr>
    <tr><td>effect of excluding securitization bonds</td><td>( 0.8% ( 0.8 % ) )</td><td>( 1.0% ( 1.0 % ) )</td></tr>
    <tr><td>debt to capital excluding securitization bonds ( a )</td><td>66.3% ( 66.3 % )</td><td>63.8% ( 63.8 % )</td></tr>
    <tr><td>effect of subtracting cash</td><td>( 1.1% ( 1.1 % ) )</td><td>( 2.0% ( 2.0 % ) )</td></tr>
    <tr><td>net debt to net capital excluding securitization bonds ( a )</td><td>65.2% ( 65.2 % )</td><td>61.8% ( 61.8 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(65.2, 61.8), divide(#0, 61.8), multiply(#1, const_100)""",0
Single_STT/2013/page_175.pdf-1,what percent did indemnified securities financing increase from 2012 to 2013?,5.867%,5.867,"subtract(320078, 302341), divide(#0, 302341)","[['( in millions )', '2013', '2012'], ['indemnified securities financing', '$ 320078', '$ 302341'], ['stable value protection', '24906', '33512'], ['asset purchase agreements', '4685', '5063'], ['standby letters of credit', '4612', '4552']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>indemnified securities financing</td><td>$ 320078</td><td>$ 302341</td></tr>
    <tr><td>stable value protection</td><td>24906</td><td>33512</td></tr>
    <tr><td>asset purchase agreements</td><td>4685</td><td>5063</td></tr>
    <tr><td>standby letters of credit</td><td>4612</td><td>4552</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(320078, 302341), divide(#0, 302341), multiply(#1, const_100)""",1
Single_TFX/2018/page_47.pdf-2,what is the roi of an investment in teleflex incorporated from 2014 to 2015?,15.3%,15.3,"subtract(143, 124), divide(#0, 124)","[['company / index', '2013', '2014', '2015', '2016', '2017', '2018'], ['teleflex incorporated', '100', '124', '143', '177', '275', '288'], ['s&p 500 index', '100', '114', '115', '129', '157', '150'], ['s&p 500 healthcare equipment & supply index', '100', '126', '134', '142', '186', '213']]","<table>
  <thead>
    <tr>
      <th>company / index</th>
      <th>2013</th>
      <th>2014</th>
      <th>2015</th>
      <th>2016</th>
      <th>2017</th>
      <th>2018</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>teleflex incorporated</td><td>100</td><td>124</td><td>143</td><td>177</td><td>275</td><td>288</td></tr>
    <tr><td>s&p 500 index</td><td>100</td><td>114</td><td>115</td><td>129</td><td>157</td><td>150</td></tr>
    <tr><td>s&p 500 healthcare equipment & supply index</td><td>100</td><td>126</td><td>134</td><td>142</td><td>186</td><td>213</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(143, 124), divide(#0, 124), multiply(#1, const_100)""",0
Single_ETR/2017/page_373.pdf-2,in 2016 what was the percentage change in net revenue,1.3%,1.3,"subtract(705.4, 696.3), divide(#0, 696.3)","[['', 'amount ( in millions )'], ['2015 net revenue', '$ 696.3'], ['retail electric price', '12.9'], ['volume/weather', '4.7'], ['net wholesale revenue', '-2.4 ( 2.4 )'], ['reserve equalization', '-2.8 ( 2.8 )'], ['other', '-3.3 ( 3.3 )'], ['2016 net revenue', '$ 705.4']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2015 net revenue</td><td>$ 696.3</td></tr>
    <tr><td>retail electric price</td><td>12.9</td></tr>
    <tr><td>volume/weather</td><td>4.7</td></tr>
    <tr><td>net wholesale revenue</td><td>-2.4 ( 2.4 )</td></tr>
    <tr><td>reserve equalization</td><td>-2.8 ( 2.8 )</td></tr>
    <tr><td>other</td><td>-3.3 ( 3.3 )</td></tr>
    <tr><td>2016 net revenue</td><td>$ 705.4</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(705.4, 696.3), divide(#0, 696.3), multiply(#1, const_100)""",1
Single_BLK/2014/page_68.pdf-1,what is the growth rate in employee headcount from 2012 to 2013?,8.6%,8.6,"subtract(11400, 10500), divide(#0, 10500)","[['( in millions )', '2014', '2013', '2012'], ['nonoperating income ( expense ) gaap basis', '$ -79 ( 79 )', '$ 116', '$ -54 ( 54 )'], ['less : net income ( loss ) attributableto nci ( 1 )', '-30 ( 30 )', '19', '-18 ( 18 )'], ['nonoperating income ( expense ) ( 2 )', '-49 ( 49 )', '97', '-36 ( 36 )'], ['gain related to the charitable contribution', '2014', '-80 ( 80 )', '2014'], ['compensation expense related to ( appreciation ) depreciation on deferred compensation plans', '-7 ( 7 )', '-10 ( 10 )', '-6 ( 6 )'], ['nonoperating income ( expense ) asadjusted ( 2 )', '$ -56 ( 56 )', '$ 7', '$ -42 ( 42 )']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2014</th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>nonoperating income ( expense ) gaap basis</td><td>$ -79 ( 79 )</td><td>$ 116</td><td>$ -54 ( 54 )</td></tr>
    <tr><td>less : net income ( loss ) attributableto nci ( 1 )</td><td>-30 ( 30 )</td><td>19</td><td>-18 ( 18 )</td></tr>
    <tr><td>nonoperating income ( expense ) ( 2 )</td><td>-49 ( 49 )</td><td>97</td><td>-36 ( 36 )</td></tr>
    <tr><td>gain related to the charitable contribution</td><td>2014</td><td>-80 ( 80 )</td><td>2014</td></tr>
    <tr><td>compensation expense related to ( appreciation ) depreciation on deferred compensation plans</td><td>-7 ( 7 )</td><td>-10 ( 10 )</td><td>-6 ( 6 )</td></tr>
    <tr><td>nonoperating income ( expense ) asadjusted ( 2 )</td><td>$ -56 ( 56 )</td><td>$ 7</td><td>$ -42 ( 42 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(11400, 10500), divide(#0, 10500), multiply(#1, const_100)""",0
Single_AWK/2015/page_127.pdf-4,what was the growth rate in the account balance 2015,7.1%,7.1,"add(12, -3), divide(#0, 127)","[['', 'level 3'], ['balance as of january 1 2015', '$ 127'], ['actual return on assets', '12'], ['purchases issuances and settlements net', '-3 ( 3 )'], ['balance as of december 31 2015', '$ 136']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>level 3</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance as of january 1 2015</td><td>$ 127</td></tr>
    <tr><td>actual return on assets</td><td>12</td></tr>
    <tr><td>purchases issuances and settlements net</td><td>-3 ( 3 )</td></tr>
    <tr><td>balance as of december 31 2015</td><td>$ 136</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(136, 127), divide(#0, 127), multiply(#1, const_100)""",0
Single_UNP/2009/page_61.pdf-2,"for 2009 , what was freight revenue per route mile?",416682,416682.0,"multiply(13373, const_1000000), divide(#0, 32094)","[['millions of dollars', '2009', '2008', '2007'], ['agricultural', '$ 2666', '$ 3174', '$ 2605'], ['automotive', '854', '1344', '1458'], ['chemicals', '2102', '2494', '2287'], ['energy', '3118', '3810', '3134'], ['industrial products', '2147', '3273', '3077'], ['intermodal', '2486', '3023', '2925'], ['total freight revenues', '$ 13373', '$ 17118', '$ 15486'], ['other revenues', '770', '852', '797'], ['total operating revenues', '$ 14143', '$ 17970', '$ 16283']]","<table>
  <thead>
    <tr>
      <th>millions of dollars</th>
      <th>2009</th>
      <th>2008</th>
      <th>2007</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>agricultural</td><td>$ 2666</td><td>$ 3174</td><td>$ 2605</td></tr>
    <tr><td>automotive</td><td>854</td><td>1344</td><td>1458</td></tr>
    <tr><td>chemicals</td><td>2102</td><td>2494</td><td>2287</td></tr>
    <tr><td>energy</td><td>3118</td><td>3810</td><td>3134</td></tr>
    <tr><td>industrial products</td><td>2147</td><td>3273</td><td>3077</td></tr>
    <tr><td>intermodal</td><td>2486</td><td>3023</td><td>2925</td></tr>
    <tr><td>total freight revenues</td><td>$ 13373</td><td>$ 17118</td><td>$ 15486</td></tr>
    <tr><td>other revenues</td><td>770</td><td>852</td><td>797</td></tr>
    <tr><td>total operating revenues</td><td>$ 14143</td><td>$ 17970</td><td>$ 16283</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(13373, 32094)""",0
Single_UNP/2006/page_45.pdf-3,what was the percentage change in open claims ending balance at december 31 from 2004 to 2005?,4%,4.0,"subtract(4197, 4028), divide(#0, 4028)","[['claims activity', '2006', '2005', '2004'], ['open claims beginning balance', '4197', '4028', '4085'], ['new claims', '4190', '4584', '4366'], ['settled or dismissed claims', '-4261 ( 4261 )', '-4415 ( 4415 )', '-4423 ( 4423 )'], ['open claims ending balance at december 31', '4126', '4197', '4028']]","<table>
  <thead>
    <tr>
      <th>claims activity</th>
      <th>2006</th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>open claims beginning balance</td><td>4197</td><td>4028</td><td>4085</td></tr>
    <tr><td>new claims</td><td>4190</td><td>4584</td><td>4366</td></tr>
    <tr><td>settled or dismissed claims</td><td>-4261 ( 4261 )</td><td>-4415 ( 4415 )</td><td>-4423 ( 4423 )</td></tr>
    <tr><td>open claims ending balance at december 31</td><td>4126</td><td>4197</td><td>4028</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(4197, 4028), divide(#0, 4028), multiply(#1, const_100)""",0
Single_DISCA/2013/page_60.pdf-3,what was the five year average uncompounded annual return for the s&p 500?,20.93,20.93,"subtract(2013, 2008), subtract(204.63, const_100), divide(#1, #0)","[['', 'december 312008', 'december 312009', 'december 312010', 'december 312011', 'december 312012', 'december 312013'], ['disca', '$ 100.00', '$ 216.60', '$ 294.49', '$ 289.34', '$ 448.31', '$ 638.56'], ['discb', '$ 100.00', '$ 207.32', '$ 287.71', '$ 277.03', '$ 416.52', '$ 602.08'], ['disck', '$ 100.00', '$ 198.06', '$ 274.01', '$ 281.55', '$ 436.89', '$ 626.29'], ['s&p 500', '$ 100.00', '$ 123.45', '$ 139.23', '$ 139.23', '$ 157.90', '$ 204.63'], ['peer group', '$ 100.00', '$ 151.63', '$ 181.00', '$ 208.91', '$ 286.74', '$ 454.87']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>december 312008</th>
      <th>december 312009</th>
      <th>december 312010</th>
      <th>december 312011</th>
      <th>december 312012</th>
      <th>december 312013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>disca</td><td>$ 100.00</td><td>$ 216.60</td><td>$ 294.49</td><td>$ 289.34</td><td>$ 448.31</td><td>$ 638.56</td></tr>
    <tr><td>discb</td><td>$ 100.00</td><td>$ 207.32</td><td>$ 287.71</td><td>$ 277.03</td><td>$ 416.52</td><td>$ 602.08</td></tr>
    <tr><td>disck</td><td>$ 100.00</td><td>$ 198.06</td><td>$ 274.01</td><td>$ 281.55</td><td>$ 436.89</td><td>$ 626.29</td></tr>
    <tr><td>s&p 500</td><td>$ 100.00</td><td>$ 123.45</td><td>$ 139.23</td><td>$ 139.23</td><td>$ 157.90</td><td>$ 204.63</td></tr>
    <tr><td>peer group</td><td>$ 100.00</td><td>$ 151.63</td><td>$ 181.00</td><td>$ 208.91</td><td>$ 286.74</td><td>$ 454.87</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(23.45, 15.78), add(#0, 0.00), add(#1, 18.67), divide(#2, const_5)""",0
Single_MSI/2008/page_110.pdf-2,what was the percent change in balance of stockholder equity from the beginning to the end of 2006?,700%,700.0,"subtract(16, 2), divide(#0, 2)","[['', '2008', '2007', '2006'], ['balance at january 1', '$ 2014', '$ 16', '$ 2'], ['increase ( decrease ) in fair value', '-9 ( 9 )', '-6 ( 6 )', '75'], ['reclassifications to earnings', '2', '-10 ( 10 )', '-61 ( 61 )'], ['balance at december 31', '$ -7 ( 7 )', '$ 2014', '$ 16']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at january 1</td><td>$ 2014</td><td>$ 16</td><td>$ 2</td></tr>
    <tr><td>increase ( decrease ) in fair value</td><td>-9 ( 9 )</td><td>-6 ( 6 )</td><td>75</td></tr>
    <tr><td>reclassifications to earnings</td><td>2</td><td>-10 ( 10 )</td><td>-61 ( 61 )</td></tr>
    <tr><td>balance at december 31</td><td>$ -7 ( 7 )</td><td>$ 2014</td><td>$ 16</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(16, 2), divide(#0, 2), multiply(#1, const_100)""",0
Single_RCL/2016/page_7.pdf-4,what percentage of total cruise guests in 2016 were not european?,72.74%,72.74,"subtract(24000, 6542), divide(#0, 24000), multiply(#1, const_100)","[['year', 'weighted-averagesupply ofberthsmarketedglobally ( 1 )', 'royal caribbean cruises ltd . total berths ( 2 )', 'globalcruiseguests ( 1 )', 'north american cruise guests ( 1 ) ( 3 )', 'european cruise guests ( 1 ) ( 4 )', 'asia/pacific cruise guests ( 1 ) ( 5 )'], ['2012', '425000', '98650', '20813', '11641', '6225', '1474'], ['2013', '432000', '98750', '21343', '11710', '6430', '2045'], ['2014', '448000', '105750', '22039', '12269', '6387', '2382'], ['2015', '469000', '112700', '23000', '12004', '6587', '3129'], ['2016', '493000', '123270', '24000', '12581', '6542', '3636']]","<table>
  <thead>
    <tr>
      <th>year</th>
      <th>weighted-averagesupply ofberthsmarketedglobally ( 1 )</th>
      <th>royal caribbean cruises ltd . total berths ( 2 )</th>
      <th>globalcruiseguests ( 1 )</th>
      <th>north american cruise guests ( 1 ) ( 3 )</th>
      <th>european cruise guests ( 1 ) ( 4 )</th>
      <th>asia/pacific cruise guests ( 1 ) ( 5 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2012</td><td>425000</td><td>98650</td><td>20813</td><td>11641</td><td>6225</td><td>1474</td></tr>
    <tr><td>2013</td><td>432000</td><td>98750</td><td>21343</td><td>11710</td><td>6430</td><td>2045</td></tr>
    <tr><td>2014</td><td>448000</td><td>105750</td><td>22039</td><td>12269</td><td>6387</td><td>2382</td></tr>
    <tr><td>2015</td><td>469000</td><td>112700</td><td>23000</td><td>12004</td><td>6587</td><td>3129</td></tr>
    <tr><td>2016</td><td>493000</td><td>123270</td><td>24000</td><td>12581</td><td>6542</td><td>3636</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```plaintext
subtract(100, 27), multiply(#0, 24000), divide(#1, const_100)
```",0
Single_SLG/2012/page_87.pdf-2,what was the company's share of the value of the 521 fifth avenue acquisition based on the transaction cost?,122604300,122604300.0,"multiply(245.7, 49.9%), multiply(#0, const_1000000)","[['', '51 east 42nd street', '180 maiden lane', '110 east 42nd street', '1515 broadway', '521 fifth avenue'], ['land', '$ 44095', '$ 191523', '$ 34000', '$ 462700', '$ 110100'], ['building', '33470', '233230', '46411', '707938', '146686'], ['above market lease value', '5616', '7944', '823', '18298', '3318'], ['acquired in-place leases', '4333', '29948', '5396', '98661', '23016'], ['other assets net of other liabilities', '2014', '2014', '2014', '27127', '2014'], ['assets acquired', '87514', '462645', '86630', '1314724', '283120'], ['fair value adjustment to mortgage note payable', '2014', '2014', '2014', '-3693 ( 3693 )', '2014'], ['below market lease value', '7514', '20320', '2326', '84417', '25977'], ['liabilities assumed', '7514', '20320', '2326', '80724', '25977'], ['purchase price allocation', '$ 80000', '$ 442325', '$ 84304', '$ 1234000', '$ 257143'], ['net consideration funded by us at closing', '$ 81632', '$ 81835', '$ 2744', '$ 259228', '$ 70000'], ['equity and/or debt investment held', '2014', '2014', '$ 16000', '$ 40942', '$ 41432'], ['debt assumed', '$ 2014', '$ 2014', '$ 65000', '$ 458767', '$ 140000']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>51 east 42nd street</th>
      <th>180 maiden lane</th>
      <th>110 east 42nd street</th>
      <th>1515 broadway</th>
      <th>521 fifth avenue</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>land</td><td>$ 44095</td><td>$ 191523</td><td>$ 34000</td><td>$ 462700</td><td>$ 110100</td></tr>
    <tr><td>building</td><td>33470</td><td>233230</td><td>46411</td><td>707938</td><td>146686</td></tr>
    <tr><td>above market lease value</td><td>5616</td><td>7944</td><td>823</td><td>18298</td><td>3318</td></tr>
    <tr><td>acquired in-place leases</td><td>4333</td><td>29948</td><td>5396</td><td>98661</td><td>23016</td></tr>
    <tr><td>other assets net of other liabilities</td><td>2014</td><td>2014</td><td>2014</td><td>27127</td><td>2014</td></tr>
    <tr><td>assets acquired</td><td>87514</td><td>462645</td><td>86630</td><td>1314724</td><td>283120</td></tr>
    <tr><td>fair value adjustment to mortgage note payable</td><td>2014</td><td>2014</td><td>2014</td><td>-3693 ( 3693 )</td><td>2014</td></tr>
    <tr><td>below market lease value</td><td>7514</td><td>20320</td><td>2326</td><td>84417</td><td>25977</td></tr>
    <tr><td>liabilities assumed</td><td>7514</td><td>20320</td><td>2326</td><td>80724</td><td>25977</td></tr>
    <tr><td>purchase price allocation</td><td>$ 80000</td><td>$ 442325</td><td>$ 84304</td><td>$ 1234000</td><td>$ 257143</td></tr>
    <tr><td>net consideration funded by us at closing</td><td>$ 81632</td><td>$ 81835</td><td>$ 2744</td><td>$ 259228</td><td>$ 70000</td></tr>
    <tr><td>equity and/or debt investment held</td><td>2014</td><td>2014</td><td>$ 16000</td><td>$ 40942</td><td>$ 41432</td></tr>
    <tr><td>debt assumed</td><td>$ 2014</td><td>$ 2014</td><td>$ 65000</td><td>$ 458767</td><td>$ 140000</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(245.7, 4.5), subtract(#0, 140.0), multiply(#1, const_1)""",0
Single_RCL/2005/page_40.pdf-4,"what percentage of debt maturity was there in 2010 , relative to 2006?",114%,114.0,"divide(687376, 600883), multiply(const_100, #0)","[['2006', '$ 600883'], ['2007', '329493'], ['2008', '245257'], ['2009 ( 1 )', '361449'], ['2010', '687376']]","<table>
  <thead>
    <tr>
      <th>2006</th>
      <th>$ 600883</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2007</td><td>329493</td></tr>
    <tr><td>2008</td><td>245257</td></tr>
    <tr><td>2009 ( 1 )</td><td>361449</td></tr>
    <tr><td>2010</td><td>687376</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(687376, 600883), multiply(#0, const_100)""",1
Single_DISH/2002/page_94.pdf-3,"during 2000 , 2001 and 2002 , what were total employee purchases through the espp?",246000,246000.0,"add(58000, 80000), add(#0, 108000)","[['2003', '$ 17274'], ['2004', '14424'], ['2005', '11285'], ['2006', '7698'], ['2007', '3668'], ['thereafter', '1650'], ['total minimum lease payments', '55999']]","<table>
  <thead>
    <tr>
      <th>2003</th>
      <th>$ 17274</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2004</td><td>14424</td></tr>
    <tr><td>2005</td><td>11285</td></tr>
    <tr><td>2006</td><td>7698</td></tr>
    <tr><td>2007</td><td>3668</td></tr>
    <tr><td>thereafter</td><td>1650</td></tr>
    <tr><td>total minimum lease payments</td><td>55999</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(58000, 80000), add(#0, 108000)""",1
Single_BKR/2017/page_123.pdf-2,what portion of the approved securities is to be issued upon exercise of outstanding options warrants rights?,2.9%,2.9,"add(1.6, 53.7), divide(1.6, #0)","[['equity compensation plancategory', 'number ofsecurities to beissued uponexercise ofoutstandingoptions warrantsand rights', 'weighted averageexercise price ofoutstandingoptions warrantsand rights', 'number of securitiesremaining availablefor future issuanceunder equitycompensation plans ( excluding securitiesreflected in the firstcolumn )'], ['stockholder-approved plans', '1.6', '$ 36.61', '53.7'], ['nonstockholder-approved plans', '2014', '2014', '2014'], ['total', '1.6', '$ 36.61', '53.7']]","<table>
  <thead>
    <tr>
      <th>equity compensation plancategory</th>
      <th>number ofsecurities to beissued uponexercise ofoutstandingoptions warrantsand rights</th>
      <th>weighted averageexercise price ofoutstandingoptions warrantsand rights</th>
      <th>number of securitiesremaining availablefor future issuanceunder equitycompensation plans ( excluding securitiesreflected in the firstcolumn )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>stockholder-approved plans</td><td>1.6</td><td>$ 36.61</td><td>53.7</td></tr>
    <tr><td>nonstockholder-approved plans</td><td>2014</td><td>2014</td><td>2014</td></tr>
    <tr><td>total</td><td>1.6</td><td>$ 36.61</td><td>53.7</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","`divide(1.6, 53.7)`",0
Single_AMT/2005/page_84.pdf-1,"assuming that intangible asset will be sold , what will be the accumulated deprecation at the end of 2006 , in millions?",830.2,830.2,"divide(646560, const_1000), add(#0, 183.6)","[['', '2005', '2004'], ['acquired customer base and network location intangibles', '$ 2606546', '$ 1369607'], ['deferred financing costs', '65623', '89736'], ['acquired licenses and other intangibles', '51703', '43404'], ['total', '2723872', '1502747'], ['less accumulated amortization', '-646560 ( 646560 )', '-517444 ( 517444 )'], ['other intangible assets net', '$ 2077312', '$ 985303']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>acquired customer base and network location intangibles</td><td>$ 2606546</td><td>$ 1369607</td></tr>
    <tr><td>deferred financing costs</td><td>65623</td><td>89736</td></tr>
    <tr><td>acquired licenses and other intangibles</td><td>51703</td><td>43404</td></tr>
    <tr><td>total</td><td>2723872</td><td>1502747</td></tr>
    <tr><td>less accumulated amortization</td><td>-646560 ( 646560 )</td><td>-517444 ( 517444 )</td></tr>
    <tr><td>other intangible assets net</td><td>$ 2077312</td><td>$ 985303</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
add(136.0, 183.6), add(#0, 646.56)
```",0
Single_BDX/2009/page_80.pdf-1,what was the average the total fair value of performance-based restricted stock units vested from 2007 to 2009,30760,30760.0,"add(33712, 49387), add(#0, 9181), divide(#1, const_3)","[['', 'stock units', 'weighted average grant date fair value'], ['balance at october 1', '1570329', '$ 69.35'], ['granted', '618679', '62.96'], ['distributed', '-316839 ( 316839 )', '60.32'], ['forfeited or canceled', '-165211 ( 165211 )', '62.58'], ['balance at september 30', '1706958', '$ 69.36'], ['expected to vest at september 30', '1536262', '$ 69.36']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>stock units</th>
      <th>weighted average grant date fair value</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at october 1</td><td>1570329</td><td>$ 69.35</td></tr>
    <tr><td>granted</td><td>618679</td><td>62.96</td></tr>
    <tr><td>distributed</td><td>-316839 ( 316839 )</td><td>60.32</td></tr>
    <tr><td>forfeited or canceled</td><td>-165211 ( 165211 )</td><td>62.58</td></tr>
    <tr><td>balance at september 30</td><td>1706958</td><td>$ 69.36</td></tr>
    <tr><td>expected to vest at september 30</td><td>1536262</td><td>$ 69.36</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(33712, 49387), add(#0, 9181), divide(#1, const_3)""",1
Single_AOS/2003/page_23.pdf-2,what was the percentage change in research and development costs between 2002 and 2003?,14%,14.0,"subtract(34.6, 30.4), divide(#0, 30.4)","[['years ended december 31 ( dollars in millions )', '2003', '2002'], ['balance at beginning of year', '$ 63.2', '$ 69.6'], ['expense', '29.1', '29.9'], ['claims settled', '-30.2 ( 30.2 )', '-29.1 ( 29.1 )'], ['customer warranty waiver ( 1 )', '--', '-7.2 ( 7.2 )'], ['balance at end of year', '$ 62.1', '$ 63.2']]","<table>
  <thead>
    <tr>
      <th>years ended december 31 ( dollars in millions )</th>
      <th>2003</th>
      <th>2002</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance at beginning of year</td><td>$ 63.2</td><td>$ 69.6</td></tr>
    <tr><td>expense</td><td>29.1</td><td>29.9</td></tr>
    <tr><td>claims settled</td><td>-30.2 ( 30.2 )</td><td>-29.1 ( 29.1 )</td></tr>
    <tr><td>customer warranty waiver ( 1 )</td><td>--</td><td>-7.2 ( 7.2 )</td></tr>
    <tr><td>balance at end of year</td><td>$ 62.1</td><td>$ 63.2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(34.6, 30.4), divide(#0, 30.4), multiply(#1, const_100)""",1
Single_RE/2013/page_109.pdf-3,for the years ended december 312013 and 2012 what was the percentage change in the reinsurance receivables and premium receivables,-6.6%,-6.6,"subtract(29905, 32011), divide(#0, 32011)","[['( dollars in thousands )', 'years ended december 31 , 2013', 'years ended december 31 , 2012'], ['reinsurance receivables and premium receivables', '$ 29905', '$ 32011']]","<table>
  <thead>
    <tr>
      <th>( dollars in thousands )</th>
      <th>years ended december 31 , 2013</th>
      <th>years ended december 31 , 2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>reinsurance receivables and premium receivables</td><td>$ 29905</td><td>$ 32011</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(29905, 32011), divide(#0, 32011), multiply(#1, const_100)""",0
Single_BLL/2007/page_87.pdf-1,what was the percentage change in accumulated other comprehensive earnings ( loss ) between 2005 and 2006?\\n,71%,71.0,"subtract(-29.5, -100.7), divide(#0, 100.7)","[['( $ in millions )', 'foreign currency translation', 'pension and other postretirement items net of tax', 'effective financial derivatives net of tax', 'accumulated other comprehensive earnings ( loss )'], ['december 31 2004', '$ 148.9', '$ -126.3 ( 126.3 )', '$ 10.6', '$ 33.2'], ['2005 change', '-74.3 ( 74.3 )', '-43.6 ( 43.6 )', '-16.0 ( 16.0 )', '-133.9 ( 133.9 )'], ['december 31 2005', '74.6', '-169.9 ( 169.9 )', '-5.4 ( 5.4 )', '-100.7 ( 100.7 )'], ['2006 change', '57.2', '55.9', '6.0', '119.1'], ['effect of sfas no . 158 adoption ( a )', '2013', '-47.9 ( 47.9 )', '2013', '-47.9 ( 47.9 )'], ['december 31 2006', '131.8', '-161.9 ( 161.9 )', '0.6', '-29.5 ( 29.5 )'], ['2007 change', '90.0', '57.9', '-11.5 ( 11.5 )', '136.4'], ['december 31 2007', '$ 221.8', '$ -104.0 ( 104.0 )', '$ -10.9 ( 10.9 )', '$ 106.9']]","<table>
  <thead>
    <tr>
      <th>( $ in millions )</th>
      <th>foreign currency translation</th>
      <th>pension and other postretirement items net of tax</th>
      <th>effective financial derivatives net of tax</th>
      <th>accumulated other comprehensive earnings ( loss )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>december 31 2004</td><td>$ 148.9</td><td>$ -126.3 ( 126.3 )</td><td>$ 10.6</td><td>$ 33.2</td></tr>
    <tr><td>2005 change</td><td>-74.3 ( 74.3 )</td><td>-43.6 ( 43.6 )</td><td>-16.0 ( 16.0 )</td><td>-133.9 ( 133.9 )</td></tr>
    <tr><td>december 31 2005</td><td>74.6</td><td>-169.9 ( 169.9 )</td><td>-5.4 ( 5.4 )</td><td>-100.7 ( 100.7 )</td></tr>
    <tr><td>2006 change</td><td>57.2</td><td>55.9</td><td>6.0</td><td>119.1</td></tr>
    <tr><td>effect of sfas no . 158 adoption ( a )</td><td>2013</td><td>-47.9 ( 47.9 )</td><td>2013</td><td>-47.9 ( 47.9 )</td></tr>
    <tr><td>december 31 2006</td><td>131.8</td><td>-161.9 ( 161.9 )</td><td>0.6</td><td>-29.5 ( 29.5 )</td></tr>
    <tr><td>2007 change</td><td>90.0</td><td>57.9</td><td>-11.5 ( 11.5 )</td><td>136.4</td></tr>
    <tr><td>december 31 2007</td><td>$ 221.8</td><td>$ -104.0 ( 104.0 )</td><td>$ -10.9 ( 10.9 )</td><td>$ 106.9</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(-29.5, -100.7), divide(#0, -100.7), multiply(#1, const_100)""",0
Single_DISCA/2016/page_30.pdf-4,"what was the percentage cumulative total shareholder return on discb for the five year period ended december 31 , 2016?",37.83%,37.83,"subtract(137.83, const_100), divide(#0, const_100)","[['', 'december 312011', 'december 312012', 'december 312013', 'december 312014', 'december 312015', 'december 312016'], ['disca', '$ 100.00', '$ 154.94', '$ 220.70', '$ 168.17', '$ 130.24', '$ 133.81'], ['discb', '$ 100.00', '$ 150.40', '$ 217.35', '$ 175.04', '$ 127.80', '$ 137.83'], ['disck', '$ 100.00', '$ 155.17', '$ 222.44', '$ 178.89', '$ 133.79', '$ 142.07'], ['s&p 500', '$ 100.00', '$ 113.41', '$ 146.98', '$ 163.72', '$ 162.53', '$ 178.02'], ['peer group', '$ 100.00', '$ 134.98', '$ 220.77', '$ 253.19', '$ 243.93', '$ 271.11']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>december 312011</th>
      <th>december 312012</th>
      <th>december 312013</th>
      <th>december 312014</th>
      <th>december 312015</th>
      <th>december 312016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>disca</td><td>$ 100.00</td><td>$ 154.94</td><td>$ 220.70</td><td>$ 168.17</td><td>$ 130.24</td><td>$ 133.81</td></tr>
    <tr><td>discb</td><td>$ 100.00</td><td>$ 150.40</td><td>$ 217.35</td><td>$ 175.04</td><td>$ 127.80</td><td>$ 137.83</td></tr>
    <tr><td>disck</td><td>$ 100.00</td><td>$ 155.17</td><td>$ 222.44</td><td>$ 178.89</td><td>$ 133.79</td><td>$ 142.07</td></tr>
    <tr><td>s&p 500</td><td>$ 100.00</td><td>$ 113.41</td><td>$ 146.98</td><td>$ 163.72</td><td>$ 162.53</td><td>$ 178.02</td></tr>
    <tr><td>peer group</td><td>$ 100.00</td><td>$ 134.98</td><td>$ 220.77</td><td>$ 253.19</td><td>$ 243.93</td><td>$ 271.11</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(137.83, 100.00), divide(#0, 100.00), multiply(#1, const_100)""",0
Single_ADI/2009/page_90.pdf-3,what percentage did the balance increase from 2007 to 2009?,83.6%,83.6,"subtract(18161, 9889), divide(#0, 9889)","[['balance november 3 2007', '$ 9889'], ['additions for tax positions of current year', '3861'], ['balance november 1 2008', '13750'], ['additions for tax positions of current year', '4411'], ['balance october 31 2009', '$ 18161']]","<table>
  <thead>
    <tr>
      <th>balance november 3 2007</th>
      <th>$ 9889</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>additions for tax positions of current year</td><td>3861</td></tr>
    <tr><td>balance november 1 2008</td><td>13750</td></tr>
    <tr><td>additions for tax positions of current year</td><td>4411</td></tr>
    <tr><td>balance october 31 2009</td><td>$ 18161</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(18161, 9889), divide(#0, 9889), multiply(#1, const_100)""",0
Single_AWK/2017/page_128.pdf-2,what percentage of total afudc in 2016 accounted for allowance for borrowed funds used during construction?,28.6%,28.6,"add(15, 6), divide(6, #0)","[['', '2017', '2016', '2015'], ['allowance for other funds used during construction', '$ 19', '$ 15', '$ 13'], ['allowance for borrowed funds used during construction', '8', '6', '8']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
      <th>2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>allowance for other funds used during construction</td><td>$ 19</td><td>$ 15</td><td>$ 13</td></tr>
    <tr><td>allowance for borrowed funds used during construction</td><td>8</td><td>6</td><td>8</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(15, 6), divide(6, #0), multiply(#1, const_100)""",0
Single_AAPL/2012/page_64.pdf-1,what was the percentage change in the gross unrecognized tax benefits between 2010 and 2011?,46%,46.0,"subtract(1375, 943), divide(#0, 943)","[['', '2012', '2011', '2010'], ['beginning balance', '$ 1375', '$ 943', '$ 971'], ['increases related to tax positions taken during a prior year', '340', '49', '61'], ['decreases related to tax positions taken during a prior year', '-107 ( 107 )', '-39 ( 39 )', '-224 ( 224 )'], ['increases related to tax positions taken during the current year', '467', '425', '240'], ['decreases related to settlements with taxing authorities', '-3 ( 3 )', '0', '-102 ( 102 )'], ['decreases related to expiration of statute of limitations', '-10 ( 10 )', '-3 ( 3 )', '-3 ( 3 )'], ['ending balance', '$ 2062', '$ 1375', '$ 943']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>beginning balance</td><td>$ 1375</td><td>$ 943</td><td>$ 971</td></tr>
    <tr><td>increases related to tax positions taken during a prior year</td><td>340</td><td>49</td><td>61</td></tr>
    <tr><td>decreases related to tax positions taken during a prior year</td><td>-107 ( 107 )</td><td>-39 ( 39 )</td><td>-224 ( 224 )</td></tr>
    <tr><td>increases related to tax positions taken during the current year</td><td>467</td><td>425</td><td>240</td></tr>
    <tr><td>decreases related to settlements with taxing authorities</td><td>-3 ( 3 )</td><td>0</td><td>-102 ( 102 )</td></tr>
    <tr><td>decreases related to expiration of statute of limitations</td><td>-10 ( 10 )</td><td>-3 ( 3 )</td><td>-3 ( 3 )</td></tr>
    <tr><td>ending balance</td><td>$ 2062</td><td>$ 1375</td><td>$ 943</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1375, 943), divide(#0, 943), multiply(#1, const_100)""",0
Single_ETR/2008/page_314.pdf-4,what is the growth rate in net revenue in 2007?,5.2%,5.2,"subtract(991.1, 942.1), divide(#0, 942.1)","[['', 'amount ( in millions )'], ['2006 net revenue', '$ 942.1'], ['base revenues', '78.4'], ['volume/weather', '37.5'], ['transmission revenue', '9.2'], ['purchased power capacity', '-80.0 ( 80.0 )'], ['other', '3.9'], ['2007 net revenue', '$ 991.1']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2006 net revenue</td><td>$ 942.1</td></tr>
    <tr><td>base revenues</td><td>78.4</td></tr>
    <tr><td>volume/weather</td><td>37.5</td></tr>
    <tr><td>transmission revenue</td><td>9.2</td></tr>
    <tr><td>purchased power capacity</td><td>-80.0 ( 80.0 )</td></tr>
    <tr><td>other</td><td>3.9</td></tr>
    <tr><td>2007 net revenue</td><td>$ 991.1</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(991.1, 942.1), divide(#0, 942.1), multiply(#1, const_100)""",1
Single_AMT/2010/page_113.pdf-2,what is the percentage change in the intrinsic value of stock options from 2007 to 2008?,-59.5%,-59.5,"subtract(40.1, 99.1), divide(#0, 99.1)","[['', '2010', '2009', '2008'], ['range of risk-free interest rate', '1.41% ( 1.41 % ) 2013 2.39% ( 2.39 % )', '1.41% ( 1.41 % ) 2013 2.04% ( 2.04 % )', '1.44% ( 1.44 % ) 2013 3.05% ( 3.05 % )'], ['weighted average risk-free interest rate', '2.35% ( 2.35 % )', '1.71% ( 1.71 % )', '1.89% ( 1.89 % )'], ['expected life of option grants', '4.60 years', '4.00 years', '4.00 years'], ['range of expected volatility of underlying stock price', '37.11% ( 37.11 % ) 2013 37.48% ( 37.48 % )', '36.00% ( 36.00 % ) 2013 36.63% ( 36.63 % )', '28.51% ( 28.51 % ) 2013 35.30% ( 35.30 % )'], ['weighted average expected volatility of underlying stock price', '37.14% ( 37.14 % )', '36.23% ( 36.23 % )', '29.10% ( 29.10 % )'], ['expected annual dividends', 'n/a', 'n/a', 'n/a']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2010</th>
      <th>2009</th>
      <th>2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>range of risk-free interest rate</td><td>1.41% ( 1.41 % ) 2013 2.39% ( 2.39 % )</td><td>1.41% ( 1.41 % ) 2013 2.04% ( 2.04 % )</td><td>1.44% ( 1.44 % ) 2013 3.05% ( 3.05 % )</td></tr>
    <tr><td>weighted average risk-free interest rate</td><td>2.35% ( 2.35 % )</td><td>1.71% ( 1.71 % )</td><td>1.89% ( 1.89 % )</td></tr>
    <tr><td>expected life of option grants</td><td>4.60 years</td><td>4.00 years</td><td>4.00 years</td></tr>
    <tr><td>range of expected volatility of underlying stock price</td><td>37.11% ( 37.11 % ) 2013 37.48% ( 37.48 % )</td><td>36.00% ( 36.00 % ) 2013 36.63% ( 36.63 % )</td><td>28.51% ( 28.51 % ) 2013 35.30% ( 35.30 % )</td></tr>
    <tr><td>weighted average expected volatility of underlying stock price</td><td>37.14% ( 37.14 % )</td><td>36.23% ( 36.23 % )</td><td>29.10% ( 29.10 % )</td></tr>
    <tr><td>expected annual dividends</td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(99.1, 40.1), divide(#0, 40.1), multiply(#1, const_100)""",0
Single_UPS/2009/page_33.pdf-3,what is the roi of an investment in s&p500 in 2004 and sold in 2006?,21.5%,21.5,"subtract(121.48, const_100), divide(#0, const_100)","[['', '12/31/04', '12/31/05', '12/31/06', '12/31/07', '12/31/08', '12/31/09'], ['united parcel service inc .', '$ 100.00', '$ 89.49', '$ 91.06', '$ 87.88', '$ 70.48', '$ 75.95'], ['s&p 500 index', '$ 100.00', '$ 104.91', '$ 121.48', '$ 128.15', '$ 80.74', '$ 102.11'], ['dow jones transportation average', '$ 100.00', '$ 111.65', '$ 122.61', '$ 124.35', '$ 97.72', '$ 115.88']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>12/31/04</th>
      <th>12/31/05</th>
      <th>12/31/06</th>
      <th>12/31/07</th>
      <th>12/31/08</th>
      <th>12/31/09</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>united parcel service inc .</td><td>$ 100.00</td><td>$ 89.49</td><td>$ 91.06</td><td>$ 87.88</td><td>$ 70.48</td><td>$ 75.95</td></tr>
    <tr><td>s&p 500 index</td><td>$ 100.00</td><td>$ 104.91</td><td>$ 121.48</td><td>$ 128.15</td><td>$ 80.74</td><td>$ 102.11</td></tr>
    <tr><td>dow jones transportation average</td><td>$ 100.00</td><td>$ 111.65</td><td>$ 122.61</td><td>$ 124.35</td><td>$ 97.72</td><td>$ 115.88</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(121.48, 100.00), divide(#0, 100), multiply(#1, const_100)""",0
Single_GPN/2010/page_92.pdf-1,what was the total rent expense on all operating leases for fiscal 2008 through 2010 in millions,93.4,93.4,"add(32.8, 30.2), add(#0, 30.4)","[['', 'operating leases'], ['2011', '$ 9856'], ['2012', '3803'], ['2013', '2538'], ['2014', '1580'], ['2015', '928'], ['thereafter', '1428'], ['total future minimum lease payments', '$ 20133']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>operating leases</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2011</td><td>$ 9856</td></tr>
    <tr><td>2012</td><td>3803</td></tr>
    <tr><td>2013</td><td>2538</td></tr>
    <tr><td>2014</td><td>1580</td></tr>
    <tr><td>2015</td><td>928</td></tr>
    <tr><td>thereafter</td><td>1428</td></tr>
    <tr><td>total future minimum lease payments</td><td>$ 20133</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(32.8, 30.2), add(#0, 30.4)""",1
Single_UPS/2014/page_35.pdf-3,what was the difference in percentage cumulative total shareowners 2019 returns for united parcel service inc . compared to the standard & poor's 500 index for the five years ended 12/31/2014?,18.74%,18.74,"subtract(223.79, const_100), divide(#0, const_100), subtract(205.05, const_100), divide(#2, const_100), subtract(#1, #3)","[['', '12/31/2009', '12/31/2010', '12/31/2011', '12/31/2012', '12/31/2013', '12/31/2014'], ['united parcel service inc .', '$ 100.00', '$ 130.29', '$ 135.35', '$ 140.54', '$ 205.95', '$ 223.79'], ['standard & poor 2019s 500 index', '$ 100.00', '$ 115.06', '$ 117.48', '$ 136.26', '$ 180.38', '$ 205.05'], ['dow jones transportation average', '$ 100.00', '$ 126.74', '$ 126.75', '$ 136.24', '$ 192.61', '$ 240.91']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>12/31/2009</th>
      <th>12/31/2010</th>
      <th>12/31/2011</th>
      <th>12/31/2012</th>
      <th>12/31/2013</th>
      <th>12/31/2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>united parcel service inc .</td><td>$ 100.00</td><td>$ 130.29</td><td>$ 135.35</td><td>$ 140.54</td><td>$ 205.95</td><td>$ 223.79</td></tr>
    <tr><td>standard & poor 2019s 500 index</td><td>$ 100.00</td><td>$ 115.06</td><td>$ 117.48</td><td>$ 136.26</td><td>$ 180.38</td><td>$ 205.05</td></tr>
    <tr><td>dow jones transportation average</td><td>$ 100.00</td><td>$ 126.74</td><td>$ 126.75</td><td>$ 136.24</td><td>$ 192.61</td><td>$ 240.91</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(223.79, 100.00), divide(#0, 100.00), multiply(#1, const_100), subtract(205.05, 100.00), divide(#3, 100.00), multiply(#4, const_100), subtract(#2, #5)""",0
Single_AES/2001/page_42.pdf-3,what were 2001 total segment revenues in billions?,9.3,9.3,"add(2.5, 2.7), add(#0, 2.4), add(1.7, #1)","[['', '2001', '2000', '% (  % ) change'], ['contract generation', '$ 2.5 billion', '$ 1.7 billion', '47% ( 47 % )'], ['competitive supply', '$ 2.7 billion', '$ 2.4 billion', '13% ( 13 % )'], ['large utilities', '$ 2.4 billion', '$ 2.1 billion', '14% ( 14 % )'], ['growth distribution', '$ 1.7 billion', '$ 1.3 billion', '31% ( 31 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2001</th>
      <th>2000</th>
      <th>% (  % ) change</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>contract generation</td><td>$ 2.5 billion</td><td>$ 1.7 billion</td><td>47% ( 47 % )</td></tr>
    <tr><td>competitive supply</td><td>$ 2.7 billion</td><td>$ 2.4 billion</td><td>13% ( 13 % )</td></tr>
    <tr><td>large utilities</td><td>$ 2.4 billion</td><td>$ 2.1 billion</td><td>14% ( 14 % )</td></tr>
    <tr><td>growth distribution</td><td>$ 1.7 billion</td><td>$ 1.3 billion</td><td>31% ( 31 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(2.5, 2.7), add(#0, 2.4), add(#1, 1.7)""",0
Single_ILMN/2006/page_86.pdf-1,what was the percentage change in revenues between 2005 and 2006?,45%,45.0,"subtract(73501, 50583), divide(#0, 50583)","[['', 'year ended january 1 2006', 'year ended january 2 2005'], ['revenue', '$ 73501', '$ 50583'], ['net loss', '-6234 ( 6234 )', '-9965 ( 9965 )'], ['net loss per share basic and diluted', '-0.15 ( 0.15 )', '-0.27 ( 0.27 )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>year ended january 1 2006</th>
      <th>year ended january 2 2005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>revenue</td><td>$ 73501</td><td>$ 50583</td></tr>
    <tr><td>net loss</td><td>-6234 ( 6234 )</td><td>-9965 ( 9965 )</td></tr>
    <tr><td>net loss per share basic and diluted</td><td>-0.15 ( 0.15 )</td><td>-0.27 ( 0.27 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(73501, 50583), divide(#0, 50583), multiply(#1, const_100)""",0
Single_GS/2018/page_165.pdf-4,what is the growth rate in the fair value of retained interests in 2018 compare to 2017?,54.0%,54.0,"subtract(3.28, 2.13), divide(#0, 2.13)","[['$ in millions', 'as of december 2018', 'as of december 2017'], ['fair value of retained interests', '$ 3151', '$ 2071'], ['weighted average life ( years )', '7.2', '6.0'], ['constant prepayment rate', '11.9% ( 11.9 % )', '9.4% ( 9.4 % )'], ['impact of 10% ( 10 % ) adverse change', '$ -27 ( 27 )', '$ -19 ( 19 )'], ['impact of 20% ( 20 % ) adverse change', '$ -53 ( 53 )', '$ -35 ( 35 )'], ['discount rate', '4.7% ( 4.7 % )', '4.2% ( 4.2 % )'], ['impact of 10% ( 10 % ) adverse change', '$ -75 ( 75 )', '$ -35 ( 35 )'], ['impact of 20% ( 20 % ) adverse change', '$ -147 ( 147 )', '$ -70 ( 70 )']]","<table>
  <thead>
    <tr>
      <th>$ in millions</th>
      <th>as of december 2018</th>
      <th>as of december 2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>fair value of retained interests</td><td>$ 3151</td><td>$ 2071</td></tr>
    <tr><td>weighted average life ( years )</td><td>7.2</td><td>6.0</td></tr>
    <tr><td>constant prepayment rate</td><td>11.9% ( 11.9 % )</td><td>9.4% ( 9.4 % )</td></tr>
    <tr><td>impact of 10% ( 10 % ) adverse change</td><td>$ -27 ( 27 )</td><td>$ -19 ( 19 )</td></tr>
    <tr><td>impact of 20% ( 20 % ) adverse change</td><td>$ -53 ( 53 )</td><td>$ -35 ( 35 )</td></tr>
    <tr><td>discount rate</td><td>4.7% ( 4.7 % )</td><td>4.2% ( 4.2 % )</td></tr>
    <tr><td>impact of 10% ( 10 % ) adverse change</td><td>$ -75 ( 75 )</td><td>$ -35 ( 35 )</td></tr>
    <tr><td>impact of 20% ( 20 % ) adverse change</td><td>$ -147 ( 147 )</td><td>$ -70 ( 70 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(3151, 2071), divide(#0, 2071), multiply(#1, const_100)""",0
Single_AON/2007/page_185.pdf-2,"assuming that actual net rent expense will be the same as presented in the table , what would be the growth rate in the net rent expense from 2008 to 2009?",-13.2%,-13.2,"subtract(275, 317), divide(#0, 317)","[['2008', '$ 317'], ['2009', '275'], ['2010', '236'], ['2011', '214'], ['2012', '191'], ['later years', '597'], ['total minimum payments required', '$ 1830']]","<table>
  <thead>
    <tr>
      <th>2008</th>
      <th>$ 317</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2009</td><td>275</td></tr>
    <tr><td>2010</td><td>236</td></tr>
    <tr><td>2011</td><td>214</td></tr>
    <tr><td>2012</td><td>191</td></tr>
    <tr><td>later years</td><td>597</td></tr>
    <tr><td>total minimum payments required</td><td>$ 1830</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(275, 317), divide(#0, 317), multiply(#1, const_100)""",0
Single_ETR/2013/page_14.pdf-2,what percentage of the change in net revenue between 2012 and 2013 is due to volume/weather ?,7%,7.0,"subtract(5524, 4969), divide(40, #0)","[['', 'amount ( in millions )'], ['2012 net revenue', '$ 4969'], ['retail electric price', '236'], ['louisiana act 55 financing savings obligation', '165'], ['grand gulf recovery', '75'], ['volume/weather', '40'], ['fuel recovery', '35'], ['miso deferral', '12'], ['decommissioning trusts', '-23 ( 23 )'], ['other', '15'], ['2013 net revenue', '$ 5524']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2012 net revenue</td><td>$ 4969</td></tr>
    <tr><td>retail electric price</td><td>236</td></tr>
    <tr><td>louisiana act 55 financing savings obligation</td><td>165</td></tr>
    <tr><td>grand gulf recovery</td><td>75</td></tr>
    <tr><td>volume/weather</td><td>40</td></tr>
    <tr><td>fuel recovery</td><td>35</td></tr>
    <tr><td>miso deferral</td><td>12</td></tr>
    <tr><td>decommissioning trusts</td><td>-23 ( 23 )</td></tr>
    <tr><td>other</td><td>15</td></tr>
    <tr><td>2013 net revenue</td><td>$ 5524</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(5524, 4969), subtract(40, 0), divide(#1, #0), multiply(#2, const_100)""",0
Single_ETR/2007/page_36.pdf-2,what is the growth rate of debt to capital ratio from 2006 to 2007?,10.1%,10.1,"subtract(57.6, 52.3), divide(#0, 52.3)","[['', '2007', '2006', '2005'], ['net debt to net capital at the end of the year', '54.6% ( 54.6 % )', '49.4% ( 49.4 % )', '51.5% ( 51.5 % )'], ['effect of subtracting cash from debt', '3.0% ( 3.0 % )', '2.9% ( 2.9 % )', '1.6% ( 1.6 % )'], ['debt to capital at the end of the year', '57.6% ( 57.6 % )', '52.3% ( 52.3 % )', '53.1% ( 53.1 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2007</th>
      <th>2006</th>
      <th>2005</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net debt to net capital at the end of the year</td><td>54.6% ( 54.6 % )</td><td>49.4% ( 49.4 % )</td><td>51.5% ( 51.5 % )</td></tr>
    <tr><td>effect of subtracting cash from debt</td><td>3.0% ( 3.0 % )</td><td>2.9% ( 2.9 % )</td><td>1.6% ( 1.6 % )</td></tr>
    <tr><td>debt to capital at the end of the year</td><td>57.6% ( 57.6 % )</td><td>52.3% ( 52.3 % )</td><td>53.1% ( 53.1 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(57.6, 52.3), divide(#0, 52.3), multiply(#1, const_100)""",0
Single_AAL/2015/page_51.pdf-3,by how much did american airlines group inc . common stock out preform the s&p 500 index over the 4 year period?,48%,48.0,"subtract(175, 100), divide(#0, 100), subtract(127, 100), divide(#2, 100), subtract(#1, #3)","[['', '12/9/2013', '12/31/2013', '12/31/2014', '12/31/2015'], ['american airlines group inc .', '$ 100', '$ 103', '$ 219', '$ 175'], ['amex airline index', '100', '102', '152', '127'], ['s&p 500', '100', '102', '114', '113']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>12/9/2013</th>
      <th>12/31/2013</th>
      <th>12/31/2014</th>
      <th>12/31/2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>american airlines group inc .</td><td>$ 100</td><td>$ 103</td><td>$ 219</td><td>$ 175</td></tr>
    <tr><td>amex airline index</td><td>100</td><td>102</td><td>152</td><td>127</td></tr>
    <tr><td>s&p 500</td><td>100</td><td>102</td><td>114</td><td>113</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(175, 100), subtract(113, 100), subtract(#0, #1)""",0
Single_GS/2018/page_175.pdf-2,what is the growth rate in the balance of lending commitments held for investment in 2018?,-2.8%,-2.8,"subtract(120997, 124504), divide(#0, 124504)","[['$ in millions', 'as of december 2018', 'as of december 2017'], ['held for investment', '$ 120997', '$ 124504'], ['held for sale', '8602', '9838'], ['at fair value', '7983', '9404'], ['total', '$ 137582', '$ 143746']]","<table>
  <thead>
    <tr>
      <th>$ in millions</th>
      <th>as of december 2018</th>
      <th>as of december 2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>held for investment</td><td>$ 120997</td><td>$ 124504</td></tr>
    <tr><td>held for sale</td><td>8602</td><td>9838</td></tr>
    <tr><td>at fair value</td><td>7983</td><td>9404</td></tr>
    <tr><td>total</td><td>$ 137582</td><td>$ 143746</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(120997, 124504), divide(#0, 124504), multiply(#1, const_100)""",1
Single_ETR/2004/page_185.pdf-1,what is the percent change in net revenue from 2003 to 2004?,3.58%,3.58,"subtract(1149.8, 1110.1), divide(#0, 1110.1)","[['', '( in millions )'], ['2003 net revenue', '$ 1110.1'], ['volume/weather', '26.7'], ['net wholesale revenue', '13.0'], ['summer capacity charges', '5.5'], ['price applied to unbilled sales', '4.8'], ['fuel recovery revenues', '-14.2 ( 14.2 )'], ['other', '3.9'], ['2004 net revenue', '$ 1149.8']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2003 net revenue</td><td>$ 1110.1</td></tr>
    <tr><td>volume/weather</td><td>26.7</td></tr>
    <tr><td>net wholesale revenue</td><td>13.0</td></tr>
    <tr><td>summer capacity charges</td><td>5.5</td></tr>
    <tr><td>price applied to unbilled sales</td><td>4.8</td></tr>
    <tr><td>fuel recovery revenues</td><td>-14.2 ( 14.2 )</td></tr>
    <tr><td>other</td><td>3.9</td></tr>
    <tr><td>2004 net revenue</td><td>$ 1149.8</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1149.8, 1110.1), divide(#0, 1110.1), multiply(#1, const_100)""",0
Single_HOLX/2009/page_153.pdf-4,what was the total fair value building that cytyc had finished constructing in 2008 including the fair market value of the land?,$ 15100 thousand,15100.0,"add(3000, 4400), add(7700, #0)","[['', 'amount'], ['fiscal 2010', '$ 1508'], ['fiscal 2011', '1561'], ['fiscal 2012', '1616'], ['fiscal 2013', '1672'], ['fiscal 2014', '1731'], ['thereafter', '7288'], ['total minimum payments', '15376'], ['less-amount representing interest', '-6094 ( 6094 )'], ['total', '$ 9282']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>fiscal 2010</td><td>$ 1508</td></tr>
    <tr><td>fiscal 2011</td><td>1561</td></tr>
    <tr><td>fiscal 2012</td><td>1616</td></tr>
    <tr><td>fiscal 2013</td><td>1672</td></tr>
    <tr><td>fiscal 2014</td><td>1731</td></tr>
    <tr><td>thereafter</td><td>7288</td></tr>
    <tr><td>total minimum payments</td><td>15376</td></tr>
    <tr><td>less-amount representing interest</td><td>-6094 ( 6094 )</td></tr>
    <tr><td>total</td><td>$ 9282</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(3000, 7700)""",0
Single_MO/2017/page_65.pdf-3,what is the growth rate in net earnings attributable to altria group inc . in 2016?,171.7%,171.7,"subtract(14239, 5241), divide(#0, 5241)","[['( in millions )', 'for the years ended december 31 , 2017', 'for the years ended december 31 , 2016', 'for the years ended december 31 , 2015'], ['net earnings attributable to altria group inc .', '$ 10222', '$ 14239', '$ 5241'], ['less : distributed and undistributed earnings attributable to share-based awards', '-14 ( 14 )', '-24 ( 24 )', '-10 ( 10 )'], ['earnings for basic and diluted eps', '$ 10208', '$ 14215', '$ 5231'], ['weighted-average shares for basic and diluted eps', '1921', '1952', '1961']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>for the years ended december 31 , 2017</th>
      <th>for the years ended december 31 , 2016</th>
      <th>for the years ended december 31 , 2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net earnings attributable to altria group inc .</td><td>$ 10222</td><td>$ 14239</td><td>$ 5241</td></tr>
    <tr><td>less : distributed and undistributed earnings attributable to share-based awards</td><td>-14 ( 14 )</td><td>-24 ( 24 )</td><td>-10 ( 10 )</td></tr>
    <tr><td>earnings for basic and diluted eps</td><td>$ 10208</td><td>$ 14215</td><td>$ 5231</td></tr>
    <tr><td>weighted-average shares for basic and diluted eps</td><td>1921</td><td>1952</td><td>1961</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(14239, 5241), divide(#0, 5241), multiply(#1, const_100)""",0
Single_AAP/2011/page_16.pdf-3,what was the percentage increase in stores from 2007 to 2011?,9.7%,9.7,"subtract(3460, 3153), divide(#0, 3153)","[['', '2011', '2010', '2009', '2008', '2007'], ['beginning stores', '3369', '3264', '3243', '3153', '2995'], ['new stores ( 1 )', '95', '110', '75', '109', '175'], ['stores closed', '-4 ( 4 )', '-5 ( 5 )', '-54 ( 54 )', '-19 ( 19 )', '-17 ( 17 )'], ['ending stores', '3460', '3369', '3264', '3243', '3153']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2011</th>
      <th>2010</th>
      <th>2009</th>
      <th>2008</th>
      <th>2007</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>beginning stores</td><td>3369</td><td>3264</td><td>3243</td><td>3153</td><td>2995</td></tr>
    <tr><td>new stores ( 1 )</td><td>95</td><td>110</td><td>75</td><td>109</td><td>175</td></tr>
    <tr><td>stores closed</td><td>-4 ( 4 )</td><td>-5 ( 5 )</td><td>-54 ( 54 )</td><td>-19 ( 19 )</td><td>-17 ( 17 )</td></tr>
    <tr><td>ending stores</td><td>3460</td><td>3369</td><td>3264</td><td>3243</td><td>3153</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(3460, 2995), divide(#0, 2995), multiply(#1, const_100)""",0
Single_CNC/2006/page_37.pdf-3,what was the percentage change in year end allowance for uncollectible accounts between 2005 and 2006?,55%,55.0,"subtract(155, 343), divide(#0, 343)","[['', '2006', '2005', '2004'], ['allowances beginning of year', '$ 343', '$ 462', '$ 607'], ['amounts charged to expense', '512', '80', '407'], ['write-offs of uncollectible receivables', '-700 ( 700 )', '-199 ( 199 )', '-552 ( 552 )'], ['allowances end of year', '$ 155', '$ 343', '$ 462']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2006</th>
      <th>2005</th>
      <th>2004</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>allowances beginning of year</td><td>$ 343</td><td>$ 462</td><td>$ 607</td></tr>
    <tr><td>amounts charged to expense</td><td>512</td><td>80</td><td>407</td></tr>
    <tr><td>write-offs of uncollectible receivables</td><td>-700 ( 700 )</td><td>-199 ( 199 )</td><td>-552 ( 552 )</td></tr>
    <tr><td>allowances end of year</td><td>$ 155</td><td>$ 343</td><td>$ 462</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(155, 343), divide(#0, 343), multiply(#1, const_100)""",0
Single_STT/2009/page_122.pdf-4,what is the percent change in asset purchase agreements between 2008 and 2009?,-74%,-74.0,"subtract(8211, 31780), divide(#0, 31780)","[['( in millions )', '2009', '2008'], ['indemnified securities financing', '$ 365251', '$ 324590'], ['asset purchase agreements ( 1 )', '8211', '31780'], ['unfunded commitments to extend credit', '18078', '20981'], ['standby letters of credit', '4784', '6061']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2009</th>
      <th>2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>indemnified securities financing</td><td>$ 365251</td><td>$ 324590</td></tr>
    <tr><td>asset purchase agreements ( 1 )</td><td>8211</td><td>31780</td></tr>
    <tr><td>unfunded commitments to extend credit</td><td>18078</td><td>20981</td></tr>
    <tr><td>standby letters of credit</td><td>4784</td><td>6061</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(8211, 31780), divide(#0, 31780), multiply(#1, const_100)""",0
Single_BLK/2017/page_35.pdf-4,what is the percentage change in the balance of asset allocation from 2016 to 2017?,11.2%,11.2,"subtract(196545, 176675), divide(#0, 176675)","[['( in millions )', 'december 312016', 'net inflows ( outflows )', 'marketchange', 'fximpact', 'december 312017'], ['asset allocation and balanced', '$ 176675', '$ -2502 ( 2502 )', '$ 17387', '$ 4985', '$ 196545'], ['target date/risk', '149432', '23925', '24532', '1577', '199466'], ['fiduciary', '68395', '-1047 ( 1047 )', '7522', '8819', '83689'], ['futureadvisor ( 1 )', '505', '-46 ( 46 )', '119', '2014', '578'], ['total', '$ 395007', '$ 20330', '$ 49560', '$ 15381', '$ 480278']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>december 312016</th>
      <th>net inflows ( outflows )</th>
      <th>marketchange</th>
      <th>fximpact</th>
      <th>december 312017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>asset allocation and balanced</td><td>$ 176675</td><td>$ -2502 ( 2502 )</td><td>$ 17387</td><td>$ 4985</td><td>$ 196545</td></tr>
    <tr><td>target date/risk</td><td>149432</td><td>23925</td><td>24532</td><td>1577</td><td>199466</td></tr>
    <tr><td>fiduciary</td><td>68395</td><td>-1047 ( 1047 )</td><td>7522</td><td>8819</td><td>83689</td></tr>
    <tr><td>futureadvisor ( 1 )</td><td>505</td><td>-46 ( 46 )</td><td>119</td><td>2014</td><td>578</td></tr>
    <tr><td>total</td><td>$ 395007</td><td>$ 20330</td><td>$ 49560</td><td>$ 15381</td><td>$ 480278</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(196545, 176675), divide(#0, 176675), multiply(#1, const_100)""",0
Single_LMT/2013/page_46.pdf-1,what was the average backlog at year-end of mfc from 2011 to 2013,147000,147000.0,"add(15000, 14700), add(#0, 14400), divide(#1, const_3)","[['', '2013', '2012', '2011'], ['net sales', '$ 7757', '$ 7457', '$ 7463'], ['operating profit', '1431', '1256', '1069'], ['operating margins', '18.4% ( 18.4 % )', '16.8% ( 16.8 % )', '14.3% ( 14.3 % )'], ['backlog at year-end', '15000', '14700', '14400']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2013</th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net sales</td><td>$ 7757</td><td>$ 7457</td><td>$ 7463</td></tr>
    <tr><td>operating profit</td><td>1431</td><td>1256</td><td>1069</td></tr>
    <tr><td>operating margins</td><td>18.4% ( 18.4 % )</td><td>16.8% ( 16.8 % )</td><td>14.3% ( 14.3 % )</td></tr>
    <tr><td>backlog at year-end</td><td>15000</td><td>14700</td><td>14400</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(15000, 14700), add(#0, 14400), divide(#1, 3)""",1
Single_REGN/2010/page_64.pdf-2,what was the total in 2010 and 2009 for arcalyst ae net product sales?,43700000,43700000.0,"add(25.3, 18.4), multiply(#0, const_1000000)","[['bayer healthcare collaboration revenue', 'bayer healthcare collaboration revenue', ''], ['( in millions )', '2010', '2009'], ['cost-sharing of regeneron vegf trap-eye development expenses', '$ 45.5', '$ 37.4'], ['substantive performance milestone payments', '20.0', '20.0'], ['recognition of deferred revenue related to up-front and other milestone payments', '9.9', '9.9'], ['total bayer healthcare collaboration revenue', '$ 75.4', '$ 67.3']]","<table>
  <thead>
    <tr>
      <th>bayer healthcare collaboration revenue</th>
      <th>bayer healthcare collaboration revenue</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    <tr><td>( in millions )</td><td>2010</td><td>2009</td></tr>
    <tr><td>cost-sharing of regeneron vegf trap-eye development expenses</td><td>$ 45.5</td><td>$ 37.4</td></tr>
    <tr><td>substantive performance milestone payments</td><td>20.0</td><td>20.0</td></tr>
    <tr><td>recognition of deferred revenue related to up-front and other milestone payments</td><td>9.9</td><td>9.9</td></tr>
    <tr><td>total bayer healthcare collaboration revenue</td><td>$ 75.4</td><td>$ 67.3</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(25.3, 18.4)""",0
Single_BLK/2016/page_79.pdf-1,what is the percentage change in total liquidity resources from 2015 to 2016?,0.6%,0.6,"subtract(10038, 9983), divide(#0, 9983)","[['( in millions )', 'december 31 2016', 'december 31 2015'], ['cash and cash equivalents ( 1 )', '$ 6091', '$ 6083'], ['cash and cash equivalents held by consolidated vres ( 2 )', '-53 ( 53 )', '-100 ( 100 )'], ['subtotal', '6038', '5983'], ['credit facility 2014 undrawn', '4000', '4000'], ['total liquidity resources ( 3 )', '$ 10038', '$ 9983']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>december 31 2016</th>
      <th>december 31 2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>cash and cash equivalents ( 1 )</td><td>$ 6091</td><td>$ 6083</td></tr>
    <tr><td>cash and cash equivalents held by consolidated vres ( 2 )</td><td>-53 ( 53 )</td><td>-100 ( 100 )</td></tr>
    <tr><td>subtotal</td><td>6038</td><td>5983</td></tr>
    <tr><td>credit facility 2014 undrawn</td><td>4000</td><td>4000</td></tr>
    <tr><td>total liquidity resources ( 3 )</td><td>$ 10038</td><td>$ 9983</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(10038, 9983), divide(#0, 9983), multiply(#1, const_100)""",0
Single_LKQ/2007/page_76.pdf-1,what was the percentage change in rental expense from 2005 to 2006?,52%,52.0,"subtract(18.6, 12.2), divide(#0, 12.2)","[['2008', '$ 42335'], ['2009', '33249'], ['2010', '25149'], ['2011', '17425'], ['2012', '11750'], ['thereafter', '28581'], ['future minimum lease payments', '$ 158489']]","<table>
  <thead>
    <tr>
      <th>2008</th>
      <th>$ 42335</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2009</td><td>33249</td></tr>
    <tr><td>2010</td><td>25149</td></tr>
    <tr><td>2011</td><td>17425</td></tr>
    <tr><td>2012</td><td>11750</td></tr>
    <tr><td>thereafter</td><td>28581</td></tr>
    <tr><td>future minimum lease payments</td><td>$ 158489</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(18.6, 12.2), divide(#0, 12.2), multiply(#1, const_100)""",0
Single_EOG/2018/page_89.pdf-1,what is the increase observed in the liabilities incurred during 2017 and 2018?,44.35%,44.35,"divide(79057, 54764), subtract(#0, 1)","[['', '2018', '2017'], ['carrying amount at beginning of period', '$ 946848', '$ 912926'], ['liabilities incurred', '79057', '54764'], ['liabilities settled ( 1 )', '-70829 ( 70829 )', '-61871 ( 61871 )'], ['accretion', '36622', '34708'], ['revisions', '-38932 ( 38932 )', '-9818 ( 9818 )'], ['foreign currency translations', '1611', '16139'], ['carrying amount at end of period', '$ 954377', '$ 946848'], ['current portion', '$ 26214', '$ 19259'], ['noncurrent portion', '$ 928163', '$ 927589']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>carrying amount at beginning of period</td><td>$ 946848</td><td>$ 912926</td></tr>
    <tr><td>liabilities incurred</td><td>79057</td><td>54764</td></tr>
    <tr><td>liabilities settled ( 1 )</td><td>-70829 ( 70829 )</td><td>-61871 ( 61871 )</td></tr>
    <tr><td>accretion</td><td>36622</td><td>34708</td></tr>
    <tr><td>revisions</td><td>-38932 ( 38932 )</td><td>-9818 ( 9818 )</td></tr>
    <tr><td>foreign currency translations</td><td>1611</td><td>16139</td></tr>
    <tr><td>carrying amount at end of period</td><td>$ 954377</td><td>$ 946848</td></tr>
    <tr><td>current portion</td><td>$ 26214</td><td>$ 19259</td></tr>
    <tr><td>noncurrent portion</td><td>$ 928163</td><td>$ 927589</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(79057, 54764)""",0
Single_AMT/2008/page_105.pdf-4,for ati what was the percent of the increase in the shares bought by employees from 2007 to 2008,14.1%,14.1,"subtract(55764, 48886), divide(#0, 48886)","[['', '2008', '2007', '2006'], ['range of risk free interest rates', '1.99% ( 1.99 % ) 20143.28% ( 20143.28 % )', '4.98% ( 4.98 % ) 20145.05% ( 20145.05 % )', '5.01% ( 5.01 % ) 20145.17% ( 20145.17 % )'], ['weighted average risk-free interest rate', '2.58% ( 2.58 % )', '5.02% ( 5.02 % )', '5.08% ( 5.08 % )'], ['expected life of the shares', '6 months', '6 months', '6 months'], ['range of expected volatility of underlying stock price', '27.85% ( 27.85 % ) 201428.51% ( 201428.51 % )', '27.53% ( 27.53 % ) 201428.74% ( 201428.74 % )', '29.60% ( 29.60 % )'], ['weighted average expected volatility of underlying stock price', '28.51% ( 28.51 % )', '28.22% ( 28.22 % )', '29.60% ( 29.60 % )'], ['expected annual dividends', 'n/a', 'n/a', 'n/a']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2008</th>
      <th>2007</th>
      <th>2006</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>range of risk free interest rates</td><td>1.99% ( 1.99 % ) 20143.28% ( 20143.28 % )</td><td>4.98% ( 4.98 % ) 20145.05% ( 20145.05 % )</td><td>5.01% ( 5.01 % ) 20145.17% ( 20145.17 % )</td></tr>
    <tr><td>weighted average risk-free interest rate</td><td>2.58% ( 2.58 % )</td><td>5.02% ( 5.02 % )</td><td>5.08% ( 5.08 % )</td></tr>
    <tr><td>expected life of the shares</td><td>6 months</td><td>6 months</td><td>6 months</td></tr>
    <tr><td>range of expected volatility of underlying stock price</td><td>27.85% ( 27.85 % ) 201428.51% ( 201428.51 % )</td><td>27.53% ( 27.53 % ) 201428.74% ( 201428.74 % )</td><td>29.60% ( 29.60 % )</td></tr>
    <tr><td>weighted average expected volatility of underlying stock price</td><td>28.51% ( 28.51 % )</td><td>28.22% ( 28.22 % )</td><td>29.60% ( 29.60 % )</td></tr>
    <tr><td>expected annual dividends</td><td>n/a</td><td>n/a</td><td>n/a</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(55764, 48886), divide(#0, 48886), multiply(#1, const_100)""",0
Single_ETR/2017/page_19.pdf-1,what was the percent of the change in the net revenue from 2016 to 2017,2.3%,2.3,"subtract(6318, 6179), divide(#0, 6179)","[['', 'amount ( in millions )'], ['2016 net revenue', '$ 6179'], ['retail electric price', '91'], ['regulatory credit resulting from reduction of thefederal corporate income tax rate', '56'], ['grand gulf recovery', '27'], ['louisiana act 55 financing savings obligation', '17'], ['volume/weather', '-61 ( 61 )'], ['other', '9'], ['2017 net revenue', '$ 6318']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>amount ( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2016 net revenue</td><td>$ 6179</td></tr>
    <tr><td>retail electric price</td><td>91</td></tr>
    <tr><td>regulatory credit resulting from reduction of thefederal corporate income tax rate</td><td>56</td></tr>
    <tr><td>grand gulf recovery</td><td>27</td></tr>
    <tr><td>louisiana act 55 financing savings obligation</td><td>17</td></tr>
    <tr><td>volume/weather</td><td>-61 ( 61 )</td></tr>
    <tr><td>other</td><td>9</td></tr>
    <tr><td>2017 net revenue</td><td>$ 6318</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(6318, 6179), divide(#0, 6179), multiply(#1, const_100)""",0
Single_ALXN/2016/page_89.pdf-2,how many square feet are leased by the company?,664000,664000.0,"add(514000, 81000), add(#0, 69000)","[['location', 'operations conducted', 'approximatesquare feet', 'leaseexpirationdates'], ['new haven connecticut', 'corporate headquarters and executive sales research and development offices', '514000', '2030'], ['dublin ireland', 'global supply chain distribution and administration offices', '160000', 'owned'], ['athlone ireland', 'commercial research and development manufacturing', '80000', 'owned'], ['lexington massachusetts', 'research and development offices', '81000', '2019'], ['bogart georgia', 'commercial research and development manufacturing', '70000', 'owned'], ['smithfield rhode island', 'commercial research and development manufacturing', '67000', 'owned'], ['zurich switzerland', 'regional executive and sales offices', '69000', '2025']]","<table>
  <thead>
    <tr>
      <th>location</th>
      <th>operations conducted</th>
      <th>approximatesquare feet</th>
      <th>leaseexpirationdates</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>new haven connecticut</td><td>corporate headquarters and executive sales research and development offices</td><td>514000</td><td>2030</td></tr>
    <tr><td>dublin ireland</td><td>global supply chain distribution and administration offices</td><td>160000</td><td>owned</td></tr>
    <tr><td>athlone ireland</td><td>commercial research and development manufacturing</td><td>80000</td><td>owned</td></tr>
    <tr><td>lexington massachusetts</td><td>research and development offices</td><td>81000</td><td>2019</td></tr>
    <tr><td>bogart georgia</td><td>commercial research and development manufacturing</td><td>70000</td><td>owned</td></tr>
    <tr><td>smithfield rhode island</td><td>commercial research and development manufacturing</td><td>67000</td><td>owned</td></tr>
    <tr><td>zurich switzerland</td><td>regional executive and sales offices</td><td>69000</td><td>2025</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(81000, 69000)""",0
Single_AWK/2018/page_141.pdf-2,what was the decrease in the total balance as of december 31 2018 from 2017?,3,3.0,"multiply(42, const_m1), subtract(#0, -45)","[['', '2018', '2017', '2016'], ['balance as of january 1', '$ -42 ( 42 )', '$ -40 ( 40 )', '$ -39 ( 39 )'], ['amounts charged to expense', '-33 ( 33 )', '-29 ( 29 )', '-27 ( 27 )'], ['amounts written off', '34', '30', '29'], ['recoveries of amounts written off', '-4 ( 4 )', '-3 ( 3 )', '-3 ( 3 )'], ['balance as of december 31', '$ -45 ( 45 )', '$ -42 ( 42 )', '$ -40 ( 40 )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>balance as of january 1</td><td>$ -42 ( 42 )</td><td>$ -40 ( 40 )</td><td>$ -39 ( 39 )</td></tr>
    <tr><td>amounts charged to expense</td><td>-33 ( 33 )</td><td>-29 ( 29 )</td><td>-27 ( 27 )</td></tr>
    <tr><td>amounts written off</td><td>34</td><td>30</td><td>29</td></tr>
    <tr><td>recoveries of amounts written off</td><td>-4 ( 4 )</td><td>-3 ( 3 )</td><td>-3 ( 3 )</td></tr>
    <tr><td>balance as of december 31</td><td>$ -45 ( 45 )</td><td>$ -42 ( 42 )</td><td>$ -40 ( 40 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(45, 42)""",0
Single_UNP/2010/page_30.pdf-3,what was the percentage increase for diesel fuel prices from 2009 to 2010?,30.9%,30.9,"subtract(2.29, 1.75), divide(#0, 1.75)","[['millions', '2010', '2009', '2008', '% (  % ) change 2010 v 2009', '% (  % ) change2009 v 2008'], ['compensation and benefits', '$ 4314', '$ 4063', '$ 4457', '6% ( 6 % )', '( 9 ) % (  % )'], ['fuel', '2486', '1763', '3983', '41', '-56 ( 56 )'], ['purchased services and materials', '1836', '1644', '1928', '12', '-15 ( 15 )'], ['depreciation', '1487', '1427', '1366', '4', '4'], ['equipment and other rents', '1142', '1180', '1326', '-3 ( 3 )', '-11 ( 11 )'], ['other', '719', '687', '840', '5', '-18 ( 18 )'], ['total', '$ 11984', '$ 10764', '$ 13900', '11% ( 11 % )', '( 23 ) % (  % )']]","<table>
  <thead>
    <tr>
      <th>millions</th>
      <th>2010</th>
      <th>2009</th>
      <th>2008</th>
      <th>% (  % ) change 2010 v 2009</th>
      <th>% (  % ) change2009 v 2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>compensation and benefits</td><td>$ 4314</td><td>$ 4063</td><td>$ 4457</td><td>6% ( 6 % )</td><td>( 9 ) % (  % )</td></tr>
    <tr><td>fuel</td><td>2486</td><td>1763</td><td>3983</td><td>41</td><td>-56 ( 56 )</td></tr>
    <tr><td>purchased services and materials</td><td>1836</td><td>1644</td><td>1928</td><td>12</td><td>-15 ( 15 )</td></tr>
    <tr><td>depreciation</td><td>1487</td><td>1427</td><td>1366</td><td>4</td><td>4</td></tr>
    <tr><td>equipment and other rents</td><td>1142</td><td>1180</td><td>1326</td><td>-3 ( 3 )</td><td>-11 ( 11 )</td></tr>
    <tr><td>other</td><td>719</td><td>687</td><td>840</td><td>5</td><td>-18 ( 18 )</td></tr>
    <tr><td>total</td><td>$ 11984</td><td>$ 10764</td><td>$ 13900</td><td>11% ( 11 % )</td><td>( 23 ) % (  % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(2.29, 1.75), divide(#0, 1.75), multiply(#1, const_100)""",0
Single_HFC/2011/page_85.pdf-1,what was the quick ratio in july 2011 based on frontier assets and liabilities,1.44,1.44,"add(872.7, 737.9), add(40.7, 1076.7), divide(#0, #1)","[['', '( in millions )'], ['cash and cash equivalents', '$ 872.7'], ['accounts receivable', '737.9'], ['inventories', '657.4'], ['properties plants and equipment', '1054.3'], ['goodwill', '2254.0'], ['income taxes receivable', '37.8'], ['other assets', '32.8'], ['accounts payable', '-1076.7 ( 1076.7 )'], ['accrued liabilities', '-40.7 ( 40.7 )'], ['long-term debt', '-370.6 ( 370.6 )'], ['other long-term liabilities', '-96.1 ( 96.1 )'], ['deferred income taxes', '-357.6 ( 357.6 )'], ['net tangible and intangible assets acquired and liabilities assumed', '$ 3705.2']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>( in millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>cash and cash equivalents</td><td>$ 872.7</td></tr>
    <tr><td>accounts receivable</td><td>737.9</td></tr>
    <tr><td>inventories</td><td>657.4</td></tr>
    <tr><td>properties plants and equipment</td><td>1054.3</td></tr>
    <tr><td>goodwill</td><td>2254.0</td></tr>
    <tr><td>income taxes receivable</td><td>37.8</td></tr>
    <tr><td>other assets</td><td>32.8</td></tr>
    <tr><td>accounts payable</td><td>-1076.7 ( 1076.7 )</td></tr>
    <tr><td>accrued liabilities</td><td>-40.7 ( 40.7 )</td></tr>
    <tr><td>long-term debt</td><td>-370.6 ( 370.6 )</td></tr>
    <tr><td>other long-term liabilities</td><td>-96.1 ( 96.1 )</td></tr>
    <tr><td>deferred income taxes</td><td>-357.6 ( 357.6 )</td></tr>
    <tr><td>net tangible and intangible assets acquired and liabilities assumed</td><td>$ 3705.2</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","```
add(872.7, 737.9), divide(#0, 1076.7)
```",0
Single_STT/2009/page_122.pdf-3,what is the percentage change in the standby letters of credit from 2008 to 2009?,-21.1%,-21.1,"subtract(4784, 6061), divide(#0, 6061)","[['( in millions )', '2009', '2008'], ['indemnified securities financing', '$ 365251', '$ 324590'], ['asset purchase agreements ( 1 )', '8211', '31780'], ['unfunded commitments to extend credit', '18078', '20981'], ['standby letters of credit', '4784', '6061']]","<table>
  <thead>
    <tr>
      <th>( in millions )</th>
      <th>2009</th>
      <th>2008</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>indemnified securities financing</td><td>$ 365251</td><td>$ 324590</td></tr>
    <tr><td>asset purchase agreements ( 1 )</td><td>8211</td><td>31780</td></tr>
    <tr><td>unfunded commitments to extend credit</td><td>18078</td><td>20981</td></tr>
    <tr><td>standby letters of credit</td><td>4784</td><td>6061</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(4784, 6061), divide(#0, 6061), multiply(#1, const_100)""",0
Single_CDW/2015/page_53.pdf-1,what was the percent of the change in days of sales outstanding from 2014 to 2015,14.3%,14.3,"subtract(48, 42), divide(#0, 42)","[['( in days )', 'december 31 , 2015', 'december 31 , 2014', 'december 31 , 2013'], ['days of sales outstanding ( dso ) ( 1 )', '48', '42', '44'], ['days of supply in inventory ( dio ) ( 2 )', '13', '13', '14'], ['days of purchases outstanding ( dpo ) ( 3 )', '-40 ( 40 )', '-34 ( 34 )', '-35 ( 35 )'], ['cash conversion cycle', '21', '21', '23']]","<table>
  <thead>
    <tr>
      <th>( in days )</th>
      <th>december 31 , 2015</th>
      <th>december 31 , 2014</th>
      <th>december 31 , 2013</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>days of sales outstanding ( dso ) ( 1 )</td><td>48</td><td>42</td><td>44</td></tr>
    <tr><td>days of supply in inventory ( dio ) ( 2 )</td><td>13</td><td>13</td><td>14</td></tr>
    <tr><td>days of purchases outstanding ( dpo ) ( 3 )</td><td>-40 ( 40 )</td><td>-34 ( 34 )</td><td>-35 ( 35 )</td></tr>
    <tr><td>cash conversion cycle</td><td>21</td><td>21</td><td>23</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(48, 42), divide(#0, 42), multiply(#1, const_100)""",0
Single_UPS/2015/page_35.pdf-2,what was the percentage total cumulative return on investment for united parcel service inc . for the five year period ending 12/31/2015?,60.61%,60.61,"subtract(160.61, const_100), divide(#0, const_100)","[['', '12/31/2010', '12/31/2011', '12/31/2012', '12/31/2013', '12/31/2014', '12/31/2015'], ['united parcel service inc .', '$ 100.00', '$ 103.88', '$ 107.87', '$ 158.07', '$ 171.77', '$ 160.61'], ['standard & poor 2019s 500 index', '$ 100.00', '$ 102.11', '$ 118.43', '$ 156.77', '$ 178.22', '$ 180.67'], ['dow jones transportation average', '$ 100.00', '$ 100.01', '$ 107.49', '$ 151.97', '$ 190.08', '$ 158.23']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>12/31/2010</th>
      <th>12/31/2011</th>
      <th>12/31/2012</th>
      <th>12/31/2013</th>
      <th>12/31/2014</th>
      <th>12/31/2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>united parcel service inc .</td><td>$ 100.00</td><td>$ 103.88</td><td>$ 107.87</td><td>$ 158.07</td><td>$ 171.77</td><td>$ 160.61</td></tr>
    <tr><td>standard & poor 2019s 500 index</td><td>$ 100.00</td><td>$ 102.11</td><td>$ 118.43</td><td>$ 156.77</td><td>$ 178.22</td><td>$ 180.67</td></tr>
    <tr><td>dow jones transportation average</td><td>$ 100.00</td><td>$ 100.01</td><td>$ 107.49</td><td>$ 151.97</td><td>$ 190.08</td><td>$ 158.23</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(160.61, 100.00), divide(#0, 100.00), multiply(#1, const_100)""",0
Single_AES/2016/page_98.pdf-4,"what was the average effective tax rate for december 31 , 2015 and 2014?",33.5,33.5,"add(41, 26), divide(#0, const_2)","[['years ended december 31,', '2016', '2015', '2014'], ['aes corporation', '$ -50 ( 50 )', '$ -31 ( 31 )', '$ -34 ( 34 )'], ['chile', '-9 ( 9 )', '-18 ( 18 )', '-30 ( 30 )'], ['colombia', '-8 ( 8 )', '29', '17'], ['mexico', '-8 ( 8 )', '-6 ( 6 )', '-14 ( 14 )'], ['philippines', '12', '8', '11'], ['united kingdom', '13', '11', '12'], ['argentina', '37', '124', '66'], ['other', '-2 ( 2 )', '-10 ( 10 )', '-17 ( 17 )'], ['total ( 1 )', '$ -15 ( 15 )', '$ 107', '$ 11']]","<table>
  <thead>
    <tr>
      <th>years ended december 31,</th>
      <th>2016</th>
      <th>2015</th>
      <th>2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>aes corporation</td><td>$ -50 ( 50 )</td><td>$ -31 ( 31 )</td><td>$ -34 ( 34 )</td></tr>
    <tr><td>chile</td><td>-9 ( 9 )</td><td>-18 ( 18 )</td><td>-30 ( 30 )</td></tr>
    <tr><td>colombia</td><td>-8 ( 8 )</td><td>29</td><td>17</td></tr>
    <tr><td>mexico</td><td>-8 ( 8 )</td><td>-6 ( 6 )</td><td>-14 ( 14 )</td></tr>
    <tr><td>philippines</td><td>12</td><td>8</td><td>11</td></tr>
    <tr><td>united kingdom</td><td>13</td><td>11</td><td>12</td></tr>
    <tr><td>argentina</td><td>37</td><td>124</td><td>66</td></tr>
    <tr><td>other</td><td>-2 ( 2 )</td><td>-10 ( 10 )</td><td>-17 ( 17 )</td></tr>
    <tr><td>total ( 1 )</td><td>$ -15 ( 15 )</td><td>$ 107</td><td>$ 11</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(41, 26), divide(#0, 2)""",1
Single_APTV/2018/page_36.pdf-2,what is the difference in percentage performance for aptiv plc versus the automotive peer group for the five year period ending december 31 2018?,23.91%,23.91,"subtract(130.80, const_100), subtract(106.89, const_100), divide(#0, const_100), divide(#1, const_100), subtract(#2, #3)","[['company index', 'december 31 2013', 'december 31 2014', 'december 31 2015', 'december 31 2016', 'december 31 2017', 'december 31 2018'], ['aptiv plc ( 1 )', '$ 100.00', '$ 122.75', '$ 146.49', '$ 117.11', '$ 178.46', '$ 130.80'], ['s&p 500 ( 2 )', '100.00', '113.69', '115.26', '129.05', '157.22', '150.33'], ['automotive peer group ( 3 )', '100.00', '107.96', '108.05', '107.72', '134.04', '106.89']]","<table>
  <thead>
    <tr>
      <th>company index</th>
      <th>december 31 2013</th>
      <th>december 31 2014</th>
      <th>december 31 2015</th>
      <th>december 31 2016</th>
      <th>december 31 2017</th>
      <th>december 31 2018</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>aptiv plc ( 1 )</td><td>$ 100.00</td><td>$ 122.75</td><td>$ 146.49</td><td>$ 117.11</td><td>$ 178.46</td><td>$ 130.80</td></tr>
    <tr><td>s&p 500 ( 2 )</td><td>100.00</td><td>113.69</td><td>115.26</td><td>129.05</td><td>157.22</td><td>150.33</td></tr>
    <tr><td>automotive peer group ( 3 )</td><td>100.00</td><td>107.96</td><td>108.05</td><td>107.72</td><td>134.04</td><td>106.89</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(130.80, 100.00), divide(#0, 100.00), multiply(#1, const_100), subtract(106.89, 100.00), divide(#3, 100.00), multiply(#4, const_100), subtract(#2, #5)""",0
Single_STT/2017/page_63.pdf-3,what is the roi of an investment is s&p500 index from 2012 to 2015?,53%,53.0,"subtract(153, 100), divide(#0, 100)","[['', '2012', '2013', '2014', '2015', '2016', '2017'], ['state street corporation', '$ 100', '$ 159', '$ 172', '$ 148', '$ 178', '$ 227'], ['s&p 500 index', '100', '132', '151', '153', '171', '208'], ['s&p financial index', '100', '136', '156', '154', '189', '230'], ['kbw bank index', '100', '138', '151', '151', '195', '231']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2013</th>
      <th>2014</th>
      <th>2015</th>
      <th>2016</th>
      <th>2017</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>state street corporation</td><td>$ 100</td><td>$ 159</td><td>$ 172</td><td>$ 148</td><td>$ 178</td><td>$ 227</td></tr>
    <tr><td>s&p 500 index</td><td>100</td><td>132</td><td>151</td><td>153</td><td>171</td><td>208</td></tr>
    <tr><td>s&p financial index</td><td>100</td><td>136</td><td>156</td><td>154</td><td>189</td><td>230</td></tr>
    <tr><td>kbw bank index</td><td>100</td><td>138</td><td>151</td><td>151</td><td>195</td><td>231</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(153, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_C/2017/page_205.pdf-3,what was the percentage increased in the total brokerage payables from 2016 to 2017,7.3%,7.3,"subtract(61342, 57152), divide(#0, 57152)","[['in millions of dollars', 'december 31 , 2017', 'december 31 , 2016'], ['receivables from customers', '$ 19215', '$ 10374'], ['receivables from brokers dealers and clearing organizations', '19169', '18513'], ['total brokerage receivables ( 1 )', '$ 38384', '$ 28887'], ['payables to customers', '$ 38741', '$ 37237'], ['payables to brokers dealers and clearing organizations', '22601', '19915'], ['total brokerage payables ( 1 )', '$ 61342', '$ 57152']]","<table>
  <thead>
    <tr>
      <th>in millions of dollars</th>
      <th>december 31 , 2017</th>
      <th>december 31 , 2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>receivables from customers</td><td>$ 19215</td><td>$ 10374</td></tr>
    <tr><td>receivables from brokers dealers and clearing organizations</td><td>19169</td><td>18513</td></tr>
    <tr><td>total brokerage receivables ( 1 )</td><td>$ 38384</td><td>$ 28887</td></tr>
    <tr><td>payables to customers</td><td>$ 38741</td><td>$ 37237</td></tr>
    <tr><td>payables to brokers dealers and clearing organizations</td><td>22601</td><td>19915</td></tr>
    <tr><td>total brokerage payables ( 1 )</td><td>$ 61342</td><td>$ 57152</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(61342, 57152), divide(#0, 57152), multiply(#1, const_100)""",0
Single_LKQ/2009/page_77.pdf-1,what was the percentage change in rental expense for operating leases from 2007 to 2008?,84%,84.0,"subtract(49.0, 26.6), divide(#0, 26.6)","[['2010', '$ 55178'], ['2011', '45275'], ['2012', '36841'], ['2013', '30789'], ['2014', '22094'], ['thereafter', '59263'], ['future minimum lease payments', '$ 249440']]","<table>
  <thead>
    <tr>
      <th>2010</th>
      <th>$ 55178</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2011</td><td>45275</td></tr>
    <tr><td>2012</td><td>36841</td></tr>
    <tr><td>2013</td><td>30789</td></tr>
    <tr><td>2014</td><td>22094</td></tr>
    <tr><td>thereafter</td><td>59263</td></tr>
    <tr><td>future minimum lease payments</td><td>$ 249440</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(49.0, 26.6), divide(#0, 26.6), multiply(#1, const_100)""",0
Single_STT/2001/page_36.pdf-4,what is the growth rate in total fee revenue in 2000?,15.3%,15.3,"subtract(2665, 2312), divide(#0, 2312)","[['( dollars in millions )', '2001 ( 1 )', '2000', '1999 ( 2 )', 'change 00-01', 'adjusted change 00-01 ( 3 )'], ['servicing fees', '$ 1624', '$ 1425', '$ 1170', '14% ( 14 % )', '14% ( 14 % )'], ['management fees', '511', '581', '600', '-12 ( 12 )', '-5 ( 5 )'], ['foreign exchange trading', '368', '387', '306', '-5 ( 5 )', '-5 ( 5 )'], ['processing fees and other', '329', '272', '236', '21', '21'], ['total fee revenue', '$ 2832', '$ 2665', '$ 2312', '6', '8']]","<table>
  <thead>
    <tr>
      <th>( dollars in millions )</th>
      <th>2001 ( 1 )</th>
      <th>2000</th>
      <th>1999 ( 2 )</th>
      <th>change 00-01</th>
      <th>adjusted change 00-01 ( 3 )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>servicing fees</td><td>$ 1624</td><td>$ 1425</td><td>$ 1170</td><td>14% ( 14 % )</td><td>14% ( 14 % )</td></tr>
    <tr><td>management fees</td><td>511</td><td>581</td><td>600</td><td>-12 ( 12 )</td><td>-5 ( 5 )</td></tr>
    <tr><td>foreign exchange trading</td><td>368</td><td>387</td><td>306</td><td>-5 ( 5 )</td><td>-5 ( 5 )</td></tr>
    <tr><td>processing fees and other</td><td>329</td><td>272</td><td>236</td><td>21</td><td>21</td></tr>
    <tr><td>total fee revenue</td><td>$ 2832</td><td>$ 2665</td><td>$ 2312</td><td>6</td><td>8</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(2832, 2665), divide(#0, 2665), multiply(#1, const_100)""",0
Single_KMI/2010/page_2.pdf-1,what is the total number of shares of common stock outstanding?,809462927,809462927.0,"add(597213410, 100000000), add(#0, 2462927), add(#1, 109786590)","[['class a common stock', '597213410'], ['class b common stock', '100000000'], ['class c common stock', '2462927'], ['class p common stock', '109786590']]","<table>
  <thead>
    <tr>
      <th>class a common stock</th>
      <th>597213410</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>class b common stock</td><td>100000000</td></tr>
    <tr><td>class c common stock</td><td>2462927</td></tr>
    <tr><td>class p common stock</td><td>109786590</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(597213410, 100000000), add(#0, 2462927), add(#1, 109786590)""",1
Single_TFX/2014/page_44.pdf-1,what is the rate of return of an investment in teleflex incorporated from 2009 to 2010?,2%,2.0,"subtract(102, 100), divide(#0, 100)","[['company / index', '2009', '2010', '2011', '2012', '2013', '2014'], ['teleflex incorporated', '100', '102', '119', '142', '190', '235'], ['s&p 500 index', '100', '115', '117', '136', '180', '205'], ['s&p 500 healthcare equipment & supply index', '100', '97', '97', '113', '144', '182']]","<table>
  <thead>
    <tr>
      <th>company / index</th>
      <th>2009</th>
      <th>2010</th>
      <th>2011</th>
      <th>2012</th>
      <th>2013</th>
      <th>2014</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>teleflex incorporated</td><td>100</td><td>102</td><td>119</td><td>142</td><td>190</td><td>235</td></tr>
    <tr><td>s&p 500 index</td><td>100</td><td>115</td><td>117</td><td>136</td><td>180</td><td>205</td></tr>
    <tr><td>s&p 500 healthcare equipment & supply index</td><td>100</td><td>97</td><td>97</td><td>113</td><td>144</td><td>182</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(102, 100), divide(#0, 100), multiply(#1, const_100)""",0
Single_LMT/2018/page_85.pdf-3,what is the percentage change in weighted average common shares outstanding for basic computations from 2016 to 2017?,-3.8%,-3.8,"subtract(287.8, 299.3), divide(#0, 299.3)","[['', '2018', '2017', '2016'], ['weighted average common shares outstanding for basic computations', '284.5', '287.8', '299.3'], ['weighted average dilutive effect of equity awards', '2.3', '2.8', '3.8'], ['weighted average common shares outstanding for diluted computations', '286.8', '290.6', '303.1']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2018</th>
      <th>2017</th>
      <th>2016</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>weighted average common shares outstanding for basic computations</td><td>284.5</td><td>287.8</td><td>299.3</td></tr>
    <tr><td>weighted average dilutive effect of equity awards</td><td>2.3</td><td>2.8</td><td>3.8</td></tr>
    <tr><td>weighted average common shares outstanding for diluted computations</td><td>286.8</td><td>290.6</td><td>303.1</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(287.8, 299.3), divide(#0, 299.3), multiply(#1, const_100)""",0
Single_RSG/2012/page_145.pdf-1,what was the percentage decline in the total restricted cash and marketable securities from 2011 to 2012,-13.4%,-13.4,"subtract(164.2, 189.6), divide(#0, 189.6)","[['', '2012', '2011'], ['financing proceeds', '$ 24.7', '$ 22.5'], ['capping closure and post-closure obligations', '54.8', '54.9'], ['self-insurance', '81.3', '75.2'], ['other', '3.4', '37.0'], ['total restricted cash and marketable securities', '$ 164.2', '$ 189.6']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>financing proceeds</td><td>$ 24.7</td><td>$ 22.5</td></tr>
    <tr><td>capping closure and post-closure obligations</td><td>54.8</td><td>54.9</td></tr>
    <tr><td>self-insurance</td><td>81.3</td><td>75.2</td></tr>
    <tr><td>other</td><td>3.4</td><td>37.0</td></tr>
    <tr><td>total restricted cash and marketable securities</td><td>$ 164.2</td><td>$ 189.6</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(189.6, 164.2), divide(#0, 189.6), multiply(#1, const_100)""",0
Single_UAA/2016/page_82.pdf-3,what percentage change in rent expense from 2015 to 2016?,31.3%,31.3,"subtract(109.0, 83.0), divide(#0, 83.0)","[['2017', '$ 114857'], ['2018', '127504'], ['2019', '136040'], ['2020', '133092'], ['2021', '122753'], ['2022 and thereafter', '788180'], ['total future minimum lease payments', '$ 1422426']]","<table>
  <thead>
    <tr>
      <th>2017</th>
      <th>$ 114857</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2018</td><td>127504</td></tr>
    <tr><td>2019</td><td>136040</td></tr>
    <tr><td>2020</td><td>133092</td></tr>
    <tr><td>2021</td><td>122753</td></tr>
    <tr><td>2022 and thereafter</td><td>788180</td></tr>
    <tr><td>total future minimum lease payments</td><td>$ 1422426</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(109.0, 83.0), divide(#0, 83.0), multiply(#1, const_100)""",0
Single_STT/2001/page_74.pdf-3,"between 2000 and 2001 , what was the percent increase of unrealized gains?",405.3%,405.3,"subtract(96, 19), divide(#0, 19)","[['( dollars in millions )', '2001', '2000'], ['unrealized gain on available-for-sale securities', '$ 96', '$ 19'], ['foreign currency translation', '-27 ( 27 )', '-20 ( 20 )'], ['other', '1', ''], ['total', '$ 70', '$ -1 ( 1 )']]","<table>
  <thead>
    <tr>
      <th>( dollars in millions )</th>
      <th>2001</th>
      <th>2000</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>unrealized gain on available-for-sale securities</td><td>$ 96</td><td>$ 19</td></tr>
    <tr><td>foreign currency translation</td><td>-27 ( 27 )</td><td>-20 ( 20 )</td></tr>
    <tr><td>other</td><td>1</td><td></td></tr>
    <tr><td>total</td><td>$ 70</td><td>$ -1 ( 1 )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(96, 19), divide(#0, 19), multiply(#1, const_100)""",0
Single_ZBH/2015/page_35.pdf-2,what is the $ 500.0 million in principal paid in 2015 as a percentage of the $ 2.5 billion in outstanding borrowings?,20%,20.0,"multiply(2.5, const_1000), divide(500.0, #0)","[['principal', 'interest rate', 'maturity date'], ['$ 500.0', '1.450% ( 1.450 % )', 'april 1 2017'], ['1150.0', '2.000', 'april 1 2018'], ['500.0', '4.625', 'november 30 2019'], ['1500.0', '2.700', 'april 1 2020'], ['300.0', '3.375', 'november 30 2021'], ['750.0', '3.150', 'april 1 2022'], ['2000.0', '3.550', 'april 1 2025'], ['500.0', '4.250', 'august 15 2035'], ['500.0', '5.750', 'november 30 2039'], ['1250.0', '4.450', 'august 15 2045']]","<table>
  <thead>
    <tr>
      <th>principal</th>
      <th>interest rate</th>
      <th>maturity date</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>$ 500.0</td><td>1.450% ( 1.450 % )</td><td>april 1 2017</td></tr>
    <tr><td>1150.0</td><td>2.000</td><td>april 1 2018</td></tr>
    <tr><td>500.0</td><td>4.625</td><td>november 30 2019</td></tr>
    <tr><td>1500.0</td><td>2.700</td><td>april 1 2020</td></tr>
    <tr><td>300.0</td><td>3.375</td><td>november 30 2021</td></tr>
    <tr><td>750.0</td><td>3.150</td><td>april 1 2022</td></tr>
    <tr><td>2000.0</td><td>3.550</td><td>april 1 2025</td></tr>
    <tr><td>500.0</td><td>4.250</td><td>august 15 2035</td></tr>
    <tr><td>500.0</td><td>5.750</td><td>november 30 2039</td></tr>
    <tr><td>1250.0</td><td>4.450</td><td>august 15 2045</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""divide(500.0, 2500.0), multiply(#0, const_100)""",0
Single_UPS/2012/page_51.pdf-1,what is the growth rate in the net income from 2011 to 2012?,-78.8%,-78.8,"subtract(807, 3804), divide(#0, 3804)","[['', '2012', '2011', '2010'], ['net income', '$ 807', '$ 3804', '$ 3338'], ['non-cash operating activities ( a )', '7301', '4505', '4398'], ['pension and postretirement plan contributions ( ups-sponsored plans )', '-917 ( 917 )', '-1436 ( 1436 )', '-3240 ( 3240 )'], ['income tax receivables and payables', '280', '236', '-319 ( 319 )'], ['changes in working capital and other noncurrent assets and liabilities', '-148 ( 148 )', '-12 ( 12 )', '-340 ( 340 )'], ['other operating activities', '-107 ( 107 )', '-24 ( 24 )', '-2 ( 2 )'], ['net cash from operating activities', '$ 7216', '$ 7073', '$ 3835']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2012</th>
      <th>2011</th>
      <th>2010</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>net income</td><td>$ 807</td><td>$ 3804</td><td>$ 3338</td></tr>
    <tr><td>non-cash operating activities ( a )</td><td>7301</td><td>4505</td><td>4398</td></tr>
    <tr><td>pension and postretirement plan contributions ( ups-sponsored plans )</td><td>-917 ( 917 )</td><td>-1436 ( 1436 )</td><td>-3240 ( 3240 )</td></tr>
    <tr><td>income tax receivables and payables</td><td>280</td><td>236</td><td>-319 ( 319 )</td></tr>
    <tr><td>changes in working capital and other noncurrent assets and liabilities</td><td>-148 ( 148 )</td><td>-12 ( 12 )</td><td>-340 ( 340 )</td></tr>
    <tr><td>other operating activities</td><td>-107 ( 107 )</td><td>-24 ( 24 )</td><td>-2 ( 2 )</td></tr>
    <tr><td>net cash from operating activities</td><td>$ 7216</td><td>$ 7073</td><td>$ 3835</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(807, 3804), divide(#0, 3804), multiply(#1, const_100)""",0
Single_MMM/2007/page_16.pdf-1,what was the percent of the total tumber of shares purchased that was not of the shares purchased as part of publicly announced plans or programs,2%,2.0,"subtract(39756386, 38972900), divide(#0, 38972900)","[['period', 'total number of shares purchased ( 1 )', 'average price paid per share', 'total number of shares purchased as part of publicly announced plans or programs', 'maximum approximate dollar value of shares that may yet be purchased under the plans or programs ( millions )'], ['january 1-31 2007', '1311268', '$ 76.33', '1277200', '$ 651'], ['february 1-28 2007', '6542591', '$ 75.12', '6522500', '$ 6731'], ['march 1-31 2007', '8187472', '$ 75.59', '8151700', '$ 6115'], ['total january 1 2014 march 31 2007', '16041331', '$ 75.46', '15951400', '$ 6115'], ['april 1-30 2007', '3548221', '$ 77.55', '3476700', '$ 5846'], ['may 1-31 2007', '4428219', '$ 85.84', '4202800', '$ 5485'], ['june 1-30 2007', '3885033', '$ 86.58', '3810800', '$ 5155'], ['total april 1 2014 june 30 2007', '11861473', '$ 83.60', '11490300', '$ 5155'], ['july 1-31 2007', '1646251', '$ 89.01', '1510300', '$ 5021'], ['august 1-31 2007', '2329478', '$ 87.05', '2247300', '$ 4825'], ['september 1-30 2007', '2086564', '$ 90.24', '2029600', '$ 4642'], ['total july 1 2014 september 30 2007', '6062293', '$ 88.68', '5787200', '$ 4642'], ['october 1-31 2007', '2192302', '$ 88.89', '2178500', '$ 4448'], ['november 1-30 2007', '1702375', '$ 82.35', '1692000', '$ 4309'], ['december 1-31 2007', '1896612', '$ 85.41', '1873500', '$ 4149'], ['total october 1 2014 dec . 31 2007', '5791289', '$ 85.83', '5744000', '$ 4149'], ['total january 1 2014 december 31 2007', '39756386', '$ 81.42', '38972900', '$ 4149']]","<table>
  <thead>
    <tr>
      <th>period</th>
      <th>total number of shares purchased ( 1 )</th>
      <th>average price paid per share</th>
      <th>total number of shares purchased as part of publicly announced plans or programs</th>
      <th>maximum approximate dollar value of shares that may yet be purchased under the plans or programs ( millions )</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>january 1-31 2007</td><td>1311268</td><td>$ 76.33</td><td>1277200</td><td>$ 651</td></tr>
    <tr><td>february 1-28 2007</td><td>6542591</td><td>$ 75.12</td><td>6522500</td><td>$ 6731</td></tr>
    <tr><td>march 1-31 2007</td><td>8187472</td><td>$ 75.59</td><td>8151700</td><td>$ 6115</td></tr>
    <tr><td>total january 1 2014 march 31 2007</td><td>16041331</td><td>$ 75.46</td><td>15951400</td><td>$ 6115</td></tr>
    <tr><td>april 1-30 2007</td><td>3548221</td><td>$ 77.55</td><td>3476700</td><td>$ 5846</td></tr>
    <tr><td>may 1-31 2007</td><td>4428219</td><td>$ 85.84</td><td>4202800</td><td>$ 5485</td></tr>
    <tr><td>june 1-30 2007</td><td>3885033</td><td>$ 86.58</td><td>3810800</td><td>$ 5155</td></tr>
    <tr><td>total april 1 2014 june 30 2007</td><td>11861473</td><td>$ 83.60</td><td>11490300</td><td>$ 5155</td></tr>
    <tr><td>july 1-31 2007</td><td>1646251</td><td>$ 89.01</td><td>1510300</td><td>$ 5021</td></tr>
    <tr><td>august 1-31 2007</td><td>2329478</td><td>$ 87.05</td><td>2247300</td><td>$ 4825</td></tr>
    <tr><td>september 1-30 2007</td><td>2086564</td><td>$ 90.24</td><td>2029600</td><td>$ 4642</td></tr>
    <tr><td>total july 1 2014 september 30 2007</td><td>6062293</td><td>$ 88.68</td><td>5787200</td><td>$ 4642</td></tr>
    <tr><td>october 1-31 2007</td><td>2192302</td><td>$ 88.89</td><td>2178500</td><td>$ 4448</td></tr>
    <tr><td>november 1-30 2007</td><td>1702375</td><td>$ 82.35</td><td>1692000</td><td>$ 4309</td></tr>
    <tr><td>december 1-31 2007</td><td>1896612</td><td>$ 85.41</td><td>1873500</td><td>$ 4149</td></tr>
    <tr><td>total october 1 2014 dec . 31 2007</td><td>5791289</td><td>$ 85.83</td><td>5744000</td><td>$ 4149</td></tr>
    <tr><td>total january 1 2014 december 31 2007</td><td>39756386</td><td>$ 81.42</td><td>38972900</td><td>$ 4149</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(39756386, 38972900), divide(#0, 39756386), multiply(#1, const_100)""",0
Single_MAA/2017/page_89.pdf-2,what was the percent of the change in the weighted average grant date fair value per share of restricted stock from 2016 to 2017,15.5%,15.5,"subtract(84.53, 73.20), divide(#0, 73.20)","[['', '2017', '2016', '2015'], ['risk free rate', '0.65% ( 0.65 % ) - 1.57% ( 1.57 % )', '0.49% ( 0.49 % ) - 1.27% ( 1.27 % )', '0.10% ( 0.10 % ) - 1.05% ( 1.05 % )'], ['dividend yield', '3.573% ( 3.573 % )', '3.634% ( 3.634 % )', '3.932% ( 3.932 % )'], ['volatility', '20.43% ( 20.43 % ) - 21.85% ( 21.85 % )', '18.41% ( 18.41 % ) - 19.45% ( 19.45 % )', '15.41% ( 15.41 % ) - 16.04% ( 16.04 % )'], ['requisite service period', '3 years', '3 years', '3 years']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2017</th>
      <th>2016</th>
      <th>2015</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>risk free rate</td><td>0.65% ( 0.65 % ) - 1.57% ( 1.57 % )</td><td>0.49% ( 0.49 % ) - 1.27% ( 1.27 % )</td><td>0.10% ( 0.10 % ) - 1.05% ( 1.05 % )</td></tr>
    <tr><td>dividend yield</td><td>3.573% ( 3.573 % )</td><td>3.634% ( 3.634 % )</td><td>3.932% ( 3.932 % )</td></tr>
    <tr><td>volatility</td><td>20.43% ( 20.43 % ) - 21.85% ( 21.85 % )</td><td>18.41% ( 18.41 % ) - 19.45% ( 19.45 % )</td><td>15.41% ( 15.41 % ) - 16.04% ( 16.04 % )</td></tr>
    <tr><td>requisite service period</td><td>3 years</td><td>3 years</td><td>3 years</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(84.53, 73.20), divide(#0, 73.20), multiply(#1, const_100)""",0
Single_IPG/2013/page_36.pdf-4,"what is the growth rate in the balance of cash , cash equivalents and marketable securities from 2012 to 2013?",-36.6%,-36.6,"subtract(1642.1, 2590.8), divide(#0, 2590.8)","[['balance sheet data', 'december 31 , 2013', 'december 31 , 2012'], ['cash cash equivalents and marketable securities', '$ 1642.1', '$ 2590.8'], ['short-term borrowings', '$ 179.1', '$ 172.1'], ['current portion of long-term debt', '353.6', '216.6'], ['long-term debt', '1129.8', '2060.8'], ['total debt', '$ 1662.5', '$ 2449.5']]","<table>
  <thead>
    <tr>
      <th>balance sheet data</th>
      <th>december 31 , 2013</th>
      <th>december 31 , 2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>cash cash equivalents and marketable securities</td><td>$ 1642.1</td><td>$ 2590.8</td></tr>
    <tr><td>short-term borrowings</td><td>$ 179.1</td><td>$ 172.1</td></tr>
    <tr><td>current portion of long-term debt</td><td>353.6</td><td>216.6</td></tr>
    <tr><td>long-term debt</td><td>1129.8</td><td>2060.8</td></tr>
    <tr><td>total debt</td><td>$ 1662.5</td><td>$ 2449.5</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(1642.1, 2590.8), divide(#0, 2590.8), multiply(#1, const_100)""",0
Single_CE/2010/page_134.pdf-2,what portion of the total shares subject to outstanding awards is under the 2009 global incentive plan?,70.1%,70.1,"add(2530454, 5923147), divide(5923147, #0)","[['', 'shares available for awards', 'shares subject to outstanding awards'], ['2009 global incentive plan', '2322450', '2530454'], ['2004 stock incentive plan', '-', '5923147']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>shares available for awards</th>
      <th>shares subject to outstanding awards</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>2009 global incentive plan</td><td>2322450</td><td>2530454</td></tr>
    <tr><td>2004 stock incentive plan</td><td>-</td><td>5923147</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(2530454, 5923147), divide(2530454, #0)""",0
Single_PNC/2012/page_222.pdf-1,what was the average weighted-average grant-date fair value of incentive/ performance unit share awards and restricted stock/unit awards granted in 2012 and 2011?,62.0,62.0,"add(60.68, 63.25), divide(#0, const_2)","[['shares in thousands december 31 2011', 'nonvested incentive/ performance unit shares 830', 'weighted-averagegrantdate fairvalue $ 61.68', 'nonvested restricted stock/ unit shares 2512', 'weighted-averagegrantdate fairvalue $ 54.87'], ['granted', '465', '60.70', '1534', '60.67'], ['vested', '-100 ( 100 )', '64.21', '-831 ( 831 )', '45.47'], ['forfeited', '-76 ( 76 )', '60.27', '-154 ( 154 )', '60.51'], ['december 31 2012', '1119', '$ 61.14', '3061', '$ 60.04']]","<table>
  <thead>
    <tr>
      <th>shares in thousands december 31 2011</th>
      <th>nonvested incentive/ performance unit shares 830</th>
      <th>weighted-averagegrantdate fairvalue $ 61.68</th>
      <th>nonvested restricted stock/ unit shares 2512</th>
      <th>weighted-averagegrantdate fairvalue $ 54.87</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>granted</td><td>465</td><td>60.70</td><td>1534</td><td>60.67</td></tr>
    <tr><td>vested</td><td>-100 ( 100 )</td><td>64.21</td><td>-831 ( 831 )</td><td>45.47</td></tr>
    <tr><td>forfeited</td><td>-76 ( 76 )</td><td>60.27</td><td>-154 ( 154 )</td><td>60.51</td></tr>
    <tr><td>december 31 2012</td><td>1119</td><td>$ 61.14</td><td>3061</td><td>$ 60.04</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""add(60.68, 63.25), divide(#0, 2)""",1
Single_ETR/2013/page_28.pdf-1,what is the percent change in debt to capital from 2012 to 2013?,1.38%,1.38,"subtract(58.7, 57.9), divide(#0, 57.9)","[['', '2013', '2012'], ['debt to capital', '57.9% ( 57.9 % )', '58.7% ( 58.7 % )'], ['effect of excluding securitization bonds', '( 1.6% ( 1.6 % ) )', '( 1.8% ( 1.8 % ) )'], ['debt to capital excluding securitization bonds ( a )', '56.3% ( 56.3 % )', '56.9% ( 56.9 % )'], ['effect of subtracting cash', '( 1.5% ( 1.5 % ) )', '( 1.1% ( 1.1 % ) )'], ['net debt to net capital excluding securitization bonds ( a )', '54.8% ( 54.8 % )', '55.8% ( 55.8 % )']]","<table>
  <thead>
    <tr>
      <th></th>
      <th>2013</th>
      <th>2012</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>debt to capital</td><td>57.9% ( 57.9 % )</td><td>58.7% ( 58.7 % )</td></tr>
    <tr><td>effect of excluding securitization bonds</td><td>( 1.6% ( 1.6 % ) )</td><td>( 1.8% ( 1.8 % ) )</td></tr>
    <tr><td>debt to capital excluding securitization bonds ( a )</td><td>56.3% ( 56.3 % )</td><td>56.9% ( 56.9 % )</td></tr>
    <tr><td>effect of subtracting cash</td><td>( 1.5% ( 1.5 % ) )</td><td>( 1.1% ( 1.1 % ) )</td></tr>
    <tr><td>net debt to net capital excluding securitization bonds ( a )</td><td>54.8% ( 54.8 % )</td><td>55.8% ( 55.8 % )</td></tr>
  </tbody>
</table>",gpt-4o,Basic-Improved,"{'system_prompt': '\n    You are a financial computation assistant who generates **stepwise mathematical programs** \n    based on **pre-text, post-text, and an HTML table**.\n\n    ---\n    \n    ## **Rules for Program Generation**\n    1. **Retrieve numeric values** from `PRE TEXT`, `POST TEXT`, and `HTML TABLE`.  \n    2. **Use valid mathematical operations**:  \n       - `add(arg1, arg2)`, `subtract(arg1, arg2)`, `multiply(arg1, arg2)`, `divide(arg1, arg2)`.  \n    3. **Reference intermediate results properly** using `#0`, `#1`, etc.:  \n       - `#0` stores the first computed step.  \n       - `#1` stores the second computed step, and so on.  \n    4. **Use predefined constants** instead of fixed values when applicable:  \n       - Example: Use `const_100` instead of `100` when multiplying for percentage conversion.  \n    5. **Maintain correct order of operations**:  \n       - Operations must follow the logical sequence of calculations.  \n    6. **Output only the program.** Do not provide explanations or commentary.  \n\n    === PRE TEXT ===\n    {pre_text}\n\n    === POST TEXT ===\n    {post_text}\n\n    === HTML TABLE ===\n    {table}\n\n    ---\n    \n    ## **Common Mistakes to Avoid**\n    \n    **1. Incorrect Variable References (`#0`, `#1`)**\n    - **Mistake:** Using an earlier result instead of the correct intermediate value.  \n    - **Example (Incorrect)**:  \n      `""add(92, 4), add(#0, 1), add(#0, 3)""`  \n    - **Correct Version:**  \n      `""add(92, 4), add(#0, 1), add(#1, 3)""`  \n\n    **2. Wrong Mathematical Operations**\n    - **Mistake:** Using `divide()` instead of `subtract()`, or vice versa.  \n    - **Example (Incorrect)**:  \n      `""divide(195.80, 100.00)""`  \n    - **Correct Version:**  \n      `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_100)""`  \n\n    **3. Incorrect Constant Usage (`const_100`, `const_3`)**\n    - **Mistake:** Hardcoding numbers instead of using predefined constants.  \n    - **Example (Incorrect)**:  \n      `""divide(#1, 3)""`  \n    - **Correct Version:**  \n      `""divide(#1, const_3)""`  \n\n    **4. Missing or Extra Computation Steps**\n    - **Mistake:** Forgetting an essential calculation step.  \n    - **Example (Incorrect)**:  \n      `""add(75.0, 72.7)""`  *(Missing final division step)*  \n    - **Correct Version:**  \n      `""add(75.0, 72.7), divide(#0, 20)""`  \n\n     **5. Reordering Without Preserving Meaning**\n    - **Mistake:** Changing operation order in a way that affects results.  \n    - **Example (Incorrect)**:  \n      `""divide(22500, 53620), multiply(#0, 100)""`  \n    - **Correct Version:**  \n      `""multiply(22.5, const_1000), divide(#0, 53620)""`  \n\n    ---\n    \n    ## **Examples of Correct Program Generation**\n    \n    **Example 1: Percentage Change Calculation**\n    \n    **User Question:**  \n    ""What is the percentage change in total gross amount of unrecognized tax benefits from 2011 to 2012?""\n    \n    === PRE TEXT ===  \n    ""The total gross unrecognized tax benefits have been increasing steadily over the years, as shown below.""\n    \n    === HTML TABLE ===  \n    ```\n    | Year  | Total Gross Unrecognized Tax Benefits |\n    |-------|--------------------------------------|\n    | 2011  | 57.9                                |\n    | 2012  | 58.7                                |\n    ```\n    \n    **Generated Program:**  \n    `""subtract(58.7, 57.9), divide(#0, 57.9), multiply(#1, const_100)""`\n\n    ---\n    \n    **Example 2: Summation of Multiple Cases**\n    \n    **User Question:**  \n    ""What are the total number of pending tobacco-related cases in the United States in 2017?""\n    \n    === HTML TABLE ===  \n    ```\n    | Case Type                                           | 2017 | 2016 | 2015 |\n    |----------------------------------------------------|------|------|------|\n    | Individual smoking and health cases               | 92   | 70   | 65   |\n    | Class action and aggregated claims litigation     | 4    | 5    | 5    |\n    | Healthcare cost recovery actions                  | 1    | 1    | 1    |\n    | ""Lights/Ultra Lights"" class actions               | 3    | 8    | 11   |\n    ```\n    \n    **Generated Program:**  \n    `""add(92, 4), add(#0, 1), add(#1, 3)""`\n\n    ---\n    \n    **Example 3: Extracting Values from Pre-Text**\n    \n    **User Question:**  \n    ""By how much did income from continuing operations increase from 2012 to 2014?""\n    \n    === PRE TEXT ===  \n    ""In 2012, income from continuing operations was 100 million. By 2014, it had grown to 195.8 million.""\n    \n    **Generated Program:**  \n    `""subtract(195.80, 100), divide(#0, 100), multiply(#1, const_1)""`\n\n    ---\n    \n    **Final Instructions**\n    - Extract values from **all** sources: Pre-Text, Post-Text, and Table.\n    - Construct the **correct mathematical program**.\n    - **Return only the program.** Do not include explanations or reasoning.\n    '}","""subtract(57.9, 58.7), divide(#0, 58.7), multiply(#1, const_100)""",0
